prog: {
  Assign(x,Const(0))
  Assign(a,New(A))
  Put(Ref(a),Const(field),Const(7))
  While(Less(Ref(x),Const(100)),{
    Put(Ref(a),Const(field),Const(7))
    Assign(x,Plus(Ref(x),Const(1)))
  })
  Assign(r,Ref(a))
}
val x0 = Map()
val x1 = Map("val" -> 0)
val x2 = Map("&x" -> x1)
val x3 = Map("&x" -> x1, (A,1) -> Map())
val x4 = Map("val" -> (A,1))
val x5 = Map("&x" -> x1, "&a" -> x4)
val x6 = Map("field" -> 7)
val x7 = Map("&x" -> x1, "&a" -> x4, (A,1) -> x6)
val x10 = (1,x9)
starting spec loop with x7
val x11 = Map("val" -> 1)
val x12 = Map("&x" -> x11, "&a" -> x4, (A,1) -> x6)
lub(x7, x12) = ?
lub_x8(x7,x7,x12)
lub_x8_&x(x1,x1,x11)
lub_x8_&x_val(0,0,1)
0
1
1
confirmed iterative loop, d = 1
val x13 = x9 + -1
Set(("val",(x13,x9)))
val x14 = Map("val" -> x13)
val x15 = Map("val" -> x9)
lub_x8_&a(x4,x4,x4)
lub_x8_(A,1)(x6,x6,x6)
Set(("&x",(x14,x15)), ("&a",(x4,x4)), ((A,1),(x6,x6)))
val x16 = Map("&x" -> x14, "&a" -> x4, (A,1) -> x6)
val x17 = Map("&x" -> x15, "&a" -> x4, (A,1) -> x6)
lub(x7, x12) = x16
starting spec loop with x16
val x18 = x9 < 101
lub(x7, x17) = ?
lub_x8(x7,x16,x17)
lub_x8_&x(x1,x14,x15)
lub_x8_&x_val(0,x13,x9)
val x19 = x9 * -1
val x20 = x19 + 1
x9 + -1
x9
1
confirmed iterative loop, d = 1
Set(("val",(x13,x9)))
lub_x8_&a(x4,x4,x4)
lub_x8_(A,1)(x6,x6,x6)
Set(("&x",(x14,x15)), ("&a",(x4,x4)), ((A,1),(x6,x6)))
lub(x7, x17) = x16
val x8_&x_val = { x9 => x9 }
val x8 = { x9 => x17 }
fixindex: 100
val x21 = Map("val" -> 100)
val x22 = Map("&x" -> x21, "&a" -> x4, (A,1) -> x6)
val x23 = Map("&x" -> x21, "&a" -> x4, (A,1) -> x6, "&r" -> x4)
res: ()
store: x23
transformed: x23
sched:
val x21 = Map("val" -> 100)
val x6 = Map("field" -> 7)
val x4 = Map("val" -> (A,1))
val x23 = Map("&x" -> x21, "&a" -> x4, (A,1) -> x6, "&r" -> x4)
term:
Map("&x" -> Map("val" -> 100), "&a" -> Map("val" -> (A,1)), (A,1) -> Map("field" -> 7), "&r" -> Map("val" -> (A,1)))
----
