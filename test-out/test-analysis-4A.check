prog: {
  Assign(i,Const(0))
  Assign(y,Const(0))
  Assign(x,Const(8))
  While(Less(Ref(i),Const(100)),{
    Assign(x,Const(7))
    Assign(x,Plus(Ref(x),Const(1)))
    Assign(y,Plus(Ref(y),Const(1)))
    Assign(i,Plus(Ref(i),Const(1)))
  })
}
val x0 = Map()
val x1 = Map("val" -> 0)
val x2 = Map("&i" -> x1)
val x3 = Map("&i" -> x1, "&y" -> x1)
val x4 = Map("val" -> 8)
val x5 = Map("&i" -> x1, "&y" -> x1, "&x" -> x4)
val x8 = (1,x7)
starting spec loop with x5
val x9 = Map("val" -> 7)
val x10 = Map("&i" -> x1, "&y" -> x1, "&x" -> x9)
val x11 = Map("val" -> 1)
val x12 = Map("&i" -> x1, "&y" -> x11, "&x" -> x4)
val x13 = Map("&i" -> x11, "&y" -> x11, "&x" -> x4)
lub(x5, x13) = ?
lub_x6(x5,x5,x13)
lub_x6_&i(x1,x1,x11)
lub_x6_&i_val(0,0,1)
0
1
1
confirmed iterative loop, d = 1
val x14 = x7 + -1
Set(("val",(x14,x7)))
val x15 = Map("val" -> x14)
val x16 = Map("val" -> x7)
lub_x6_&y(x1,x1,x11)
lub_x6_&y_val(0,0,1)
0
1
1
confirmed iterative loop, d = 1
Set(("val",(x14,x7)))
lub_x6_&x(x4,x4,x4)
Set(("&i",(x15,x16)), ("&y",(x15,x16)), ("&x",(x4,x4)))
val x17 = Map("&i" -> x15, "&y" -> x15, "&x" -> x4)
val x18 = Map("&i" -> x16, "&y" -> x16, "&x" -> x4)
lub(x5, x13) = x17
starting spec loop with x17
val x19 = x7 < 101
val x20 = Map("&i" -> x15, "&y" -> x15, "&x" -> x9)
val x21 = Map("&i" -> x15, "&y" -> x16, "&x" -> x4)
lub(x5, x18) = ?
lub_x6(x5,x17,x18)
lub_x6_&i(x1,x15,x16)
lub_x6_&i_val(0,x14,x7)
val x22 = x7 * -1
val x23 = x22 + 1
x7 + -1
x7
1
confirmed iterative loop, d = 1
Set(("val",(x14,x7)))
lub_x6_&y(x1,x15,x16)
lub_x6_&y_val(0,x14,x7)
x7 + -1
x7
1
confirmed iterative loop, d = 1
Set(("val",(x14,x7)))
lub_x6_&x(x4,x4,x4)
Set(("&i",(x15,x16)), ("&y",(x15,x16)), ("&x",(x4,x4)))
lub(x5, x18) = x17
val x6_&i_val = { x7 => x7 }
val x6_&y_val = { x7 => x7 }
val x6 = { x7 => x18 }
fixindex: 100
val x24 = Map("val" -> 100)
val x25 = Map("&i" -> x24, "&y" -> x24, "&x" -> x4)
*** after loop x25 ***
res: ()
store: x25
transformed: x25
sched:
val x24 = Map("val" -> 100)
val x4 = Map("val" -> 8)
val x25 = Map("&i" -> x24, "&y" -> x24, "&x" -> x4)
term:
Map("&i" -> Map("val" -> 100), "&y" -> Map("val" -> 100), "&x" -> Map("val" -> 8))
----
prog: {
  Assign(x,Const(900))
  Assign(y,Const(0))
  Assign(z,Const(0))
  Assign(z2,Const(0))
  While(Less(Const(0),Ref(x)),{
    Assign(z,Plus(Ref(z),Ref(x)))
    Assign(z2,Plus(Ref(z2),Plus(Times(Ref(x),Const(3)),Const(5))))
    If(Less(Ref(y),Const(17)),{
      Assign(y,Plus(Ref(y),Const(1)))
    },{
      
    })
    Assign(x,Plus(Ref(x),Const(-1)))
  })
  Assign(r,Ref(x))
}
val x0 = Map()
val x1 = Map("val" -> 900)
val x2 = Map("&x" -> x1)
val x3 = Map("val" -> 0)
val x4 = Map("&x" -> x1, "&y" -> x3)
val x5 = Map("&x" -> x1, "&y" -> x3, "&z" -> x3)
val x6 = Map("&x" -> x1, "&y" -> x3, "&z" -> x3, "&z2" -> x3)
val x9 = (1,x8)
starting spec loop with x6
val x10 = Map("&x" -> x1, "&y" -> x3, "&z" -> x1, "&z2" -> x3)
val x11 = Map("val" -> 2705)
val x12 = Map("&x" -> x1, "&y" -> x3, "&z" -> x1, "&z2" -> x11)
val x13 = Map("val" -> 1)
val x14 = Map("&x" -> x1, "&y" -> x13, "&z" -> x1, "&z2" -> x11)
val x15 = Map("val" -> 899)
val x16 = Map("&x" -> x15, "&y" -> x13, "&z" -> x1, "&z2" -> x11)
lub(x6, x16) = ?
lub_x7(x6,x6,x16)
lub_x7_&x(x1,x1,x15)
lub_x7_&x_val(900,900,899)
900
899
-1
confirmed iterative loop, d = -1
val x17 = x8 + -1
val x18 = x8 * -1
val x19 = x18 + 1
val x20 = x18 + 901
val x21 = x18 + 900
Set(("val",(x20,x21)))
val x22 = Map("val" -> x20)
val x23 = Map("val" -> x21)
lub_x7_&y(x3,x3,x13)
lub_x7_&y_val(0,0,1)
0
1
1
confirmed iterative loop, d = 1
Set(("val",(x17,x8)))
val x24 = Map("val" -> x17)
val x25 = Map("val" -> x8)
lub_x7_&z(x3,x3,x1)
lub_x7_&z_val(0,0,900)
0
900
900
confirmed iterative loop, d = 900
val x26 = x8 * 900
val x27 = x26 + -900
Set(("val",(x27,x26)))
val x28 = Map("val" -> x27)
val x29 = Map("val" -> x26)
lub_x7_&z2(x3,x3,x11)
lub_x7_&z2_val(0,0,2705)
0
2705
2705
confirmed iterative loop, d = 2705
val x30 = x8 * 2705
val x31 = x30 + -2705
Set(("val",(x31,x30)))
val x32 = Map("val" -> x31)
val x33 = Map("val" -> x30)
Set(("&x",(x22,x23)), ("&y",(x24,x25)), ("&z",(x28,x29)), ("&z2",(x32,x33)))
val x34 = Map("&x" -> x22, "&y" -> x24, "&z" -> x28, "&z2" -> x32)
val x35 = Map("&x" -> x23, "&y" -> x25, "&z" -> x29, "&z2" -> x33)
lub(x6, x16) = x34
starting spec loop with x34
val x36 = x8 < 901
val x37 = x8 * 899
val x38 = x37 + 1
val x39 = Map("val" -> x38)
val x40 = Map("&x" -> x22, "&y" -> x24, "&z" -> x39, "&z2" -> x32)
val x41 = x8 * -3
val x42 = x41 + 2703
val x43 = x41 + 2708
val x44 = x41 + 3
val x45 = x8 * 2702
val x46 = x45 + 3
val x47 = Map("val" -> x46)
val x48 = Map("&x" -> x22, "&y" -> x24, "&z" -> x39, "&z2" -> x47)
val x49 = x8 < 18
val x50 = Map("&x" -> x22, "&y" -> x25, "&z" -> x39, "&z2" -> x47)
val x51 = if (x49) x8 else x17
val x52 = Map("val" -> x51)
val x53 = Map("&x" -> x22, "&y" -> x52, "&z" -> x39, "&z2" -> x47)
val x54 = Map("&x" -> x23, "&y" -> x52, "&z" -> x39, "&z2" -> x47)
lub(x6, x54) = ?
lub_x7(x6,x34,x54)
lub_x7_&x(x1,x22,x23)
lub_x7_&x_val(900,x20,x21)
val x55 = x8 + -901
x8 * -1 + 901
x8 * -1 + 900
-1
confirmed iterative loop, d = -1
Set(("val",(x20,x21)))
lub_x7_&y(x3,x24,x52)
lub_x7_&y_val(0,x17,x51)
val x56 = if (x49) 1 else 0
x8 + -1
if (x8 < 18) x8 else x8 + -1
if (x8 < 18) 1 else 0
val x57 = x8 + -18
val x58 = x8 + -19
val x59 = if (x49) x17 else 17
val x60 = if (x49) x8 else 17
Set(("val",(x59,x60)))
val x61 = Map("val" -> x59)
val x62 = Map("val" -> x60)
lub_x7_&z(x3,x28,x39)
lub_x7_&z_val(0,x27,x38)
val x63 = x8 * -900
val x64 = x63 + 900
val x65 = x63 + 901
x8 * 900 + -900
x8 * 899 + 1
x8 * -1 + 901
poly: List(901, -1)
found 2nd order polynomial: f'(x8)=-1*x8+901 -> f(x8)=-1*x8/2(x8+1)+901*x8
val x66 = x8 * x8
val x67 = x66 + x18
val x68 = x8 * 0.5
val x69 = x8 * x68
val x70 = x8 * -0.5
val x71 = x69 + x70
val x72 = x8 * x70
val x73 = x72 + x68
val x74 = x8 * 901
val x75 = x74 + -901
val x76 = x68 + x75
val x77 = x72 + x76
val x78 = x8 + 1
val x79 = x66 + x8
val x80 = x69 + x68
val x81 = x72 + x70
val x82 = x70 + x74
val x83 = x72 + x82
x8 * x8 * -0.5 + x8 * 0.5 + x8 * 901 + -901
x8 * x8 * -0.5 + x8 * -0.5 + x8 * 901
val x84 = x8 * -901
val x85 = x84 + 901
val x86 = x70 + x85
val x87 = x69 + x86
val x88 = x74 + x87
val x89 = x70 + x88
val x90 = x72 + x89
x8 * x8 * -0.5 + x8 * -0.5 + x8 * 901 + x8 * x8 * 0.5 + x8 * -0.5 + x8 * -901 + 901
poly2: List(901, -1)
Set(("val",(x77,x83)))
val x91 = Map("val" -> x77)
val x92 = Map("val" -> x83)
lub_x7_&z2(x3,x32,x47)
lub_x7_&z2_val(0,x31,x46)
val x93 = x8 * -2705
val x94 = x93 + 2705
val x95 = x93 + 2708
x8 * 2705 + -2705
x8 * 2702 + 3
x8 * -3 + 2708
poly: List(2708, -3)
found 2nd order polynomial: f'(x8)=-3*x8+2708 -> f(x8)=-3*x8/2(x8+1)+2708*x8
val x96 = x8 * -1.5
val x97 = x8 * x96
val x98 = x8 * 1.5
val x99 = x97 + x98
val x100 = x8 * 2708
val x101 = x100 + -2708
val x102 = x98 + x101
val x103 = x97 + x102
val x104 = x97 + x96
val x105 = x96 + x100
val x106 = x97 + x105
x8 * x8 * -1.5 + x8 * 1.5 + x8 * 2708 + -2708
x8 * x8 * -1.5 + x8 * -1.5 + x8 * 2708
val x107 = x8 * x98
val x108 = x8 * -2708
val x109 = x108 + 2708
val x110 = x96 + x109
val x111 = x107 + x110
val x112 = x100 + x111
val x113 = x96 + x112
val x114 = x97 + x113
x8 * x8 * -1.5 + x8 * -1.5 + x8 * 2708 + x8 * x8 * 1.5 + x8 * -1.5 + x8 * -2708 + 2708
poly2: List(2708, -3)
Set(("val",(x103,x106)))
val x115 = Map("val" -> x103)
val x116 = Map("val" -> x106)
Set(("&x",(x22,x23)), ("&y",(x61,x62)), ("&z",(x91,x92)), ("&z2",(x115,x116)))
val x117 = Map("&x" -> x22, "&y" -> x61, "&z" -> x91, "&z2" -> x115)
val x118 = Map("&x" -> x23, "&y" -> x62, "&z" -> x92, "&z2" -> x116)
lub(x6, x54) = x117
starting spec loop with x117
val x119 = x68 + x26
val x120 = x72 + x119
val x121 = Map("val" -> x120)
val x122 = Map("&x" -> x22, "&y" -> x61, "&z" -> x121, "&z2" -> x115)
val x123 = x98 + x30
val x124 = x97 + x123
val x125 = Map("val" -> x124)
val x126 = Map("&x" -> x22, "&y" -> x61, "&z" -> x121, "&z2" -> x125)
val x127 = if (x49) x8 else 18
val x128 = Map("val" -> x127)
val x129 = Map("&x" -> x22, "&y" -> x128, "&z" -> x121, "&z2" -> x125)
val x130 = Map("&x" -> x22, "&y" -> x62, "&z" -> x121, "&z2" -> x125)
val x131 = Map("&x" -> x23, "&y" -> x62, "&z" -> x121, "&z2" -> x125)
lub(x6, x131) = ?
lub_x7(x6,x117,x131)
lub_x7_&x(x1,x22,x23)
lub_x7_&x_val(900,x20,x21)
x8 * -1 + 901
x8 * -1 + 900
-1
confirmed iterative loop, d = -1
Set(("val",(x20,x21)))
lub_x7_&y(x3,x61,x62)
lub_x7_&y_val(0,x59,x60)
val x132 = if (x49) x19 else -17
val x133 = x8 + x132
val x134 = x18 + 18
val x135 = if (x49) x134 else 0
if (x8 < 18) x8 + -1 else 17
if (x8 < 18) x8 else 17
if (x8 < 18) 1 else 0
Set(("val",(x59,x60)))
lub_x7_&z(x3,x91,x121)
lub_x7_&z_val(0,x77,x120)
val x136 = x26 + x87
val x137 = x68 + x136
val x138 = x72 + x137
x8 * x8 * -0.5 + x8 * 0.5 + x8 * 901 + -901
x8 * x8 * -0.5 + x8 * 0.5 + x8 * 900
x8 * x8 * -0.5 + x8 * 0.5 + x8 * 900 + x8 * x8 * 0.5 + x8 * -0.5 + x8 * -901 + 901
poly: List(901, -1)
found 2nd order polynomial: f'(x8)=-1*x8+901 -> f(x8)=-1*x8/2(x8+1)+901*x8
x8 * x8 * -0.5 + x8 * 0.5 + x8 * 901 + -901
x8 * x8 * -0.5 + x8 * -0.5 + x8 * 901
x8 * x8 * -0.5 + x8 * -0.5 + x8 * 901 + x8 * x8 * 0.5 + x8 * -0.5 + x8 * -901 + 901
poly2: List(901, -1)
Set(("val",(x77,x83)))
lub_x7_&z2(x3,x115,x125)
lub_x7_&z2_val(0,x103,x124)
val x139 = x30 + x111
val x140 = x98 + x139
val x141 = x97 + x140
x8 * x8 * -1.5 + x8 * 1.5 + x8 * 2708 + -2708
x8 * x8 * -1.5 + x8 * 1.5 + x8 * 2705
x8 * x8 * -1.5 + x8 * 1.5 + x8 * 2705 + x8 * x8 * 1.5 + x8 * -1.5 + x8 * -2708 + 2708
poly: List(2708, -3)
found 2nd order polynomial: f'(x8)=-3*x8+2708 -> f(x8)=-3*x8/2(x8+1)+2708*x8
x8 * x8 * -1.5 + x8 * 1.5 + x8 * 2708 + -2708
x8 * x8 * -1.5 + x8 * -1.5 + x8 * 2708
x8 * x8 * -1.5 + x8 * -1.5 + x8 * 2708 + x8 * x8 * 1.5 + x8 * -1.5 + x8 * -2708 + 2708
poly2: List(2708, -3)
Set(("val",(x103,x106)))
Set(("&x",(x22,x23)), ("&y",(x61,x62)), ("&z",(x91,x92)), ("&z2",(x115,x116)))
lub(x6, x131) = x117
val x7_&x_val = { x8 => x21 }
val x7_&y_val = { x8 => x60 }
val x7_&z_val = { x8 => x120 }
val x7_&z2_val = { x8 => x124 }
val x7 = { x8 => x131 }
fixindex: 900
val x142 = Map("val" -> 17)
val x143 = Map("val" -> 405450)
val x144 = Map("val" -> 1220850)
val x145 = Map("&x" -> x3, "&y" -> x142, "&z" -> x143, "&z2" -> x144)
*** after loop x145 ***
val x146 = Map("&x" -> x3, "&y" -> x142, "&z" -> x143, "&r" -> x3, "&z2" -> x144)
res: ()
store: x146
transformed: x146
sched:
val x144 = Map("val" -> 1220850)
val x143 = Map("val" -> 405450)
val x142 = Map("val" -> 17)
val x3 = Map("val" -> 0)
val x146 = Map("&x" -> x3, "&y" -> x142, "&z" -> x143, "&r" -> x3, "&z2" -> x144)
term:
Map("&x" -> Map("val" -> 0), "&z" -> Map("val" -> 405450), "&y" -> Map("val" -> 17), "&r" -> Map("val" -> 0), "&z2" -> Map("val" -> 1220850))
----
