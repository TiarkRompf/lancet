  /*****************************************
  Emitting Generated Code
  *******************************************/
  class Generated(pConst_0:Object) extends ((Int)=>(Int)) {
    def apply(x0:Int): Int = {
      import sun.misc.Unsafe;
      val unsafe = { val fld = classOf[Unsafe].getDeclaredField("theUnsafe"); fld.setAccessible(true); fld.get(classOf[Unsafe]).asInstanceOf[Unsafe]; };
      type char = Char;
      def WARN = assert(false, "WARN");
      def ERROR = assert(false, "ERROR");
      var RES = null.asInstanceOf[Int];
      val x7 = x0.asInstanceOf[Int];
      ;{;
        val PHI_3_5 = x7 // LUBC(DynExp(PHI_3_5):Int,Sym(7):Int);
        val x97: Int = unsafe.getInt(pConst_0,16L);
        val LUB_pConst_1_intField = x97; // XXX LUBC(Some(DynExp(LUB_pConst_1_intField)),None);
        BLOCK_2(LUB_pConst_1_intField,PHI_3_5,x7);
      };
      def BLOCK_2(LUB_pConst_1_intField:Int,PHI_3_5:Int,x7:Int): Unit = {
        val x46 = 0 >= PHI_3_5;
        if (x46) {
          (RES = LUB_pConst_1_intField) // return to root;
        } else {
          val x60 = 1 + LUB_pConst_1_intField;
          if (pConst_0 ne null) unsafe.putInt(pConst_0,16L, x60) else println("BUG: putInt"+pConst_0);;
          val x69 = -1 + PHI_3_5;
          ;{;
            val PHI_3_5 = x69 // LUBC(DynExp(PHI_3_5):Int,Sym(69):Int);
            val LUB_pConst_1_intField = x60; // Alias(Some(DynExp(LUB_pConst_1_intField)),Some(Sym(60)));
            BLOCK_2(LUB_pConst_1_intField,PHI_3_5,x7);
          };
        }
      }
      // (no return?);
      RES
    }
  }
  /*****************************************
  End of Generated Code
  *******************************************/
Vector((Sym(-1000),lancet.interpreter.BaseTestInterpreter3$Bar@187c7c10))
List((lancet.interpreter.BaseTestInterpreter3$Bar@187c7c10,class java.lang.Object))
compilation: ok
14
