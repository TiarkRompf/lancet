// constants: <function1>,lancet.interpreter.BytecodeInterpreter_Simple@5b140a2e,HotSpotMethod<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>,Array(CONST_0, x0),void java.lang.AbstractStringBuilder.expandCapacity(int),public java.lang.String java.lang.Object.toString(),public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(),public void java.io.PrintStream.println(java.lang.String),public java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder.append(java.lang.String)
class Generated(CONST_0: lancet.interpreter.TestInterpreter1$$anonfun$testB$1$$anonfun$1,CONST_1: lancet.interpreter.BytecodeInterpreter_Simple,CONST_2: com.oracle.graal.hotspot.meta.HotSpotResolvedJavaMethod,CONST_3: Array[lancet.interpreter.Base_Simple$Rep],CONST_4: java.lang.reflect.Method,CONST_5: java.lang.reflect.Method,CONST_6: java.lang.reflect.Method,CONST_7: java.lang.reflect.Method,CONST_8: java.lang.reflect.Method) extends (Int=>Int){
import sun.misc.Unsafe
val unsafe = { val fld = classOf[Unsafe].getDeclaredField("theUnsafe"); fld.setAccessible(true); fld.get(classOf[Unsafe]).asInstanceOf[Unsafe]; }
type char = Char
def WARN = assert(false, "WARN")
def ERROR = assert(false, "ERROR")
def apply(ARG: Int): Int = { object BODY {
  var RES = null.asInstanceOf[Int]
  val x0: Int = ARG
            val x1: Int = x0.asInstanceOf[Int]
            val x2: Unit = block_0(null,null,null,null,CONST_0,x1,null,null) // 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
            val x3: Object = null // stub return value int
  // *** begin block 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_0(r:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x4: Boolean = p2_3 eq null
            val x6: Object = if (x4) {          val x5: Object = throw new NullPointerException()
  x5} else {p2_3}
            val x7: Unit = block_1(null,null,null,null,p2_3,p2_4,null,null,p2_0,p2_1,p2_2,p2_3,p2_4,null,null) // 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x7
  }
  // *** begin block 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_1(r:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x8: Boolean = p3_3 eq null
            val x10: Object = if (x8) {          val x9: Object = throw new NullPointerException()
  x9} else {p3_3}
            val x11: Object = unsafe.getObject(p3_3,16)
            val x12: Boolean = x11 eq null
            val x14: Object = if (x12) {          val x13: Object = throw new NullPointerException()
  x13} else {x11}
            val x15: Unit = block_2(null,null,null,null,x11,8,null,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,null,null,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x15
  }
  // *** begin block 0:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_2(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Any,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x16: Object = unsafe.getObject(Class.forName("java.lang.System"),208)
            val x17: Object = unsafe.allocateInstance(Class.forName("scala.collection.mutable.StringBuilder"))
            val x18: Boolean = x17 eq null
            val x20: Object = if (x18) {          val x19: Object = throw new NullPointerException()
  x19} else {x17}
            val x21: Unit = block_3(null,null,null,null,x17,null,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,x16,x17,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x21
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_3(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x22: Boolean = p5_3 eq null
            val x24: Object = if (x22) {          val x23: Object = throw new NullPointerException()
  x23} else {p5_3}
            val x25: Unit = block_4(null,null,null,null,p5_3,16,"",null,null,null,null,null,p5_0,p5_1,p5_2,p5_3,null,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x25
  }
  // *** begin block 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_4(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x26: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x27: Boolean = p6_5 eq null
            val x29: Object = if (x27) {          val x28: Object = throw new NullPointerException()
  x28} else {p6_5}
            val x30: Unit = block_5(null,null,null,null,p6_5,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_3,x26,x26,null,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x30
  }
  // *** begin block 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_5(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Object,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x31: Boolean = p7_3 eq null
            val x33: Object = if (x31) {          val x32: Object = throw new NullPointerException()
  x32} else {p7_3}
            val x34: Object = unsafe.getObject(p7_3,16)
            val x35: Boolean = x34 eq null
            val x37: Object = if (x35) {          val x36: Object = throw new NullPointerException()
  x36} else {x34}
            val x38: Int = java.lang.reflect.Array.getLength(x34)
            val x39: Unit = block_6(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,x38,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x39
  }
  // *** begin block 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_6(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Object,p6_9:Int,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x40: Int = p6_4 + p6_9
            val x41: Boolean = p6_8 eq null
            val x43: Object = if (x41) {          val x42: Object = throw new NullPointerException()
  x42} else {p6_8}
            val x44: Unit = block_7(null,null,null,null,p6_8,x40,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,null,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x44
  }
  // *** begin block 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_7(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x45: Boolean = p7_3 eq null
            val x47: Object = if (x45) {          val x46: Object = throw new NullPointerException()
  x46} else {p7_3}
            val x48: Unit = block_8(null,null,null,null,p7_3,p7_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x48
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_8(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x49: Boolean = p8_3 eq null
            val x51: Object = if (x49) {          val x50: Object = throw new NullPointerException()
  x50} else {p8_3}
            val x52: Unit = block_9(null,null,null,null,p8_3,p8_0,p8_1,p8_2,p8_3,p8_4,null,p8_6,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x52
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_9(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x53: Unit = block_10(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x53
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_10(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x54: Object = new Array[char](p8_4)
            val x55: Boolean = p8_3 eq null
            val x57: Object = if (x55) {          val x56: Object = throw new NullPointerException()
  x56} else {p8_3}
            val x58: Unit = unsafe.putObject(p8_3,24, x54)
            val x59: Unit = block_11(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x59
  }
  // *** begin block 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_11(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x60: Unit = block_12(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x60
  }
  // *** begin block 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_12(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x61: Boolean = p6_7 eq null
            val x63: Object = if (x61) {          val x62: Object = throw new NullPointerException()
  x62} else {p6_7}
            val x64: Unit = block_13(null,null,null,null,p6_7,p6_5,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,null,null,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x64
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_13(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x65: Boolean = p7_3 eq null
            val x67: Object = if (x65) {          val x66: Object = throw new NullPointerException()
  x66} else {p7_3}
            val x68: Unit = block_14(null,null,null,null,p7_3,p7_4,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x68
  }
  // *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_14(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x69: Boolean = p8_4 ne null
            val x72: Unit = if (x69) {          val x70: Unit = block_15(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x70} else {          val x71: Unit = block_16(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x71}
  x72
  }
  // *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_15(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x73: Boolean = p8_4 eq null
            val x75: Object = if (x73) {          val x74: Object = throw new NullPointerException()
  x74} else {p8_4}
            val x76: Unit = block_17(null,null,null,null,p8_4,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x76
  }
  // *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_16(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x77: Boolean = "null" eq null
            val x79: Object = if (x77) {          val x78: Object = throw new NullPointerException()
  x78} else {"null"}
            val x80: Unit = block_17(null,null,null,null,"null",null,p8_0,p8_1,p8_2,p8_3,"null",p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x80
  }
  // *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_17(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x81: Boolean = p9_3 eq null
            val x83: Object = if (x81) {          val x82: Object = throw new NullPointerException()
  x82} else {p9_3}
            val x84: Object = unsafe.getObject(p9_3,16)
            val x85: Boolean = x84 eq null
            val x87: Object = if (x85) {          val x86: Object = throw new NullPointerException()
  x86} else {x84}
            val x88: Int = java.lang.reflect.Array.getLength(x84)
            val x89: Unit = block_18(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x88,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x89
  }
  // *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_18(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x90: Boolean = p8_3 eq null
            val x92: Object = if (x90) {          val x91: Object = throw new NullPointerException()
  x91} else {p8_3}
            val x93: Int = unsafe.getInt(p8_3,16)
            val x94: Int = p8_6 + x93
            val x95: Boolean = p8_3 eq null
            val x97: Object = if (x95) {          val x96: Object = throw new NullPointerException()
  x96} else {p8_3}
            val x98: Unit = block_19(null,null,null,null,p8_3,x94,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_6,null,null,null,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x98
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_19(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x99: Boolean = p9_3 eq null
            val x101: Object = if (x99) {          val x100: Object = throw new NullPointerException()
  x100} else {p9_3}
            val x102: Object = unsafe.getObject(p9_3,24)
            val x103: Boolean = x102 eq null
            val x105: Object = if (x103) {          val x104: Object = throw new NullPointerException()
  x104} else {x102}
            val x106: Int = java.lang.reflect.Array.getLength(x102)
            val x107: Int = -x106
            val x108: Int = x107 + p9_4
            val x109: Boolean = x108 <= 0
            val x112: Unit = if (x109) {          val x110: Unit = block_20(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x110} else {          val x111: Unit = block_21(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x111}
  x112
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_20(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x113: Unit = block_22(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x113
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_21(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x114: Boolean = p9_3 eq null
            val x116: Object = if (x114) {          val x115: Object = throw new NullPointerException()
  x115} else {p9_3}
            val x117: Unit = CONST_4.invoke(p9_3.asInstanceOf[AnyRef],p9_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x118: Unit = block_20(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x118
  }
  // *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_22(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x119: Boolean = p8_3 eq null
            val x121: Object = if (x119) {          val x120: Object = throw new NullPointerException()
  x120} else {p8_3}
            val x122: Object = unsafe.getObject(p8_3,24)
            val x123: Boolean = p8_3 eq null
            val x125: Object = if (x123) {          val x124: Object = throw new NullPointerException()
  x124} else {p8_3}
            val x126: Int = unsafe.getInt(p8_3,16)
            val x127: Boolean = p8_4 eq null
            val x129: Object = if (x127) {          val x128: Object = throw new NullPointerException()
  x128} else {p8_4}
            val x130: Unit = block_23(null,null,null,null,p8_4,0,p8_5,x122,x126,null,null,null,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x130
  }
  // *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_23(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x131: Boolean = p9_4 >= 0
            val x134: Unit = if (x131) {          val x132: Unit = block_24(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x132} else {          val x133: Unit = block_25(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x133}
  x134
  }
  // *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_24(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x135: Boolean = p9_3 eq null
            val x137: Object = if (x135) {          val x136: Object = throw new NullPointerException()
  x136} else {p9_3}
            val x138: Object = unsafe.getObject(p9_3,16)
            val x139: Boolean = x138 eq null
            val x141: Object = if (x139) {          val x140: Object = throw new NullPointerException()
  x140} else {x138}
            val x142: Int = java.lang.reflect.Array.getLength(x138)
            val x143: Boolean = x142 >= p9_5
            val x146: Unit = if (x143) {          val x144: Unit = block_26(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x144} else {          val x145: Unit = block_27(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x145}
  x146
  }
  // *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_25(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x147: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x148: Boolean = x147 eq null
            val x150: Object = if (x148) {          val x149: Object = throw new NullPointerException()
  x149} else {x147}
            val x151: Unit = block_28(null,null,null,null,x147,p9_4,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x147,null,null,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x151
  }
  // *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_26(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x152: Boolean = p9_5 >= p9_4
            val x155: Unit = if (x152) {          val x153: Unit = block_29(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x153} else {          val x154: Unit = block_30(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x154}
  x155
  }
  // *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_27(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x156: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x157: Boolean = x156 eq null
            val x159: Object = if (x157) {          val x158: Object = throw new NullPointerException()
  x158} else {x156}
            val x160: Unit = block_31(null,null,null,null,x156,p9_5,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x156,null,null,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x160
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_28(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x161: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x162: Boolean = x161 eq null
            val x164: Object = if (x162) {          val x163: Object = throw new NullPointerException()
  x163} else {x161}
            val x165: Unit = block_32(null,null,null,null,x161,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x161,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x165
  }
  // *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_29(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x166: Boolean = p9_3 eq null
            val x168: Object = if (x166) {          val x167: Object = throw new NullPointerException()
  x167} else {p9_3}
            val x169: Object = unsafe.getObject(p9_3,16)
            val x170: Int = -p9_4
            val x171: Int = x170 + p9_5
            val x172: Unit = java.lang.System.arraycopy(x169,p9_4,p9_6,p9_7,x171).asInstanceOf[Object]
            val x173: Unit = block_33(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,null,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x173
  }
  // *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_30(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x174: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x175: Int = -p9_4
            val x176: Int = x175 + p9_5
            val x177: Boolean = x174 eq null
            val x179: Object = if (x177) {          val x178: Object = throw new NullPointerException()
  x178} else {x174}
            val x180: Unit = block_34(null,null,null,null,x174,x176,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x174,null,null,null,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x180
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_31(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x181: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x182: Boolean = x181 eq null
            val x184: Object = if (x182) {          val x183: Object = throw new NullPointerException()
  x183} else {x181}
            val x185: Unit = block_35(null,null,null,null,x181,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x181,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x185
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_32(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x186: Boolean = p11_3 eq null
            val x188: Object = if (x186) {          val x187: Object = throw new NullPointerException()
  x187} else {p11_3}
            val x189: Unit = block_36(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x189
  }
  // *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_33(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x190: Unit = block_37(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x190
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_34(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x191: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x192: Boolean = x191 eq null
            val x194: Object = if (x192) {          val x193: Object = throw new NullPointerException()
  x193} else {x191}
            val x195: Unit = block_38(null,null,null,null,x191,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x191,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x195
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_35(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x196: Boolean = p11_3 eq null
            val x198: Object = if (x196) {          val x197: Object = throw new NullPointerException()
  x197} else {p11_3}
            val x199: Unit = block_39(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x199
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_36(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x200: Boolean = p12_3 eq null
            val x202: Object = if (x200) {          val x201: Object = throw new NullPointerException()
  x201} else {p12_3}
            val x203: Unit = block_40(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x203
  }
  // *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_37(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x204: Boolean = p8_3 eq null
            val x206: Object = if (x204) {          val x205: Object = throw new NullPointerException()
  x205} else {p8_3}
            val x207: Int = unsafe.getInt(p8_3,16)
            val x208: Int = p8_5 + x207
            val x209: Boolean = p8_3 eq null
            val x211: Object = if (x209) {          val x210: Object = throw new NullPointerException()
  x210} else {p8_3}
            val x212: Unit = unsafe.putInt(p8_3,16, x208)
            val x213: Unit = block_41(r,p7_0,p7_1,p7_2,p7_3,p7_4,p8_3,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x213
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_38(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x214: Boolean = p11_3 eq null
            val x216: Object = if (x214) {          val x215: Object = throw new NullPointerException()
  x215} else {p11_3}
            val x217: Unit = block_42(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x217
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_39(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x218: Boolean = p12_3 eq null
            val x220: Object = if (x218) {          val x219: Object = throw new NullPointerException()
  x219} else {p12_3}
            val x221: Unit = block_43(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x221
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_40(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x222: Unit = block_44(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x222
  }
  // *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_41(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Object,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x223: Unit = block_45(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p7_3,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x223
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_42(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x224: Boolean = p12_3 eq null
            val x226: Object = if (x224) {          val x225: Object = throw new NullPointerException()
  x225} else {p12_3}
            val x227: Unit = block_46(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x227
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_43(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x228: Unit = block_47(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x228
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_44(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x229: Object = new Array[char](p12_4)
            val x230: Boolean = p12_3 eq null
            val x232: Object = if (x230) {          val x231: Object = throw new NullPointerException()
  x231} else {p12_3}
            val x233: Unit = unsafe.putObject(p12_3,24, x229)
            val x234: Unit = block_48(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x234
  }
  // *** begin block 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_45(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x235: Boolean = p6_6 eq null
            val x237: Object = if (x235) {          val x236: Object = throw new NullPointerException()
  x236} else {p6_6}
            val x238: Unit = block_49(null,null,null,null,p6_6,p6_7,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,null,null,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x238
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_46(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x239: Unit = block_50(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x239
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_47(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x240: Object = new Array[char](p12_4)
            val x241: Boolean = p12_3 eq null
            val x243: Object = if (x241) {          val x242: Object = throw new NullPointerException()
  x242} else {p12_3}
            val x244: Unit = unsafe.putObject(p12_3,24, x240)
            val x245: Unit = block_51(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x245
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_48(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x246: Unit = block_52(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x246
  }
  // *** begin block 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_49(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x247: Boolean = p7_3 eq null
            val x249: Object = if (x247) {          val x248: Object = throw new NullPointerException()
  x248} else {p7_3}
            val x250: Unit = unsafe.putObject(p7_3,16, p7_4)
            val x251: Boolean = p7_3 eq null
            val x253: Object = if (x251) {          val x252: Object = throw new NullPointerException()
  x252} else {p7_3}
            val x254: Unit = block_53(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x254
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_50(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x255: Object = new Array[char](p12_4)
            val x256: Boolean = p12_3 eq null
            val x258: Object = if (x256) {          val x257: Object = throw new NullPointerException()
  x257} else {p12_3}
            val x259: Unit = unsafe.putObject(p12_3,24, x255)
            val x260: Unit = block_54(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x260
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_51(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x261: Unit = block_55(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x261
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_52(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x262: Boolean = p10_6 eq null
            val x264: Object = if (x262) {          val x263: Object = throw new NullPointerException()
  x263} else {p10_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x265: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x265
  }
  // *** begin block 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_53(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x266: Unit = block_56(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x266
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_54(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x267: Unit = block_57(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x267
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_55(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x268: Boolean = p10_6 eq null
            val x270: Object = if (x268) {          val x269: Object = throw new NullPointerException()
  x269} else {p10_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x271: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x271
  }
  // *** begin block 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_56(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x272: Unit = block_58(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x272
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_57(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x273: Boolean = p10_6 eq null
            val x275: Object = if (x273) {          val x274: Object = throw new NullPointerException()
  x274} else {p10_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x276: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x276
  }
  // *** begin block 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_58(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x277: Unit = block_59(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x277
  }
  // *** begin block 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_59(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x278: Unit = block_60(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x278
  }
  // *** begin block 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_60(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x279: Unit = block_61(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x279
  }
  // *** begin block 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_61(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x280: Unit = block_62(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x280
  }
  // *** begin block 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_62(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x281: Unit = block_63(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x281
  }
  // *** begin block 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_63(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x282: Unit = block_64(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x282
  }
  // *** begin block 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_64(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x283: Unit = block_65(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x283
  }
  // *** begin block 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_65(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x284: Unit = block_66(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x284
  }
  // *** begin block 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_66(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x285: Unit = block_67(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x285
  }
  // *** begin block 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_67(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x286: Unit = block_68(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x286
  }
  // *** begin block 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_68(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x287: Unit = block_69(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x287
  }
  // *** begin block 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_69(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x288: Unit = block_70(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x288
  }
  // *** begin block 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_70(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x289: Unit = block_71(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x289
  }
  // *** begin block 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_71(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x290: Unit = block_72(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x290
  }
  // *** begin block 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_72(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x291: Unit = block_73(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x291
  }
  // *** begin block 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_73(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x292: Unit = block_74(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x292
  }
  // *** begin block 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_74(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x293: Unit = block_75(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x293
  }
  // *** begin block 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_75(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x294: Unit = block_76(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x294
  }
  // *** begin block 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_76(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x295: Unit = block_77(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x295
  }
  // *** begin block 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_77(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x296: Unit = block_78(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x296
  }
  // *** begin block 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_78(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x297: Unit = block_79(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x297
  }
  // *** begin block 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_79(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x298: Unit = block_80(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x298
  }
  // *** begin block 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_80(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x299: Unit = block_81(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x299
  }
  // *** begin block 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_81(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x300: Unit = block_82(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x300
  }
  // *** begin block 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_82(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x301: Unit = block_83(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x301
  }
  // *** begin block 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_83(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x302: Unit = block_84(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x302
  }
  // *** begin block 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_84(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x303: Unit = block_85(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x303
  }
  // *** begin block 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_85(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x304: Unit = block_86(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x304
  }
  // *** begin block 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_86(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x305: Unit = block_87(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x305
  }
  // *** begin block 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_87(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x306: Unit = block_88(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x306
  }
  // *** begin block 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_88(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x307: Unit = block_89(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x307
  }
  // *** begin block 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_89(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x308: Unit = block_90(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x308
  }
  // *** begin block 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_90(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x309: Unit = block_91(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x309
  }
  // *** begin block 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_91(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x310: Unit = block_92(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x310
  }
  // *** begin block 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_92(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x311: Unit = block_93(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x311
  }
  // *** begin block 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_93(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x312: Unit = block_94(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x312
  }
  // *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_94(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x313: Unit = block_95(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x313
  }
  // *** begin block 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_95(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x314: Unit = block_96(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x314
  }
  // *** begin block 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_96(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x315: Unit = block_97(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x315
  }
  // *** begin block 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_97(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x316: Unit = block_98(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x316
  }
  // *** begin block 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_98(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x317: Unit = block_99(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x317
  }
  // *** begin block 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_99(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x318: Unit = block_100(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x318
  }
  // *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_100(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x319: Unit = block_101(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x319
  }
  // *** begin block 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_101(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x320: Unit = block_102(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x320
  }
  // *** begin block 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_102(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x321: Unit = block_103(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x321
  }
  // *** begin block 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_103(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x322: Unit = block_104(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x322
  }
  // *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_104(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x323: Unit = block_105(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x323
  }
  // *** begin block 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_105(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x324: Unit = block_106(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x324
  }
  // *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_106(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x325: Unit = block_107(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x325
  }
  // *** begin block 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_107(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x326: Unit = block_108(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x326
  }
  // *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_108(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x327: Unit = block_109(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x327
  }
  // *** begin block 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_109(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x328: Unit = block_110(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x328
  }
  // *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_110(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x329: Unit = block_111(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x329
  }
  // *** begin block 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_111(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x330: Unit = block_112(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x330
  }
  // *** begin block 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_112(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x331: Unit = block_113(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x331
  }
  // *** begin block 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_113(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x332: Unit = block_114(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x332
  }
  // *** begin block 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_114(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x333: Unit = block_115(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x333
  }
  // *** begin block 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_115(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x334: Unit = block_116(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x334
  }
  // *** begin block 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_116(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x335: Unit = block_117(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x335
  }
  // *** begin block 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_117(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x336: Unit = block_118(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x336
  }
  // *** begin block 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_118(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x337: Unit = block_119(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x337
  }
  // *** begin block 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_119(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x338: Unit = block_120(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x338
  }
  // *** begin block 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_120(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x339: Unit = block_121(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x339
  }
  // *** begin block 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_121(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x340: Unit = block_122(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x340
  }
  // *** begin block 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_122(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x341: Unit = block_123(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x341
  }
  // *** begin block 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_123(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x342: Unit = block_124(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x342
  }
  // *** begin block 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_124(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x343: Boolean = p4_6 eq null
            val x345: Object = if (x343) {          val x344: Object = throw new NullPointerException()
  x344} else {p4_6}
            val x346: Unit = block_125(null,null,null,null,p4_6,"hello: ",null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x346
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_125(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x347: Boolean = p5_3 eq null
            val x349: Object = if (x347) {          val x348: Object = throw new NullPointerException()
  x348} else {p5_3}
            val x350: Unit = block_126(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x350
  }
  // *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_126(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x351: Boolean = p6_3 eq null
            val x353: Object = if (x351) {          val x352: Object = throw new NullPointerException()
  x352} else {p6_3}
            val x354: Object = unsafe.getObject(p6_3,16)
            val x355: Unit = block_127(r,p5_0,p5_1,p5_2,p5_3,p5_4,x354,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x355
  }
  // *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_127(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x356: Unit = block_128(null,null,null,null,p5_4,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x356
  }
  // *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_128(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x357: Boolean = p6_3 ne null
            val x360: Unit = if (x357) {          val x358: Unit = block_129(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x358} else {          val x359: Unit = block_130(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x359}
  x360
  }
  // *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_129(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x361: Boolean = p6_3 eq null
            val x363: Object = if (x361) {          val x362: Object = throw new NullPointerException()
  x362} else {p6_3}
            val x364: Object = CONST_5.invoke(p6_3) // java.lang.Object.toString
            val x365: Unit = block_131(r,p6_0,p6_1,p6_2,p6_3,x364,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x365
  }
  // *** begin block 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_130(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x366: Unit = block_131(r,p6_0,p6_1,p6_2,p6_3,"null",p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x366
  }
  // *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_131(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x367: Unit = block_132(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x367
  }
  // *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_132(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x368: Boolean = p5_5 eq null
            val x370: Object = if (x368) {          val x369: Object = throw new NullPointerException()
  x369} else {p5_5}
            val x371: Unit = block_133(null,null,null,null,p5_5,p5_6,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x371
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_133(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x372: Boolean = p6_3 eq null
            val x374: Object = if (x372) {          val x373: Object = throw new NullPointerException()
  x373} else {p6_3}
            val x375: Unit = block_134(null,null,null,null,p6_3,p6_4,null,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x375
  }
  // *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_134(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x376: Boolean = p7_4 ne null
            val x379: Unit = if (x376) {          val x377: Unit = block_135(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x377} else {          val x378: Unit = block_136(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x378}
  x379
  }
  // *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_135(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x380: Boolean = p7_4 eq null
            val x382: Object = if (x380) {          val x381: Object = throw new NullPointerException()
  x381} else {p7_4}
            val x383: Unit = block_137(null,null,null,null,p7_4,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x383
  }
  // *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_136(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x384: Boolean = "null" eq null
            val x386: Object = if (x384) {          val x385: Object = throw new NullPointerException()
  x385} else {"null"}
            val x387: Unit = block_137(null,null,null,null,"null",null,p7_0,p7_1,p7_2,p7_3,"null",p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x387
  }
  // *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_137(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x388: Boolean = p8_3 eq null
            val x390: Object = if (x388) {          val x389: Object = throw new NullPointerException()
  x389} else {p8_3}
            val x391: Object = unsafe.getObject(p8_3,16)
            val x392: Boolean = x391 eq null
            val x394: Object = if (x392) {          val x393: Object = throw new NullPointerException()
  x393} else {x391}
            val x395: Int = java.lang.reflect.Array.getLength(x391)
            val x396: Unit = block_138(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,x395,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x396
  }
  // *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_138(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x397: Boolean = p7_3 eq null
            val x399: Object = if (x397) {          val x398: Object = throw new NullPointerException()
  x398} else {p7_3}
            val x400: Int = unsafe.getInt(p7_3,16)
            val x401: Int = p7_6 + x400
            val x402: Boolean = p7_3 eq null
            val x404: Object = if (x402) {          val x403: Object = throw new NullPointerException()
  x403} else {p7_3}
            val x405: Unit = block_139(null,null,null,null,p7_3,x401,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_6,null,null,null,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x405
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_139(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x406: Boolean = p8_3 eq null
            val x408: Object = if (x406) {          val x407: Object = throw new NullPointerException()
  x407} else {p8_3}
            val x409: Object = unsafe.getObject(p8_3,24)
            val x410: Boolean = x409 eq null
            val x412: Object = if (x410) {          val x411: Object = throw new NullPointerException()
  x411} else {x409}
            val x413: Int = java.lang.reflect.Array.getLength(x409)
            val x414: Int = -x413
            val x415: Int = x414 + p8_4
            val x416: Boolean = x415 <= 0
            val x419: Unit = if (x416) {          val x417: Unit = block_140(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x417} else {          val x418: Unit = block_141(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x418}
  x419
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_140(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x420: Unit = block_142(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x420
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_141(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x421: Boolean = p8_3 eq null
            val x423: Object = if (x421) {          val x422: Object = throw new NullPointerException()
  x422} else {p8_3}
            val x424: Unit = CONST_4.invoke(p8_3.asInstanceOf[AnyRef],p8_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x425: Unit = block_140(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x425
  }
  // *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_142(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x426: Boolean = p7_3 eq null
            val x428: Object = if (x426) {          val x427: Object = throw new NullPointerException()
  x427} else {p7_3}
            val x429: Object = unsafe.getObject(p7_3,24)
            val x430: Boolean = p7_3 eq null
            val x432: Object = if (x430) {          val x431: Object = throw new NullPointerException()
  x431} else {p7_3}
            val x433: Int = unsafe.getInt(p7_3,16)
            val x434: Boolean = p7_4 eq null
            val x436: Object = if (x434) {          val x435: Object = throw new NullPointerException()
  x435} else {p7_4}
            val x437: Unit = block_143(null,null,null,null,p7_4,0,p7_5,x429,x433,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x437
  }
  // *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_143(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x438: Boolean = p8_4 >= 0
            val x441: Unit = if (x438) {          val x439: Unit = block_144(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x439} else {          val x440: Unit = block_145(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x440}
  x441
  }
  // *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_144(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x442: Boolean = p8_3 eq null
            val x444: Object = if (x442) {          val x443: Object = throw new NullPointerException()
  x443} else {p8_3}
            val x445: Object = unsafe.getObject(p8_3,16)
            val x446: Boolean = x445 eq null
            val x448: Object = if (x446) {          val x447: Object = throw new NullPointerException()
  x447} else {x445}
            val x449: Int = java.lang.reflect.Array.getLength(x445)
            val x450: Boolean = x449 >= p8_5
            val x453: Unit = if (x450) {          val x451: Unit = block_146(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x451} else {          val x452: Unit = block_147(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x452}
  x453
  }
  // *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_145(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x454: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x455: Boolean = x454 eq null
            val x457: Object = if (x455) {          val x456: Object = throw new NullPointerException()
  x456} else {x454}
            val x458: Unit = block_148(null,null,null,null,x454,p8_4,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x454,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x458
  }
  // *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_146(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x459: Boolean = p8_5 >= p8_4
            val x462: Unit = if (x459) {          val x460: Unit = block_149(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x460} else {          val x461: Unit = block_150(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x461}
  x462
  }
  // *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_147(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x463: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x464: Boolean = x463 eq null
            val x466: Object = if (x464) {          val x465: Object = throw new NullPointerException()
  x465} else {x463}
            val x467: Unit = block_151(null,null,null,null,x463,p8_5,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x463,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x467
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_148(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x468: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x469: Boolean = x468 eq null
            val x471: Object = if (x469) {          val x470: Object = throw new NullPointerException()
  x470} else {x468}
            val x472: Unit = block_152(null,null,null,null,x468,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x468,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x472
  }
  // *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_149(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x473: Boolean = p8_3 eq null
            val x475: Object = if (x473) {          val x474: Object = throw new NullPointerException()
  x474} else {p8_3}
            val x476: Object = unsafe.getObject(p8_3,16)
            val x477: Int = -p8_4
            val x478: Int = x477 + p8_5
            val x479: Unit = java.lang.System.arraycopy(x476,p8_4,p8_6,p8_7,x478).asInstanceOf[Object]
            val x480: Unit = block_153(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x480
  }
  // *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_150(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x481: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x482: Int = -p8_4
            val x483: Int = x482 + p8_5
            val x484: Boolean = x481 eq null
            val x486: Object = if (x484) {          val x485: Object = throw new NullPointerException()
  x485} else {x481}
            val x487: Unit = block_154(null,null,null,null,x481,x483,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x481,null,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x487
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_151(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x488: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x489: Boolean = x488 eq null
            val x491: Object = if (x489) {          val x490: Object = throw new NullPointerException()
  x490} else {x488}
            val x492: Unit = block_155(null,null,null,null,x488,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x488,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x492
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_152(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x493: Boolean = p10_3 eq null
            val x495: Object = if (x493) {          val x494: Object = throw new NullPointerException()
  x494} else {p10_3}
            val x496: Unit = block_156(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x496
  }
  // *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_153(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x497: Unit = block_157(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x497
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_154(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x498: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x499: Boolean = x498 eq null
            val x501: Object = if (x499) {          val x500: Object = throw new NullPointerException()
  x500} else {x498}
            val x502: Unit = block_158(null,null,null,null,x498,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x498,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x502
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_155(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x503: Boolean = p10_3 eq null
            val x505: Object = if (x503) {          val x504: Object = throw new NullPointerException()
  x504} else {p10_3}
            val x506: Unit = block_159(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x506
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_156(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x507: Boolean = p11_3 eq null
            val x509: Object = if (x507) {          val x508: Object = throw new NullPointerException()
  x508} else {p11_3}
            val x510: Unit = block_160(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x510
  }
  // *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_157(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x511: Boolean = p7_3 eq null
            val x513: Object = if (x511) {          val x512: Object = throw new NullPointerException()
  x512} else {p7_3}
            val x514: Int = unsafe.getInt(p7_3,16)
            val x515: Int = p7_5 + x514
            val x516: Boolean = p7_3 eq null
            val x518: Object = if (x516) {          val x517: Object = throw new NullPointerException()
  x517} else {p7_3}
            val x519: Unit = unsafe.putInt(p7_3,16, x515)
            val x520: Unit = block_161(r,p6_0,p6_1,p6_2,p6_3,p6_4,p7_3,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x520
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_158(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x521: Boolean = p10_3 eq null
            val x523: Object = if (x521) {          val x522: Object = throw new NullPointerException()
  x522} else {p10_3}
            val x524: Unit = block_162(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x524
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_159(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x525: Boolean = p11_3 eq null
            val x527: Object = if (x525) {          val x526: Object = throw new NullPointerException()
  x526} else {p11_3}
            val x528: Unit = block_163(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x528
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_160(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x529: Unit = block_164(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x529
  }
  // *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_161(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Object,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x530: Unit = block_165(r,p5_0,p5_1,p5_2,p5_3,p5_4,p6_3,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x530
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_162(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x531: Boolean = p11_3 eq null
            val x533: Object = if (x531) {          val x532: Object = throw new NullPointerException()
  x532} else {p11_3}
            val x534: Unit = block_166(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x534
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_163(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x535: Unit = block_167(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x535
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_164(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x536: Object = new Array[char](p11_4)
            val x537: Boolean = p11_3 eq null
            val x539: Object = if (x537) {          val x538: Object = throw new NullPointerException()
  x538} else {p11_3}
            val x540: Unit = unsafe.putObject(p11_3,24, x536)
            val x541: Unit = block_168(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x541
  }
  // *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_165(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x542: Unit = block_169(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_3,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x542
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_166(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x543: Unit = block_170(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x543
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_167(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x544: Object = new Array[char](p11_4)
            val x545: Boolean = p11_3 eq null
            val x547: Object = if (x545) {          val x546: Object = throw new NullPointerException()
  x546} else {p11_3}
            val x548: Unit = unsafe.putObject(p11_3,24, x544)
            val x549: Unit = block_171(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x549
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_168(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x550: Unit = block_172(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x550
  }
  // *** begin block 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_169(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x551: Unit = block_173(null,null,null,null,p4_4,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x551
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_170(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x552: Object = new Array[char](p11_4)
            val x553: Boolean = p11_3 eq null
            val x555: Object = if (x553) {          val x554: Object = throw new NullPointerException()
  x554} else {p11_3}
            val x556: Unit = unsafe.putObject(p11_3,24, x552)
            val x557: Unit = block_174(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x557
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_171(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x558: Unit = block_175(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x558
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_172(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x559: Boolean = p9_6 eq null
            val x561: Object = if (x559) {          val x560: Object = throw new NullPointerException()
  x560} else {p9_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x562: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x562
  }
  // *** begin block 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_173(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x563: Unit = block_176(null,null,null,null,p5_3,null,null,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x563
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_174(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x564: Unit = block_177(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x564
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_175(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x565: Boolean = p9_6 eq null
            val x567: Object = if (x565) {          val x566: Object = throw new NullPointerException()
  x566} else {p9_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x568: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x568
  }
  // *** begin block 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_176(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x569: Boolean = unsafe.getBoolean(Class.forName("java.lang.Integer"),260)
            val x570: Int = if (x569) {1} else {0}
            val x571: Boolean = x570 != 0
            val x574: Unit = if (x571) {          val x572: Unit = block_178(r,p6_0,p6_1,p6_2,p6_3,null,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x572} else {          val x573: Unit = block_179(r,p6_0,p6_1,p6_2,p6_3,null,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x573}
  x574
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_177(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x575: Boolean = p9_6 eq null
            val x577: Object = if (x575) {          val x576: Object = throw new NullPointerException()
  x576} else {p9_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x578: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x578
  }
  // *** begin block 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_178(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x579: Boolean = -128 > p6_3
            val x582: Unit = if (x579) {          val x580: Unit = block_180(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x580} else {          val x581: Unit = block_181(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x581}
  x582
  }
  // *** begin block 6:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_179(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x583: Int = unsafe.getInt(Class.forName("java.lang.Integer$IntegerCache"),212)
            val x584: Boolean = 127 <= x583
            val x587: Unit = if (x584) {          val x585: Unit = block_178(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x585} else {          val x586: Unit = block_182(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 14:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x586}
  x587
  }
  // *** begin block 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_180(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x588: Object = unsafe.allocateInstance(Class.forName("java.lang.Integer"))
            val x589: Boolean = x588 eq null
            val x591: Object = if (x589) {          val x590: Object = throw new NullPointerException()
  x590} else {x588}
            val x592: Unit = block_183(null,null,null,null,x588,p6_3,null,null,p6_0,p6_1,p6_2,p6_3,x588,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x592
  }
  // *** begin block 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_181(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x593: Int = unsafe.getInt(Class.forName("java.lang.Integer$IntegerCache"),212)
            val x594: Boolean = x593 < p6_3
            val x597: Unit = if (x594) {          val x595: Unit = block_180(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x595} else {          val x596: Unit = block_184(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x596}
  x597
  }
  // *** begin block 14:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_182(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x598: Object = unsafe.allocateInstance(Class.forName("java.lang.AssertionError"))
            val x599: Boolean = x598 eq null
            val x601: Object = if (x599) {          val x600: Object = throw new NullPointerException()
  x600} else {x598}
            val x602: Unit = block_185(null,null,null,null,x598,null,p6_0,p6_1,p6_2,p6_3,x598,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x602
  }
  // *** begin block 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_183(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x603: Boolean = p7_3 eq null
            val x605: Object = if (x603) {          val x604: Object = throw new NullPointerException()
  x604} else {p7_3}
            val x606: Unit = block_186(null,null,null,null,p7_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x606
  }
  // *** begin block 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_184(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x607: Object = unsafe.getObject(Class.forName("java.lang.Integer$IntegerCache"),200)
            val x608: Int = 128 + p6_3
            val x609: Long = x608.toLong
            val x610: Boolean = x607 eq null
            val x612: Object = if (x610) {          val x611: Object = throw new NullPointerException()
  x611} else {x607}
            val x613: java.lang.Class[Object] = x607.getClass.asInstanceOf[Class[Object]]
            val x614: Boolean = x613.isArray
            val x615: Boolean = if (x614) {false} else {true}
            val x618: Unit = if (x615) {          val x616: java.lang.String = x613.getName
            val x617: Unit = throw new ArrayStoreException(x616)
  x617} else {()}
            val x619: Boolean = x609 < 0
            val x623: Boolean = if (x619) {x619} else {          val x620: Int = java.lang.reflect.Array.getLength(x607)
            val x621: Long = x620.toLong
            val x622: Boolean = x609 >= x621
  x622}
            val x626: Unit = if (x623) {          val x624: Int = x609.toInt
            val x625: Unit = throw new ArrayIndexOutOfBoundsException(x624)
  x625} else {()}
            val x627: Long = 8 * x609
            val x628: Long = 24 + x627
            val x629: Object = unsafe.getObject(x607,x628)
            val x630: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,x629,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x630
  }
  // *** begin block 0:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_185(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x631: Boolean = p7_3 eq null
            val x633: Object = if (x631) {          val x632: Object = throw new NullPointerException()
  x632} else {p7_3}
            val x634: Unit = block_188(null,null,null,null,p7_3,null,p7_0,p7_1,p7_2,p7_3,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x634
  }
  // *** begin block 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_186(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x635: Boolean = p8_3 eq null
            val x637: Object = if (x635) {          val x636: Object = throw new NullPointerException()
  x636} else {p8_3}
            val x638: Unit = block_189(null,null,null,null,p8_3,p8_0,p8_1,p8_2,p8_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x638
  }
  // *** begin block 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_187(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x639: Unit = block_190(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p5_4,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x639
  }
  // *** begin block 0:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_188(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x640: Boolean = p8_3 eq null
            val x642: Object = if (x640) {          val x641: Object = throw new NullPointerException()
  x641} else {p8_3}
            val x643: Unit = block_191(null,null,null,null,p8_3,null,null,p8_0,p8_1,p8_2,p8_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x643
  }
  // *** begin block 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_189(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x644: Unit = block_192(r,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x644
  }
  // *** begin block 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_190(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Object,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x645: Boolean = p4_6 eq null
            val x647: Object = if (x645) {          val x646: Object = throw new NullPointerException()
  x646} else {p4_6}
            val x648: Unit = block_193(null,null,null,null,p4_6,p4_7,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x648
  }
  // *** begin block 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_191(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x649: Boolean = p9_3 eq null
            val x651: Object = if (x649) {          val x650: Object = throw new NullPointerException()
  x650} else {p9_3}
            val x652: Unit = block_194(null,null,null,null,p9_3,p9_0,p9_1,p9_2,p9_3,null,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x652
  }
  // *** begin block 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_192(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x653: Unit = block_195(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x653
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_193(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x654: Boolean = p5_3 eq null
            val x656: Object = if (x654) {          val x655: Object = throw new NullPointerException()
  x655} else {p5_3}
            val x657: Unit = block_196(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x657
  }
  // *** begin block 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_194(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x658: Unit = block_197(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x658
  }
  // *** begin block 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_195(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x659: Boolean = p7_3 eq null
            val x661: Object = if (x659) {          val x660: Object = throw new NullPointerException()
  x660} else {p7_3}
            val x662: Unit = unsafe.putInt(p7_3,16, p7_4)
            val x663: Unit = block_198(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x663
  }
  // *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_196(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x664: Boolean = p6_3 eq null
            val x666: Object = if (x664) {          val x665: Object = throw new NullPointerException()
  x665} else {p6_3}
            val x667: Object = unsafe.getObject(p6_3,16)
            val x668: Unit = block_199(r,p5_0,p5_1,p5_2,p5_3,p5_4,x667,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x668
  }
  // *** begin block 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_197(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x669: Boolean = p9_3 eq null
            val x671: Object = if (x669) {          val x670: Object = throw new NullPointerException()
  x670} else {p9_3}
            val x672: Unit = unsafe.putObject(p9_3,32, p9_3)
            val x673: Object = unsafe.getObject(Class.forName("java.lang.Throwable"),200)
            val x674: Boolean = p9_3 eq null
            val x676: Object = if (x674) {          val x675: Object = throw new NullPointerException()
  x675} else {p9_3}
            val x677: Unit = unsafe.putObject(p9_3,40, x673)
            val x678: Object = unsafe.getObject(Class.forName("java.lang.Throwable"),208)
            val x679: Boolean = p9_3 eq null
            val x681: Object = if (x679) {          val x680: Object = throw new NullPointerException()
  x680} else {p9_3}
            val x682: Unit = unsafe.putObject(p9_3,48, x678)
            val x683: Boolean = p9_3 eq null
            val x685: Object = if (x683) {          val x684: Object = throw new NullPointerException()
  x684} else {p9_3}
            val x686: Object = CONST_6.invoke(p9_3) // java.lang.Throwable.fillInStackTrace
            val x687: Unit = block_200(r,p9_0,p9_1,p9_2,p9_3,x686,null,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x687
  }
  // *** begin block 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_198(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x688: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x688
  }
  // *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_199(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x689: Unit = block_201(null,null,null,null,p5_4,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x689
  }
  // *** begin block 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_200(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x690: Unit = block_202(r,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x690
  }
  // *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_201(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x691: Boolean = p6_3 ne null
            val x694: Unit = if (x691) {          val x692: Unit = block_203(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x692} else {          val x693: Unit = block_204(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x693}
  x694
  }
  // *** begin block 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_202(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x695: Unit = block_205(r,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x695
  }
  // *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_203(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x696: Boolean = p6_3 eq null
            val x698: Object = if (x696) {          val x697: Object = throw new NullPointerException()
  x697} else {p6_3}
            val x699: Object = CONST_5.invoke(p6_3) // java.lang.Object.toString
            val x700: Unit = block_206(r,p6_0,p6_1,p6_2,p6_3,x699,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x700
  }
  // *** begin block 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_204(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x701: Unit = block_206(r,p6_0,p6_1,p6_2,p6_3,"null",p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x701
  }
  // *** begin block 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_205(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x702: Unit = block_207(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x702
  }
  // *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_206(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x703: Unit = block_208(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x703
  }
  // *** begin block 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_207(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
  // caught lancet.interpreter.BytecodeInterpreter$InterpreterException: p6_4
  throw p6_4.asInstanceOf[Throwable]
  }
  // *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_208(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x704: Boolean = p5_5 eq null
            val x706: Object = if (x704) {          val x705: Object = throw new NullPointerException()
  x705} else {p5_5}
            val x707: Unit = block_209(null,null,null,null,p5_5,p5_6,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x707
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_209(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x708: Boolean = p6_3 eq null
            val x710: Object = if (x708) {          val x709: Object = throw new NullPointerException()
  x709} else {p6_3}
            val x711: Unit = block_210(null,null,null,null,p6_3,p6_4,null,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x711
  }
  // *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_210(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x712: Boolean = p7_4 ne null
            val x715: Unit = if (x712) {          val x713: Unit = block_211(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x713} else {          val x714: Unit = block_212(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x714}
  x715
  }
  // *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_211(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x716: Boolean = p7_4 eq null
            val x718: Object = if (x716) {          val x717: Object = throw new NullPointerException()
  x717} else {p7_4}
            val x719: Unit = block_213(null,null,null,null,p7_4,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x719
  }
  // *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_212(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x720: Boolean = "null" eq null
            val x722: Object = if (x720) {          val x721: Object = throw new NullPointerException()
  x721} else {"null"}
            val x723: Unit = block_213(null,null,null,null,"null",null,p7_0,p7_1,p7_2,p7_3,"null",p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x723
  }
  // *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_213(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x724: Boolean = p8_3 eq null
            val x726: Object = if (x724) {          val x725: Object = throw new NullPointerException()
  x725} else {p8_3}
            val x727: Object = unsafe.getObject(p8_3,16)
            val x728: Boolean = x727 eq null
            val x730: Object = if (x728) {          val x729: Object = throw new NullPointerException()
  x729} else {x727}
            val x731: Int = java.lang.reflect.Array.getLength(x727)
            val x732: Unit = block_214(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,x731,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x732
  }
  // *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_214(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x733: Boolean = p7_3 eq null
            val x735: Object = if (x733) {          val x734: Object = throw new NullPointerException()
  x734} else {p7_3}
            val x736: Int = unsafe.getInt(p7_3,16)
            val x737: Int = p7_6 + x736
            val x738: Boolean = p7_3 eq null
            val x740: Object = if (x738) {          val x739: Object = throw new NullPointerException()
  x739} else {p7_3}
            val x741: Unit = block_215(null,null,null,null,p7_3,x737,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_6,null,null,null,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x741
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_215(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x742: Boolean = p8_3 eq null
            val x744: Object = if (x742) {          val x743: Object = throw new NullPointerException()
  x743} else {p8_3}
            val x745: Object = unsafe.getObject(p8_3,24)
            val x746: Boolean = x745 eq null
            val x748: Object = if (x746) {          val x747: Object = throw new NullPointerException()
  x747} else {x745}
            val x749: Int = java.lang.reflect.Array.getLength(x745)
            val x750: Int = -x749
            val x751: Int = x750 + p8_4
            val x752: Boolean = x751 <= 0
            val x755: Unit = if (x752) {          val x753: Unit = block_216(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x753} else {          val x754: Unit = block_217(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x754}
  x755
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_216(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x756: Unit = block_218(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x756
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_217(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x757: Boolean = p8_3 eq null
            val x759: Object = if (x757) {          val x758: Object = throw new NullPointerException()
  x758} else {p8_3}
            val x760: Unit = CONST_4.invoke(p8_3.asInstanceOf[AnyRef],p8_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x761: Unit = block_216(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x761
  }
  // *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_218(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x762: Boolean = p7_3 eq null
            val x764: Object = if (x762) {          val x763: Object = throw new NullPointerException()
  x763} else {p7_3}
            val x765: Object = unsafe.getObject(p7_3,24)
            val x766: Boolean = p7_3 eq null
            val x768: Object = if (x766) {          val x767: Object = throw new NullPointerException()
  x767} else {p7_3}
            val x769: Int = unsafe.getInt(p7_3,16)
            val x770: Boolean = p7_4 eq null
            val x772: Object = if (x770) {          val x771: Object = throw new NullPointerException()
  x771} else {p7_4}
            val x773: Unit = block_219(null,null,null,null,p7_4,0,p7_5,x765,x769,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x773
  }
  // *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_219(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x774: Boolean = p8_4 >= 0
            val x777: Unit = if (x774) {          val x775: Unit = block_220(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x775} else {          val x776: Unit = block_221(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x776}
  x777
  }
  // *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_220(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x778: Boolean = p8_3 eq null
            val x780: Object = if (x778) {          val x779: Object = throw new NullPointerException()
  x779} else {p8_3}
            val x781: Object = unsafe.getObject(p8_3,16)
            val x782: Boolean = x781 eq null
            val x784: Object = if (x782) {          val x783: Object = throw new NullPointerException()
  x783} else {x781}
            val x785: Int = java.lang.reflect.Array.getLength(x781)
            val x786: Boolean = x785 >= p8_5
            val x789: Unit = if (x786) {          val x787: Unit = block_222(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x787} else {          val x788: Unit = block_223(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x788}
  x789
  }
  // *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_221(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x790: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x791: Boolean = x790 eq null
            val x793: Object = if (x791) {          val x792: Object = throw new NullPointerException()
  x792} else {x790}
            val x794: Unit = block_224(null,null,null,null,x790,p8_4,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x790,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x794
  }
  // *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_222(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x795: Boolean = p8_5 >= p8_4
            val x798: Unit = if (x795) {          val x796: Unit = block_225(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x796} else {          val x797: Unit = block_226(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x797}
  x798
  }
  // *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_223(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x799: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x800: Boolean = x799 eq null
            val x802: Object = if (x800) {          val x801: Object = throw new NullPointerException()
  x801} else {x799}
            val x803: Unit = block_227(null,null,null,null,x799,p8_5,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x799,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x803
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_224(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x804: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x805: Boolean = x804 eq null
            val x807: Object = if (x805) {          val x806: Object = throw new NullPointerException()
  x806} else {x804}
            val x808: Unit = block_228(null,null,null,null,x804,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x804,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x808
  }
  // *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_225(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x809: Boolean = p8_3 eq null
            val x811: Object = if (x809) {          val x810: Object = throw new NullPointerException()
  x810} else {p8_3}
            val x812: Object = unsafe.getObject(p8_3,16)
            val x813: Int = -p8_4
            val x814: Int = x813 + p8_5
            val x815: Unit = java.lang.System.arraycopy(x812,p8_4,p8_6,p8_7,x814).asInstanceOf[Object]
            val x816: Unit = block_229(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x816
  }
  // *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_226(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x817: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x818: Int = -p8_4
            val x819: Int = x818 + p8_5
            val x820: Boolean = x817 eq null
            val x822: Object = if (x820) {          val x821: Object = throw new NullPointerException()
  x821} else {x817}
            val x823: Unit = block_230(null,null,null,null,x817,x819,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x817,null,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x823
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_227(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x824: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x825: Boolean = x824 eq null
            val x827: Object = if (x825) {          val x826: Object = throw new NullPointerException()
  x826} else {x824}
            val x828: Unit = block_231(null,null,null,null,x824,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x824,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x828
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_228(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x829: Boolean = p10_3 eq null
            val x831: Object = if (x829) {          val x830: Object = throw new NullPointerException()
  x830} else {p10_3}
            val x832: Unit = block_232(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x832
  }
  // *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_229(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x833: Unit = block_233(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x833
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_230(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x834: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x835: Boolean = x834 eq null
            val x837: Object = if (x835) {          val x836: Object = throw new NullPointerException()
  x836} else {x834}
            val x838: Unit = block_234(null,null,null,null,x834,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x834,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x838
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_231(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x839: Boolean = p10_3 eq null
            val x841: Object = if (x839) {          val x840: Object = throw new NullPointerException()
  x840} else {p10_3}
            val x842: Unit = block_235(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x842
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_232(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x843: Boolean = p11_3 eq null
            val x845: Object = if (x843) {          val x844: Object = throw new NullPointerException()
  x844} else {p11_3}
            val x846: Unit = block_236(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x846
  }
  // *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_233(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x847: Boolean = p7_3 eq null
            val x849: Object = if (x847) {          val x848: Object = throw new NullPointerException()
  x848} else {p7_3}
            val x850: Int = unsafe.getInt(p7_3,16)
            val x851: Int = p7_5 + x850
            val x852: Boolean = p7_3 eq null
            val x854: Object = if (x852) {          val x853: Object = throw new NullPointerException()
  x853} else {p7_3}
            val x855: Unit = unsafe.putInt(p7_3,16, x851)
            val x856: Unit = block_237(r,p6_0,p6_1,p6_2,p6_3,p6_4,p7_3,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x856
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_234(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x857: Boolean = p10_3 eq null
            val x859: Object = if (x857) {          val x858: Object = throw new NullPointerException()
  x858} else {p10_3}
            val x860: Unit = block_238(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x860
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_235(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x861: Boolean = p11_3 eq null
            val x863: Object = if (x861) {          val x862: Object = throw new NullPointerException()
  x862} else {p11_3}
            val x864: Unit = block_239(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x864
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_236(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x865: Unit = block_240(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x865
  }
  // *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_237(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Object,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x866: Unit = block_241(r,p5_0,p5_1,p5_2,p5_3,p5_4,p6_3,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x866
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_238(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x867: Boolean = p11_3 eq null
            val x869: Object = if (x867) {          val x868: Object = throw new NullPointerException()
  x868} else {p11_3}
            val x870: Unit = block_242(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x870
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_239(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x871: Unit = block_243(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x871
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_240(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x872: Object = new Array[char](p11_4)
            val x873: Boolean = p11_3 eq null
            val x875: Object = if (x873) {          val x874: Object = throw new NullPointerException()
  x874} else {p11_3}
            val x876: Unit = unsafe.putObject(p11_3,24, x872)
            val x877: Unit = block_244(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x877
  }
  // *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_241(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x878: Unit = block_245(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_3,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x878
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_242(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x879: Unit = block_246(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x879
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_243(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x880: Object = new Array[char](p11_4)
            val x881: Boolean = p11_3 eq null
            val x883: Object = if (x881) {          val x882: Object = throw new NullPointerException()
  x882} else {p11_3}
            val x884: Unit = unsafe.putObject(p11_3,24, x880)
            val x885: Unit = block_247(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x885
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_244(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x886: Unit = block_248(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x886
  }
  // *** begin block 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_245(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x887: Boolean = p4_6 eq null
            val x889: Object = if (x887) {          val x888: Object = throw new NullPointerException()
  x888} else {p4_6}
            val x890: Unit = block_249(null,null,null,null,p4_6,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x890
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_246(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x891: Object = new Array[char](p11_4)
            val x892: Boolean = p11_3 eq null
            val x894: Object = if (x892) {          val x893: Object = throw new NullPointerException()
  x893} else {p11_3}
            val x895: Unit = unsafe.putObject(p11_3,24, x891)
            val x896: Unit = block_250(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x896
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_247(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x897: Unit = block_251(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x897
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_248(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x898: Boolean = p9_6 eq null
            val x900: Object = if (x898) {          val x899: Object = throw new NullPointerException()
  x899} else {p9_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x901: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x901
  }
  // *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_249(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x902: Boolean = p5_3 eq null
            val x904: Object = if (x902) {          val x903: Object = throw new NullPointerException()
  x903} else {p5_3}
            val x905: Unit = block_252(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x905
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_250(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x906: Unit = block_253(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x906
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_251(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x907: Boolean = p9_6 eq null
            val x909: Object = if (x907) {          val x908: Object = throw new NullPointerException()
  x908} else {p9_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x910: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x910
  }
  // *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_252(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x911: Boolean = p6_3 eq null
            val x913: Object = if (x911) {          val x912: Object = throw new NullPointerException()
  x912} else {p6_3}
            val x914: Object = unsafe.getObject(p6_3,16)
            val x915: Unit = block_254(r,p5_0,p5_1,p5_2,p5_3,x914,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x915
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_253(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x916: Boolean = p9_6 eq null
            val x918: Object = if (x916) {          val x917: Object = throw new NullPointerException()
  x917} else {p9_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x919: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x919
  }
  // *** begin block 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_254(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x920: Boolean = p5_4 eq null
            val x922: Object = if (x920) {          val x921: Object = throw new NullPointerException()
  x921} else {p5_4}
            val x923: Unit = block_255(null,null,null,null,p5_4,null,null,null,null,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x923
  }
  // *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_255(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x924: Object = unsafe.allocateInstance(Class.forName("java.lang.String"))
            val x925: Boolean = p6_3 eq null
            val x927: Object = if (x925) {          val x926: Object = throw new NullPointerException()
  x926} else {p6_3}
            val x928: Object = unsafe.getObject(p6_3,24)
            val x929: Boolean = p6_3 eq null
            val x931: Object = if (x929) {          val x930: Object = throw new NullPointerException()
  x930} else {p6_3}
            val x932: Int = unsafe.getInt(p6_3,16)
            val x933: Boolean = x924 eq null
            val x935: Object = if (x933) {          val x934: Object = throw new NullPointerException()
  x934} else {x924}
            val x936: Unit = block_256(null,null,null,null,x924,x928,0,x932,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,x924,null,null,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x936
  }
  // *** begin block 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_256(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x937: Boolean = p7_3 eq null
            val x939: Object = if (x937) {          val x938: Object = throw new NullPointerException()
  x938} else {p7_3}
            val x940: Unit = block_257(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x940
  }
  // *** begin block 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_257(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x941: Unit = block_258(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x941
  }
  // *** begin block 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_258(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x942: Boolean = p7_3 eq null
            val x944: Object = if (x942) {          val x943: Object = throw new NullPointerException()
  x943} else {p7_3}
            val x945: Unit = unsafe.putInt(p7_3,28, 0)
            val x946: Boolean = p7_5 >= 0
            val x949: Unit = if (x946) {          val x947: Unit = block_259(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x947} else {          val x948: Unit = block_260(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x948}
  x949
  }
  // *** begin block 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_259(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x950: Boolean = p7_6 >= 0
            val x953: Unit = if (x950) {          val x951: Unit = block_261(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x951} else {          val x952: Unit = block_262(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 26:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x952}
  x953
  }
  // *** begin block 13:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_260(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x954: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x955: Boolean = x954 eq null
            val x957: Object = if (x955) {          val x956: Object = throw new NullPointerException()
  x956} else {x954}
            val x958: Unit = block_263(null,null,null,null,x954,p7_5,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x954,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x958
  }
  // *** begin block 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_261(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x959: Boolean = p7_4 eq null
            val x961: Object = if (x959) {          val x960: Object = throw new NullPointerException()
  x960} else {p7_4}
            val x962: Int = java.lang.reflect.Array.getLength(p7_4)
            val x963: Int = -p7_6
            val x964: Int = x963 + x962
            val x965: Boolean = x964 >= p7_5
            val x968: Unit = if (x965) {          val x966: Unit = block_264(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x966} else {          val x967: Unit = block_265(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 43:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x967}
  x968
  }
  // *** begin block 26:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_262(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x969: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x970: Boolean = x969 eq null
            val x972: Object = if (x970) {          val x971: Object = throw new NullPointerException()
  x971} else {x969}
            val x973: Unit = block_266(null,null,null,null,x969,p7_6,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x969,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x973
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_263(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x974: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x975: Boolean = x974 eq null
            val x977: Object = if (x975) {          val x976: Object = throw new NullPointerException()
  x976} else {x974}
            val x978: Unit = block_267(null,null,null,null,x974,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x974,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x978
  }
  // *** begin block 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_264(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x979: Int = p7_6 + p7_5
            val x980: Unit = block_268(null,null,null,null,p7_4,p7_5,x979,null,null,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_3,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x980
  }
  // *** begin block 43:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_265(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x981: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x982: Int = p7_6 + p7_5
            val x983: Boolean = x981 eq null
            val x985: Object = if (x983) {          val x984: Object = throw new NullPointerException()
  x984} else {x981}
            val x986: Unit = block_269(null,null,null,null,x981,x982,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x981,null,null,null,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x986
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_266(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x987: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x988: Boolean = x987 eq null
            val x990: Object = if (x988) {          val x989: Object = throw new NullPointerException()
  x989} else {x987}
            val x991: Unit = block_270(null,null,null,null,x987,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x987,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x991
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_267(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x992: Boolean = p9_3 eq null
            val x994: Object = if (x992) {          val x993: Object = throw new NullPointerException()
  x993} else {p9_3}
            val x995: Unit = block_271(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x995
  }
  // *** begin block 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_268(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x996: Int = -p8_4
            val x997: Int = x996 + p8_5
            val x998: Boolean = x997 >= 0
            val x1001: Unit = if (x998) {          val x999: Unit = block_272(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x997,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x999} else {          val x1000: Unit = block_273(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x997,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1000}
  x1001
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_269(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1002: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x1003: Boolean = x1002 eq null
            val x1005: Object = if (x1003) {          val x1004: Object = throw new NullPointerException()
  x1004} else {x1002}
            val x1006: Unit = block_274(null,null,null,null,x1002,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x1002,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1006
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_270(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1007: Boolean = p9_3 eq null
            val x1009: Object = if (x1007) {          val x1008: Object = throw new NullPointerException()
  x1008} else {p9_3}
            val x1010: Unit = block_275(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1010
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_271(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1011: Boolean = p10_3 eq null
            val x1013: Object = if (x1011) {          val x1012: Object = throw new NullPointerException()
  x1012} else {p10_3}
            val x1014: Unit = block_276(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1014
  }
  // *** begin block 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_272(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1015: Object = new Array[char](p8_6)
            val x1016: Boolean = p8_3 eq null
            val x1018: Object = if (x1016) {          val x1017: Object = throw new NullPointerException()
  x1017} else {p8_3}
            val x1019: Int = java.lang.reflect.Array.getLength(p8_3)
            val x1020: Int = -p8_4
            val x1021: Int = x1020 + x1019
            val x1022: Unit = block_277(null,null,null,null,x1021,p8_6,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,x1015,p8_3,p8_4,x1015,0,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1022
  }
  // *** begin block 8:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_273(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1023: Object = unsafe.allocateInstance(Class.forName("java.lang.IllegalArgumentException"))
            val x1024: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x1025: Boolean = x1024 eq null
            val x1027: Object = if (x1025) {          val x1026: Object = throw new NullPointerException()
  x1026} else {x1024}
            val x1028: Unit = block_278(null,null,null,null,x1024,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x1023,x1023,x1024,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1028
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_274(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1029: Boolean = p9_3 eq null
            val x1031: Object = if (x1029) {          val x1030: Object = throw new NullPointerException()
  x1030} else {p9_3}
            val x1032: Unit = block_279(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1032
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_275(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1033: Boolean = p10_3 eq null
            val x1035: Object = if (x1033) {          val x1034: Object = throw new NullPointerException()
  x1034} else {p10_3}
            val x1036: Unit = block_280(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1036
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_276(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1037: Unit = block_281(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1037
  }
  // *** begin block 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_277(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1038: Boolean = p9_4 < p9_3
            val x1041: Unit = if (x1038) {          val x1039: Unit = block_282(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1039} else {          val x1040: Unit = block_283(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1040}
  x1041
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_278(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1042: Boolean = p9_3 eq null
            val x1044: Object = if (x1042) {          val x1043: Object = throw new NullPointerException()
  x1043} else {p9_3}
            val x1045: Unit = block_284(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1045
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_279(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1046: Boolean = p10_3 eq null
            val x1048: Object = if (x1046) {          val x1047: Object = throw new NullPointerException()
  x1047} else {p10_3}
            val x1049: Unit = block_285(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1049
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_280(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1050: Unit = block_286(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1050
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_281(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1051: Object = new Array[char](p10_4)
            val x1052: Boolean = p10_3 eq null
            val x1054: Object = if (x1052) {          val x1053: Object = throw new NullPointerException()
  x1053} else {p10_3}
            val x1055: Unit = unsafe.putObject(p10_3,24, x1051)
            val x1056: Unit = block_287(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1056
  }
  // *** begin block 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_282(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1057: Unit = block_288(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p9_4,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1057
  }
  // *** begin block 5:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_283(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1058: Unit = block_289(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1058
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_284(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1059: Boolean = p10_3 eq null
            val x1061: Object = if (x1059) {          val x1060: Object = throw new NullPointerException()
  x1060} else {p10_3}
            val x1062: Unit = block_290(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1062
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_285(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1063: Unit = block_291(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1063
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_286(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1064: Object = new Array[char](p10_4)
            val x1065: Boolean = p10_3 eq null
            val x1067: Object = if (x1065) {          val x1066: Object = throw new NullPointerException()
  x1066} else {p10_3}
            val x1068: Unit = unsafe.putObject(p10_3,24, x1064)
            val x1069: Unit = block_292(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1069
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_287(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1070: Unit = block_293(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1070
  }
  // *** begin block 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_288(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Int,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1071: Unit = java.lang.System.arraycopy(p8_8,p8_9,p8_10,p8_11,p8_12).asInstanceOf[Object]
            val x1072: Unit = block_294(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1072
  }
  // *** begin block 10:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_289(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Int,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1073: Unit = block_288(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p9_5,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1073
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_290(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1074: Unit = block_295(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1074
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_291(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1075: Object = new Array[char](p10_4)
            val x1076: Boolean = p10_3 eq null
            val x1078: Object = if (x1076) {          val x1077: Object = throw new NullPointerException()
  x1077} else {p10_3}
            val x1079: Unit = unsafe.putObject(p10_3,24, x1075)
            val x1080: Unit = block_296(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1080
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_292(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1081: Unit = block_297(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1081
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_293(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1082: Boolean = p8_6 eq null
            val x1084: Object = if (x1082) {          val x1083: Object = throw new NullPointerException()
  x1083} else {p8_6}
            val x1085: Unit = block_298(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1085
  }
  // *** begin block 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_294(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1086: Unit = block_299(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p8_7,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1086
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_295(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1087: Object = new Array[char](p10_4)
            val x1088: Boolean = p10_3 eq null
            val x1090: Object = if (x1088) {          val x1089: Object = throw new NullPointerException()
  x1089} else {p10_3}
            val x1091: Unit = unsafe.putObject(p10_3,24, x1087)
            val x1092: Unit = block_300(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1092
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_296(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1093: Unit = block_301(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1093
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_297(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1094: Boolean = p8_6 eq null
            val x1096: Object = if (x1094) {          val x1095: Object = throw new NullPointerException()
  x1095} else {p8_6}
            val x1097: Unit = block_302(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1097
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_298(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1098: Boolean = p9_3 eq null
            val x1100: Object = if (x1098) {          val x1099: Object = throw new NullPointerException()
  x1099} else {p9_3}
            val x1101: Unit = block_303(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1101
  }
  // *** begin block 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_299(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Object,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1102: Boolean = p7_7 eq null
            val x1104: Object = if (x1102) {          val x1103: Object = throw new NullPointerException()
  x1103} else {p7_7}
            val x1105: Unit = unsafe.putObject(p7_7,16, p7_8)
            val x1106: Unit = block_304(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1106
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_300(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1107: Unit = block_305(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1107
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_301(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1108: Boolean = p8_6 eq null
            val x1110: Object = if (x1108) {          val x1109: Object = throw new NullPointerException()
  x1109} else {p8_6}
            val x1111: Unit = block_306(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1111
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_302(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1112: Boolean = p9_3 eq null
            val x1114: Object = if (x1112) {          val x1113: Object = throw new NullPointerException()
  x1113} else {p9_3}
            val x1115: Unit = block_307(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1115
  }
  // *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_303(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1116: Boolean = p10_4 ne null
            val x1119: Unit = if (x1116) {          val x1117: Unit = block_308(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1117} else {          val x1118: Unit = block_309(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1118}
  x1119
  }
  // *** begin block 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_304(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1120: Unit = block_310(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1120
  }
  // *** begin block 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_305(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1121: Boolean = p8_10 eq null
            val x1123: Object = if (x1121) {          val x1122: Object = throw new NullPointerException()
  x1122} else {p8_10}
            val x1124: Unit = block_311(null,null,null,null,p8_10,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1124
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_306(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1125: Boolean = p9_3 eq null
            val x1127: Object = if (x1125) {          val x1126: Object = throw new NullPointerException()
  x1126} else {p9_3}
            val x1128: Unit = block_312(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1128
  }
  // *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_307(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1129: Boolean = p10_4 ne null
            val x1132: Unit = if (x1129) {          val x1130: Unit = block_313(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1130} else {          val x1131: Unit = block_314(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1131}
  x1132
  }
  // *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_308(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1133: Boolean = p10_4 eq null
            val x1135: Object = if (x1133) {          val x1134: Object = throw new NullPointerException()
  x1134} else {p10_4}
            val x1136: Unit = block_315(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1136
  }
  // *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_309(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1137: Boolean = "null" eq null
            val x1139: Object = if (x1137) {          val x1138: Object = throw new NullPointerException()
  x1138} else {"null"}
            val x1140: Unit = block_315(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1140
  }
  // *** begin block 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_310(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1141: Unit = block_316(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_4,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1141
  }
  // *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_311(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1142: Boolean = p9_3 eq null
            val x1144: Object = if (x1142) {          val x1143: Object = throw new NullPointerException()
  x1143} else {p9_3}
            val x1145: Unit = block_317(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1145
  }
  // *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_312(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1146: Boolean = p10_4 ne null
            val x1149: Unit = if (x1146) {          val x1147: Unit = block_318(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1147} else {          val x1148: Unit = block_319(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1148}
  x1149
  }
  // *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_313(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1150: Boolean = p10_4 eq null
            val x1152: Object = if (x1150) {          val x1151: Object = throw new NullPointerException()
  x1151} else {p10_4}
            val x1153: Unit = block_320(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1153
  }
  // *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_314(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1154: Boolean = "null" eq null
            val x1156: Object = if (x1154) {          val x1155: Object = throw new NullPointerException()
  x1155} else {"null"}
            val x1157: Unit = block_320(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1157
  }
  // *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_315(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1158: Boolean = p11_3 eq null
            val x1160: Object = if (x1158) {          val x1159: Object = throw new NullPointerException()
  x1159} else {p11_3}
            val x1161: Object = unsafe.getObject(p11_3,16)
            val x1162: Boolean = x1161 eq null
            val x1164: Object = if (x1162) {          val x1163: Object = throw new NullPointerException()
  x1163} else {x1161}
            val x1165: Int = java.lang.reflect.Array.getLength(x1161)
            val x1166: Unit = block_321(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1165,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1166
  }
  // *** begin block 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_316(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1167: Boolean = p4_5 eq null
            val x1169: Object = if (x1167) {          val x1168: Object = throw new NullPointerException()
  x1168} else {p4_5}
            val x1170: Unit = CONST_7.invoke(p4_5.asInstanceOf[AnyRef],p4_6.asInstanceOf[AnyRef]) // java.io.PrintStream.println
            val x1171: Unit = block_322(r,p4_0,p4_1,p4_2,p4_3,p4_4,null,null,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1171
  }
  // *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_317(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1172: Boolean = -2147483648 != p10_4
            val x1175: Unit = if (x1172) {          val x1173: Unit = block_323(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1173} else {          val x1174: Unit = block_324(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1174}
  x1175
  }
  // *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_318(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1176: Boolean = p10_4 eq null
            val x1178: Object = if (x1176) {          val x1177: Object = throw new NullPointerException()
  x1177} else {p10_4}
            val x1179: Unit = block_325(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1179
  }
  // *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_319(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1180: Boolean = "null" eq null
            val x1182: Object = if (x1180) {          val x1181: Object = throw new NullPointerException()
  x1181} else {"null"}
            val x1183: Unit = block_325(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1183
  }
  // *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_320(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1184: Boolean = p11_3 eq null
            val x1186: Object = if (x1184) {          val x1185: Object = throw new NullPointerException()
  x1185} else {p11_3}
            val x1187: Object = unsafe.getObject(p11_3,16)
            val x1188: Boolean = x1187 eq null
            val x1190: Object = if (x1188) {          val x1189: Object = throw new NullPointerException()
  x1189} else {x1187}
            val x1191: Int = java.lang.reflect.Array.getLength(x1187)
            val x1192: Unit = block_326(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1191,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1192
  }
  // *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_321(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1193: Boolean = p10_3 eq null
            val x1195: Object = if (x1193) {          val x1194: Object = throw new NullPointerException()
  x1194} else {p10_3}
            val x1196: Int = unsafe.getInt(p10_3,16)
            val x1197: Int = p10_6 + x1196
            val x1198: Boolean = p10_3 eq null
            val x1200: Object = if (x1198) {          val x1199: Object = throw new NullPointerException()
  x1199} else {p10_3}
            val x1201: Unit = block_327(null,null,null,null,p10_3,x1197,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1201
  }
  // *** begin block 28:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_322(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Any,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1202: Unit = block_328(r,p3_0,p3_1,p3_2,p3_3,p3_4,9,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1202
  }
  // *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_323(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1203: Boolean = p10_4 >= 0
            val x1206: Unit = if (x1203) {          val x1204: Unit = block_329(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1204} else {          val x1205: Unit = block_330(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1205}
  x1206
  }
  // *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_324(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1207: Boolean = p10_3 eq null
            val x1209: Object = if (x1207) {          val x1208: Object = throw new NullPointerException()
  x1208} else {p10_3}
            val x1210: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
            val x1211: Unit = block_331(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1210,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1211
  }
  // *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_325(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1212: Boolean = p11_3 eq null
            val x1214: Object = if (x1212) {          val x1213: Object = throw new NullPointerException()
  x1213} else {p11_3}
            val x1215: Object = unsafe.getObject(p11_3,16)
            val x1216: Boolean = x1215 eq null
            val x1218: Object = if (x1216) {          val x1217: Object = throw new NullPointerException()
  x1217} else {x1215}
            val x1219: Int = java.lang.reflect.Array.getLength(x1215)
            val x1220: Unit = block_332(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1219,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1220
  }
  // *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_326(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1221: Boolean = p10_3 eq null
            val x1223: Object = if (x1221) {          val x1222: Object = throw new NullPointerException()
  x1222} else {p10_3}
            val x1224: Int = unsafe.getInt(p10_3,16)
            val x1225: Int = p10_6 + x1224
            val x1226: Boolean = p10_3 eq null
            val x1228: Object = if (x1226) {          val x1227: Object = throw new NullPointerException()
  x1227} else {p10_3}
            val x1229: Unit = block_333(null,null,null,null,p10_3,x1225,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1229
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_327(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1230: Boolean = p11_3 eq null
            val x1232: Object = if (x1230) {          val x1231: Object = throw new NullPointerException()
  x1231} else {p11_3}
            val x1233: Object = unsafe.getObject(p11_3,24)
            val x1234: Boolean = x1233 eq null
            val x1236: Object = if (x1234) {          val x1235: Object = throw new NullPointerException()
  x1235} else {x1233}
            val x1237: Int = java.lang.reflect.Array.getLength(x1233)
            val x1238: Int = -x1237
            val x1239: Int = x1238 + p11_4
            val x1240: Boolean = x1239 <= 0
            val x1243: Unit = if (x1240) {          val x1241: Unit = block_334(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1241} else {          val x1242: Unit = block_335(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1242}
  x1243
  }
  // *** begin block 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_328(r:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Int,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1244: Unit = block_336(r,p2_0,p2_1,p2_2,p2_3,p2_4,p3_5,p2_6) // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1244
  }
  // *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_329(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1245: Unit = block_337(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1245
  }
  // *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_330(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1246: Int = -p10_4
            val x1247: Unit = block_338(null,null,null,null,x1246,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1247
  }
  // *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_331(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1248: Unit = block_339(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1248
  }
  // *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_332(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1249: Boolean = p10_3 eq null
            val x1251: Object = if (x1249) {          val x1250: Object = throw new NullPointerException()
  x1250} else {p10_3}
            val x1252: Int = unsafe.getInt(p10_3,16)
            val x1253: Int = p10_6 + x1252
            val x1254: Boolean = p10_3 eq null
            val x1256: Object = if (x1254) {          val x1255: Object = throw new NullPointerException()
  x1255} else {p10_3}
            val x1257: Unit = block_340(null,null,null,null,p10_3,x1253,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1257
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_333(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1258: Boolean = p11_3 eq null
            val x1260: Object = if (x1258) {          val x1259: Object = throw new NullPointerException()
  x1259} else {p11_3}
            val x1261: Object = unsafe.getObject(p11_3,24)
            val x1262: Boolean = x1261 eq null
            val x1264: Object = if (x1262) {          val x1263: Object = throw new NullPointerException()
  x1263} else {x1261}
            val x1265: Int = java.lang.reflect.Array.getLength(x1261)
            val x1266: Int = -x1265
            val x1267: Int = x1266 + p11_4
            val x1268: Boolean = x1267 <= 0
            val x1271: Unit = if (x1268) {          val x1269: Unit = block_341(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1269} else {          val x1270: Unit = block_342(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1270}
  x1271
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_334(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1272: Unit = block_343(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1272
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_335(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1273: Boolean = p11_3 eq null
            val x1275: Object = if (x1273) {          val x1274: Object = throw new NullPointerException()
  x1274} else {p11_3}
            val x1276: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x1277: Unit = block_334(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1277
  }
  // *** begin block 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_336(r:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Int,p2_6:Any): Any = {
            val x1278: Unit = (RES = p2_5) // return to root
  x1278
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_337(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1279: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x1280: Long = 0.toLong
            val x1281: Boolean = x1279 eq null
            val x1283: Object = if (x1281) {          val x1282: Object = throw new NullPointerException()
  x1282} else {x1279}
            val x1284: java.lang.Class[Object] = x1279.getClass.asInstanceOf[Class[Object]]
            val x1285: Boolean = x1284.isArray
            val x1286: Boolean = if (x1285) {false} else {true}
            val x1289: Unit = if (x1286) {          val x1287: java.lang.String = x1284.getName
            val x1288: Unit = throw new ArrayStoreException(x1287)
  x1288} else {()}
            val x1290: Boolean = x1280 < 0
            val x1294: Boolean = if (x1290) {x1290} else {          val x1291: Int = java.lang.reflect.Array.getLength(x1279)
            val x1292: Long = x1291.toLong
            val x1293: Boolean = x1280 >= x1292
  x1293}
            val x1297: Unit = if (x1294) {          val x1295: Int = x1280.toInt
            val x1296: Unit = throw new ArrayIndexOutOfBoundsException(x1295)
  x1296} else {()}
            val x1298: Long = 4 * x1280
            val x1299: Long = 24 + x1298
            val x1300: Int = unsafe.getInt(x1279,x1299)
            val x1301: Boolean = x1300 < p11_3
            val x1304: Unit = if (x1301) {          val x1302: Unit = block_344(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1302} else {          val x1303: Unit = block_345(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1303}
  x1304
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_338(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1305: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x1306: Long = 0.toLong
            val x1307: Boolean = x1305 eq null
            val x1309: Object = if (x1307) {          val x1308: Object = throw new NullPointerException()
  x1308} else {x1305}
            val x1310: java.lang.Class[Object] = x1305.getClass.asInstanceOf[Class[Object]]
            val x1311: Boolean = x1310.isArray
            val x1312: Boolean = if (x1311) {false} else {true}
            val x1315: Unit = if (x1312) {          val x1313: java.lang.String = x1310.getName
            val x1314: Unit = throw new ArrayStoreException(x1313)
  x1314} else {()}
            val x1316: Boolean = x1306 < 0
            val x1320: Boolean = if (x1316) {x1316} else {          val x1317: Int = java.lang.reflect.Array.getLength(x1305)
            val x1318: Long = x1317.toLong
            val x1319: Boolean = x1306 >= x1318
  x1319}
            val x1323: Unit = if (x1320) {          val x1321: Int = x1306.toInt
            val x1322: Unit = throw new ArrayIndexOutOfBoundsException(x1321)
  x1322} else {()}
            val x1324: Long = 4 * x1306
            val x1325: Long = 24 + x1324
            val x1326: Int = unsafe.getInt(x1305,x1325)
            val x1327: Boolean = x1326 < p11_3
            val x1330: Unit = if (x1327) {          val x1328: Unit = block_346(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1328} else {          val x1329: Unit = block_347(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1329}
  x1330
  }
  // *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_339(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1331: Unit = block_348(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1331
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_340(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1332: Boolean = p11_3 eq null
            val x1334: Object = if (x1332) {          val x1333: Object = throw new NullPointerException()
  x1333} else {p11_3}
            val x1335: Object = unsafe.getObject(p11_3,24)
            val x1336: Boolean = x1335 eq null
            val x1338: Object = if (x1336) {          val x1337: Object = throw new NullPointerException()
  x1337} else {x1335}
            val x1339: Int = java.lang.reflect.Array.getLength(x1335)
            val x1340: Int = -x1339
            val x1341: Int = x1340 + p11_4
            val x1342: Boolean = x1341 <= 0
            val x1345: Unit = if (x1342) {          val x1343: Unit = block_349(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1343} else {          val x1344: Unit = block_350(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1344}
  x1345
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_341(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1346: Unit = block_351(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1346
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_342(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1347: Boolean = p11_3 eq null
            val x1349: Object = if (x1347) {          val x1348: Object = throw new NullPointerException()
  x1348} else {p11_3}
            val x1350: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x1351: Unit = block_341(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1351
  }
  // *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_343(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1352: Boolean = p10_3 eq null
            val x1354: Object = if (x1352) {          val x1353: Object = throw new NullPointerException()
  x1353} else {p10_3}
            val x1355: Object = unsafe.getObject(p10_3,24)
            val x1356: Boolean = p10_3 eq null
            val x1358: Object = if (x1356) {          val x1357: Object = throw new NullPointerException()
  x1357} else {p10_3}
            val x1359: Int = unsafe.getInt(p10_3,16)
            val x1360: Boolean = p10_4 eq null
            val x1362: Object = if (x1360) {          val x1361: Object = throw new NullPointerException()
  x1361} else {p10_4}
            val x1363: Unit = block_352(null,null,null,null,p10_4,0,p10_5,x1355,x1359,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1363
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_344(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1364: Int = p11_4 + 1
            val x1365: Unit = block_353(r,p11_0,p11_1,p11_2,p11_3,x1364,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1365
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_345(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1366: Int = 1 + p11_4
            val x1367: Unit = block_354(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1366,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1367
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_346(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1368: Int = p11_4 + 1
            val x1369: Unit = block_355(r,p11_0,p11_1,p11_2,p11_3,x1368,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1369
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_347(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1370: Int = 1 + p11_4
            val x1371: Unit = block_356(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1370,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1371
  }
  // *** begin block 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_348(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1372: Boolean = p8_10 eq null
            val x1374: Object = if (x1372) {          val x1373: Object = throw new NullPointerException()
  x1373} else {p8_10}
            val x1375: Unit = block_357(null,null,null,null,p8_10," > ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1375
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_349(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1376: Unit = block_358(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1376
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_350(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1377: Boolean = p11_3 eq null
            val x1379: Object = if (x1377) {          val x1378: Object = throw new NullPointerException()
  x1378} else {p11_3}
            val x1380: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x1381: Unit = block_349(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1381
  }
  // *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_351(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1382: Boolean = p10_3 eq null
            val x1384: Object = if (x1382) {          val x1383: Object = throw new NullPointerException()
  x1383} else {p10_3}
            val x1385: Object = unsafe.getObject(p10_3,24)
            val x1386: Boolean = p10_3 eq null
            val x1388: Object = if (x1386) {          val x1387: Object = throw new NullPointerException()
  x1387} else {p10_3}
            val x1389: Int = unsafe.getInt(p10_3,16)
            val x1390: Boolean = p10_4 eq null
            val x1392: Object = if (x1390) {          val x1391: Object = throw new NullPointerException()
  x1391} else {p10_4}
            val x1393: Unit = block_359(null,null,null,null,p10_4,0,p10_5,x1385,x1389,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1393
  }
  // *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_352(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1394: Boolean = p11_4 >= 0
            val x1397: Unit = if (x1394) {          val x1395: Unit = block_360(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1395} else {          val x1396: Unit = block_361(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1396}
  x1397
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_353(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1398: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x1399: Long = p11_4.toLong
            val x1400: Boolean = x1398 eq null
            val x1402: Object = if (x1400) {          val x1401: Object = throw new NullPointerException()
  x1401} else {x1398}
            val x1403: java.lang.Class[Object] = x1398.getClass.asInstanceOf[Class[Object]]
            val x1404: Boolean = x1403.isArray
            val x1405: Boolean = if (x1404) {false} else {true}
            val x1408: Unit = if (x1405) {          val x1406: java.lang.String = x1403.getName
            val x1407: Unit = throw new ArrayStoreException(x1406)
  x1407} else {()}
            val x1409: Boolean = x1399 < 0
            val x1413: Boolean = if (x1409) {x1409} else {          val x1410: Int = java.lang.reflect.Array.getLength(x1398)
            val x1411: Long = x1410.toLong
            val x1412: Boolean = x1399 >= x1411
  x1412}
            val x1416: Unit = if (x1413) {          val x1414: Int = x1399.toInt
            val x1415: Unit = throw new ArrayIndexOutOfBoundsException(x1414)
  x1415} else {()}
            val x1417: Long = 4 * x1399
            val x1418: Long = 24 + x1417
            val x1419: Int = unsafe.getInt(x1398,x1418)
            val x1420: Boolean = x1419 < p11_3
            val x1423: Unit = if (x1420) {          val x1421: Unit = block_344(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1421} else {          val x1422: Unit = block_345(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1422}
  x1423
  }
  // *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_354(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1424: Boolean = p10_3 eq null
            val x1426: Object = if (x1424) {          val x1425: Object = throw new NullPointerException()
  x1425} else {p10_3}
            val x1427: Int = unsafe.getInt(p10_3,16)
            val x1428: Int = p10_7 + x1427
            val x1429: Boolean = p10_3 eq null
            val x1431: Object = if (x1429) {          val x1430: Object = throw new NullPointerException()
  x1430} else {p10_3}
            val x1432: Unit = block_362(null,null,null,null,p10_3,x1428,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x1428,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1432
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_355(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1433: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x1434: Long = p11_4.toLong
            val x1435: Boolean = x1433 eq null
            val x1437: Object = if (x1435) {          val x1436: Object = throw new NullPointerException()
  x1436} else {x1433}
            val x1438: java.lang.Class[Object] = x1433.getClass.asInstanceOf[Class[Object]]
            val x1439: Boolean = x1438.isArray
            val x1440: Boolean = if (x1439) {false} else {true}
            val x1443: Unit = if (x1440) {          val x1441: java.lang.String = x1438.getName
            val x1442: Unit = throw new ArrayStoreException(x1441)
  x1442} else {()}
            val x1444: Boolean = x1434 < 0
            val x1448: Boolean = if (x1444) {x1444} else {          val x1445: Int = java.lang.reflect.Array.getLength(x1433)
            val x1446: Long = x1445.toLong
            val x1447: Boolean = x1434 >= x1446
  x1447}
            val x1451: Unit = if (x1448) {          val x1449: Int = x1434.toInt
            val x1450: Unit = throw new ArrayIndexOutOfBoundsException(x1449)
  x1450} else {()}
            val x1452: Long = 4 * x1434
            val x1453: Long = 24 + x1452
            val x1454: Int = unsafe.getInt(x1433,x1453)
            val x1455: Boolean = x1454 < p11_3
            val x1458: Unit = if (x1455) {          val x1456: Unit = block_346(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1456} else {          val x1457: Unit = block_347(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1457}
  x1458
  }
  // *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_356(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1459: Int = 1 + p10_7
            val x1460: Unit = block_354(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1459,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1460
  }
  // *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_357(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1461: Boolean = p9_3 eq null
            val x1463: Object = if (x1461) {          val x1462: Object = throw new NullPointerException()
  x1462} else {p9_3}
            val x1464: Unit = block_363(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1464
  }
  // *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_358(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1465: Boolean = p10_3 eq null
            val x1467: Object = if (x1465) {          val x1466: Object = throw new NullPointerException()
  x1466} else {p10_3}
            val x1468: Object = unsafe.getObject(p10_3,24)
            val x1469: Boolean = p10_3 eq null
            val x1471: Object = if (x1469) {          val x1470: Object = throw new NullPointerException()
  x1470} else {p10_3}
            val x1472: Int = unsafe.getInt(p10_3,16)
            val x1473: Boolean = p10_4 eq null
            val x1475: Object = if (x1473) {          val x1474: Object = throw new NullPointerException()
  x1474} else {p10_4}
            val x1476: Unit = block_364(null,null,null,null,p10_4,0,p10_5,x1468,x1472,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1476
  }
  // *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_359(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1477: Boolean = p11_4 >= 0
            val x1480: Unit = if (x1477) {          val x1478: Unit = block_365(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1478} else {          val x1479: Unit = block_366(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1479}
  x1480
  }
  // *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_360(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1481: Boolean = p11_3 eq null
            val x1483: Object = if (x1481) {          val x1482: Object = throw new NullPointerException()
  x1482} else {p11_3}
            val x1484: Object = unsafe.getObject(p11_3,16)
            val x1485: Boolean = x1484 eq null
            val x1487: Object = if (x1485) {          val x1486: Object = throw new NullPointerException()
  x1486} else {x1484}
            val x1488: Int = java.lang.reflect.Array.getLength(x1484)
            val x1489: Boolean = x1488 >= p11_5
            val x1492: Unit = if (x1489) {          val x1490: Unit = block_367(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1490} else {          val x1491: Unit = block_368(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1491}
  x1492
  }
  // *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_361(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1493: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1494: Boolean = x1493 eq null
            val x1496: Object = if (x1494) {          val x1495: Object = throw new NullPointerException()
  x1495} else {x1493}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1497: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1497
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_362(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1498: Boolean = p11_3 eq null
            val x1500: Object = if (x1498) {          val x1499: Object = throw new NullPointerException()
  x1499} else {p11_3}
            val x1501: Object = unsafe.getObject(p11_3,24)
            val x1502: Boolean = x1501 eq null
            val x1504: Object = if (x1502) {          val x1503: Object = throw new NullPointerException()
  x1503} else {x1501}
            val x1505: Int = java.lang.reflect.Array.getLength(x1501)
            val x1506: Int = -x1505
            val x1507: Int = x1506 + p11_4
            val x1508: Boolean = x1507 <= 0
            val x1511: Unit = if (x1508) {          val x1509: Unit = block_369(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1509} else {          val x1510: Unit = block_370(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1510}
  x1511
  }
  // *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_363(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1512: Boolean = p10_4 ne null
            val x1515: Unit = if (x1512) {          val x1513: Unit = block_371(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1513} else {          val x1514: Unit = block_372(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1514}
  x1515
  }
  // *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_364(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1516: Boolean = p11_4 >= 0
            val x1519: Unit = if (x1516) {          val x1517: Unit = block_373(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1517} else {          val x1518: Unit = block_374(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1518}
  x1519
  }
  // *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_365(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1520: Boolean = p11_3 eq null
            val x1522: Object = if (x1520) {          val x1521: Object = throw new NullPointerException()
  x1521} else {p11_3}
            val x1523: Object = unsafe.getObject(p11_3,16)
            val x1524: Boolean = x1523 eq null
            val x1526: Object = if (x1524) {          val x1525: Object = throw new NullPointerException()
  x1525} else {x1523}
            val x1527: Int = java.lang.reflect.Array.getLength(x1523)
            val x1528: Boolean = x1527 >= p11_5
            val x1531: Unit = if (x1528) {          val x1529: Unit = block_375(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1529} else {          val x1530: Unit = block_376(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1530}
  x1531
  }
  // *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_366(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1532: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1533: Boolean = x1532 eq null
            val x1535: Object = if (x1533) {          val x1534: Object = throw new NullPointerException()
  x1534} else {x1532}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1536: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1536
  }
  // *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_367(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1537: Boolean = p11_5 >= p11_4
            val x1540: Unit = if (x1537) {          val x1538: Unit = block_377(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1538} else {          val x1539: Unit = block_378(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1539}
  x1540
  }
  // *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_368(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1541: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1542: Boolean = x1541 eq null
            val x1544: Object = if (x1542) {          val x1543: Object = throw new NullPointerException()
  x1543} else {x1541}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1545: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1545
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_369(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1546: Unit = block_379(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1546
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_370(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1547: Boolean = p11_3 eq null
            val x1549: Object = if (x1547) {          val x1548: Object = throw new NullPointerException()
  x1548} else {p11_3}
            val x1550: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x1551: Unit = block_369(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1551
  }
  // *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_371(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1552: Boolean = p10_4 eq null
            val x1554: Object = if (x1552) {          val x1553: Object = throw new NullPointerException()
  x1553} else {p10_4}
            val x1555: Unit = block_380(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1555
  }
  // *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_372(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1556: Boolean = "null" eq null
            val x1558: Object = if (x1556) {          val x1557: Object = throw new NullPointerException()
  x1557} else {"null"}
            val x1559: Unit = block_380(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1559
  }
  // *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_373(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1560: Boolean = p11_3 eq null
            val x1562: Object = if (x1560) {          val x1561: Object = throw new NullPointerException()
  x1561} else {p11_3}
            val x1563: Object = unsafe.getObject(p11_3,16)
            val x1564: Boolean = x1563 eq null
            val x1566: Object = if (x1564) {          val x1565: Object = throw new NullPointerException()
  x1565} else {x1563}
            val x1567: Int = java.lang.reflect.Array.getLength(x1563)
            val x1568: Boolean = x1567 >= p11_5
            val x1571: Unit = if (x1568) {          val x1569: Unit = block_381(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1569} else {          val x1570: Unit = block_382(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1570}
  x1571
  }
  // *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_374(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1572: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1573: Boolean = x1572 eq null
            val x1575: Object = if (x1573) {          val x1574: Object = throw new NullPointerException()
  x1574} else {x1572}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1576: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1576
  }
  // *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_375(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1577: Boolean = p11_5 >= p11_4
            val x1580: Unit = if (x1577) {          val x1578: Unit = block_383(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1578} else {          val x1579: Unit = block_384(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1579}
  x1580
  }
  // *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_376(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1581: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1582: Boolean = x1581 eq null
            val x1584: Object = if (x1582) {          val x1583: Object = throw new NullPointerException()
  x1583} else {x1581}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1585: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1585
  }
  // *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_377(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1586: Boolean = p11_3 eq null
            val x1588: Object = if (x1586) {          val x1587: Object = throw new NullPointerException()
  x1587} else {p11_3}
            val x1589: Object = unsafe.getObject(p11_3,16)
            val x1590: Int = -p11_4
            val x1591: Int = x1590 + p11_5
            val x1592: Unit = java.lang.System.arraycopy(x1589,p11_4,p11_6,p11_7,x1591).asInstanceOf[Object]
            val x1593: Unit = block_385(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1593
  }
  // *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_378(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1594: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1595: Int = -p11_4
            val x1596: Int = x1595 + p11_5
            val x1597: Boolean = x1594 eq null
            val x1599: Object = if (x1597) {          val x1598: Object = throw new NullPointerException()
  x1598} else {x1594}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1600: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1600
  }
  // *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_379(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1601: Boolean = p10_3 eq null
            val x1603: Object = if (x1601) {          val x1602: Object = throw new NullPointerException()
  x1602} else {p10_3}
            val x1604: Object = unsafe.getObject(p10_3,24)
            val x1605: Unit = block_386(null,null,null,null,p10_4,p10_6,x1604,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1605
  }
  // *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_380(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1606: Boolean = p11_3 eq null
            val x1608: Object = if (x1606) {          val x1607: Object = throw new NullPointerException()
  x1607} else {p11_3}
            val x1609: Object = unsafe.getObject(p11_3,16)
            val x1610: Boolean = x1609 eq null
            val x1612: Object = if (x1610) {          val x1611: Object = throw new NullPointerException()
  x1611} else {x1609}
            val x1613: Int = java.lang.reflect.Array.getLength(x1609)
            val x1614: Unit = block_387(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1613,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1614
  }
  // *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_381(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1615: Boolean = p11_5 >= p11_4
            val x1618: Unit = if (x1615) {          val x1616: Unit = block_388(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1616} else {          val x1617: Unit = block_389(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1617}
  x1618
  }
  // *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_382(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1619: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1620: Boolean = x1619 eq null
            val x1622: Object = if (x1620) {          val x1621: Object = throw new NullPointerException()
  x1621} else {x1619}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1623: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1623
  }
  // *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_383(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1624: Boolean = p11_3 eq null
            val x1626: Object = if (x1624) {          val x1625: Object = throw new NullPointerException()
  x1625} else {p11_3}
            val x1627: Object = unsafe.getObject(p11_3,16)
            val x1628: Int = -p11_4
            val x1629: Int = x1628 + p11_5
            val x1630: Unit = java.lang.System.arraycopy(x1627,p11_4,p11_6,p11_7,x1629).asInstanceOf[Object]
            val x1631: Unit = block_390(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1631
  }
  // *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_384(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1632: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1633: Int = -p11_4
            val x1634: Int = x1633 + p11_5
            val x1635: Boolean = x1632 eq null
            val x1637: Object = if (x1635) {          val x1636: Object = throw new NullPointerException()
  x1636} else {x1632}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1638: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1638
  }
  // *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_385(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1639: Unit = block_391(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1639
  }
  // *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_386(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1640: Boolean = p11_3 >= 0
            val x1643: Unit = if (x1640) {          val x1641: Unit = block_392(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1641} else {          val x1642: Unit = block_393(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1642}
  x1643
  }
  // *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_387(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1644: Boolean = p10_3 eq null
            val x1646: Object = if (x1644) {          val x1645: Object = throw new NullPointerException()
  x1645} else {p10_3}
            val x1647: Int = unsafe.getInt(p10_3,16)
            val x1648: Int = p10_6 + x1647
            val x1649: Boolean = p10_3 eq null
            val x1651: Object = if (x1649) {          val x1650: Object = throw new NullPointerException()
  x1650} else {p10_3}
            val x1652: Unit = block_394(null,null,null,null,p10_3,x1648,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1652
  }
  // *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_388(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1653: Boolean = p11_3 eq null
            val x1655: Object = if (x1653) {          val x1654: Object = throw new NullPointerException()
  x1654} else {p11_3}
            val x1656: Object = unsafe.getObject(p11_3,16)
            val x1657: Int = -p11_4
            val x1658: Int = x1657 + p11_5
            val x1659: Unit = java.lang.System.arraycopy(x1656,p11_4,p11_6,p11_7,x1658).asInstanceOf[Object]
            val x1660: Unit = block_395(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1660
  }
  // *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_389(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1661: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1662: Int = -p11_4
            val x1663: Int = x1662 + p11_5
            val x1664: Boolean = x1661 eq null
            val x1666: Object = if (x1664) {          val x1665: Object = throw new NullPointerException()
  x1665} else {x1661}
  // *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
            val x1667: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
  x1667
  }
  // *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_390(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1668: Unit = block_396(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1668
  }
  // *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_391(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1669: Boolean = p10_3 eq null
            val x1671: Object = if (x1669) {          val x1670: Object = throw new NullPointerException()
  x1670} else {p10_3}
            val x1672: Int = unsafe.getInt(p10_3,16)
            val x1673: Int = p10_5 + x1672
            val x1674: Boolean = p10_3 eq null
            val x1676: Object = if (x1674) {          val x1675: Object = throw new NullPointerException()
  x1675} else {p10_3}
            val x1677: Unit = unsafe.putInt(p10_3,16, x1673)
            val x1678: Unit = block_397(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1678
  }
  // *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_392(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1679: Boolean = 65536 > p11_3
            val x1682: Unit = if (x1679) {          val x1680: Unit = block_398(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1680} else {          val x1681: Unit = block_399(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1681}
  x1682
  }
  // *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_393(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1683: Int = -p11_3
            val x1684: Boolean = 65536 > x1683
            val x1687: Unit = if (x1684) {          val x1685: Unit = block_398(r,p11_0,p11_1,p11_2,x1683,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1685} else {          val x1686: Unit = block_399(r,p11_0,p11_1,p11_2,x1683,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1686}
  x1687
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_394(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1688: Boolean = p11_3 eq null
            val x1690: Object = if (x1688) {          val x1689: Object = throw new NullPointerException()
  x1689} else {p11_3}
            val x1691: Object = unsafe.getObject(p11_3,24)
            val x1692: Boolean = x1691 eq null
            val x1694: Object = if (x1692) {          val x1693: Object = throw new NullPointerException()
  x1693} else {x1691}
            val x1695: Int = java.lang.reflect.Array.getLength(x1691)
            val x1696: Int = -x1695
            val x1697: Int = x1696 + p11_4
            val x1698: Boolean = x1697 <= 0
            val x1701: Unit = if (x1698) {          val x1699: Unit = block_400(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1699} else {          val x1700: Unit = block_401(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1700}
  x1701
  }
  // *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_395(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1702: Unit = block_402(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1702
  }
  // *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_396(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1703: Boolean = p10_3 eq null
            val x1705: Object = if (x1703) {          val x1704: Object = throw new NullPointerException()
  x1704} else {p10_3}
            val x1706: Int = unsafe.getInt(p10_3,16)
            val x1707: Int = p10_5 + x1706
            val x1708: Boolean = p10_3 eq null
            val x1710: Object = if (x1708) {          val x1709: Object = throw new NullPointerException()
  x1709} else {p10_3}
            val x1711: Unit = unsafe.putInt(p10_3,16, x1707)
            val x1712: Unit = block_403(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1712
  }
  // *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_397(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1713: Unit = block_404(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1713
  }
  // *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_398(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1714: Int = 52429 * p11_3
            val x1715: Int = x1714 >>> 19
            val x1716: Int = x1715 << 3
            val x1717: Int = x1715 << 1
            val x1718: Int = x1717 + x1716
            val x1719: Int = -x1718
            val x1720: Int = x1719 + p11_3
            val x1721: Int = p11_8 + -1
            val x1722: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
            val x1723: Long = x1720.toLong
            val x1724: Boolean = x1722 eq null
            val x1726: Object = if (x1724) {          val x1725: Object = throw new NullPointerException()
  x1725} else {x1722}
            val x1727: java.lang.Class[Object] = x1722.getClass.asInstanceOf[Class[Object]]
            val x1728: Boolean = x1727.isArray
            val x1729: Boolean = if (x1728) {false} else {true}
            val x1732: Unit = if (x1729) {          val x1730: java.lang.String = x1727.getName
            val x1731: Unit = throw new ArrayStoreException(x1730)
  x1731} else {()}
            val x1733: Boolean = x1723 < 0
            val x1737: Boolean = if (x1733) {x1733} else {          val x1734: Int = java.lang.reflect.Array.getLength(x1722)
            val x1735: Long = x1734.toLong
            val x1736: Boolean = x1723 >= x1735
  x1736}
            val x1740: Unit = if (x1737) {          val x1738: Int = x1723.toInt
            val x1739: Unit = throw new ArrayIndexOutOfBoundsException(x1738)
  x1739} else {()}
            val x1741: Long = 2 * x1723
            val x1742: Long = 24 + x1741
            val x1743: Char = unsafe.getChar(x1722,x1742)
            val x1744: Int = x1743.toInt
            val x1745: Char = x1744.toChar
            val x1746: Long = x1721.toLong
            val x1747: Boolean = p11_5 eq null
            val x1749: Object = if (x1747) {          val x1748: Object = throw new NullPointerException()
  x1748} else {p11_5}
            val x1750: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x1751: Boolean = x1750.isArray
            val x1752: Boolean = if (x1751) {false} else {true}
            val x1755: Unit = if (x1752) {          val x1753: java.lang.String = x1750.getName
            val x1754: Unit = throw new ArrayStoreException(x1753)
  x1754} else {()}
            val x1756: Boolean = x1746 < 0
            val x1760: Boolean = if (x1756) {x1756} else {          val x1757: Int = java.lang.reflect.Array.getLength(p11_5)
            val x1758: Long = x1757.toLong
            val x1759: Boolean = x1746 >= x1758
  x1759}
            val x1763: Unit = if (x1760) {          val x1761: Int = x1746.toInt
            val x1762: Unit = throw new ArrayIndexOutOfBoundsException(x1761)
  x1762} else {()}
            val x1764: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x1765: java.lang.Class[Object] = x1764.getComponentType.asInstanceOf[Class[Object]]
            val x1766: Boolean = x1765.isAssignableFrom(classOf[Char])
            val x1767: Boolean = if (x1766) {false} else {true}
            val x1769: Unit = if (x1767) {          val x1768: Unit = throw new ArrayStoreException("char")
  x1768} else {()}
            val x1770: Long = 2 * x1746
            val x1771: Long = 24 + x1770
            val x1772: Unit = unsafe.putChar(p11_5,x1771, x1745)
            val x1773: Boolean = x1715 != 0
            val x1776: Unit = if (x1773) {          val x1774: Unit = block_398(r,p11_0,p11_1,p11_2,x1715,p11_4,p11_5,x1715,x1720,x1721,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1774} else {          val x1775: Unit = block_405(r,p11_0,p11_1,p11_2,x1715,p11_4,p11_5,x1715,x1720,x1721,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1775}
  x1776
  }
  // *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_399(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1777: Int = p11_3 / 100
            val x1778: Int = x1777 << 6
            val x1779: Int = x1777 << 5
            val x1780: Int = x1779 + x1778
            val x1781: Int = x1777 << 2
            val x1782: Int = x1781 + x1780
            val x1783: Int = -x1782
            val x1784: Int = x1783 + p11_3
            val x1785: Int = p11_8 + -1
            val x1786: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
            val x1787: Long = x1784.toLong
            val x1788: Boolean = x1786 eq null
            val x1790: Object = if (x1788) {          val x1789: Object = throw new NullPointerException()
  x1789} else {x1786}
            val x1791: java.lang.Class[Object] = x1786.getClass.asInstanceOf[Class[Object]]
            val x1792: Boolean = x1791.isArray
            val x1793: Boolean = if (x1792) {false} else {true}
            val x1796: Unit = if (x1793) {          val x1794: java.lang.String = x1791.getName
            val x1795: Unit = throw new ArrayStoreException(x1794)
  x1795} else {()}
            val x1797: Boolean = x1787 < 0
            val x1801: Boolean = if (x1797) {x1797} else {          val x1798: Int = java.lang.reflect.Array.getLength(x1786)
            val x1799: Long = x1798.toLong
            val x1800: Boolean = x1787 >= x1799
  x1800}
            val x1804: Unit = if (x1801) {          val x1802: Int = x1787.toInt
            val x1803: Unit = throw new ArrayIndexOutOfBoundsException(x1802)
  x1803} else {()}
            val x1805: Long = 2 * x1787
            val x1806: Long = 24 + x1805
            val x1807: Char = unsafe.getChar(x1786,x1806)
            val x1808: Int = x1807.toInt
            val x1809: Char = x1808.toChar
            val x1810: Long = x1785.toLong
            val x1811: Boolean = p11_5 eq null
            val x1813: Object = if (x1811) {          val x1812: Object = throw new NullPointerException()
  x1812} else {p11_5}
            val x1814: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x1815: Boolean = x1814.isArray
            val x1816: Boolean = if (x1815) {false} else {true}
            val x1819: Unit = if (x1816) {          val x1817: java.lang.String = x1814.getName
            val x1818: Unit = throw new ArrayStoreException(x1817)
  x1818} else {()}
            val x1820: Boolean = x1810 < 0
            val x1824: Boolean = if (x1820) {x1820} else {          val x1821: Int = java.lang.reflect.Array.getLength(p11_5)
            val x1822: Long = x1821.toLong
            val x1823: Boolean = x1810 >= x1822
  x1823}
            val x1827: Unit = if (x1824) {          val x1825: Int = x1810.toInt
            val x1826: Unit = throw new ArrayIndexOutOfBoundsException(x1825)
  x1826} else {()}
            val x1828: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x1829: java.lang.Class[Object] = x1828.getComponentType.asInstanceOf[Class[Object]]
            val x1830: Boolean = x1829.isAssignableFrom(classOf[Char])
            val x1831: Boolean = if (x1830) {false} else {true}
            val x1833: Unit = if (x1831) {          val x1832: Unit = throw new ArrayStoreException("char")
  x1832} else {()}
            val x1834: Long = 2 * x1810
            val x1835: Long = 24 + x1834
            val x1836: Unit = unsafe.putChar(p11_5,x1835, x1809)
            val x1837: Int = x1785 + -1
            val x1838: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
            val x1839: Long = x1784.toLong
            val x1840: Boolean = x1838 eq null
            val x1842: Object = if (x1840) {          val x1841: Object = throw new NullPointerException()
  x1841} else {x1838}
            val x1843: java.lang.Class[Object] = x1838.getClass.asInstanceOf[Class[Object]]
            val x1844: Boolean = x1843.isArray
            val x1845: Boolean = if (x1844) {false} else {true}
            val x1848: Unit = if (x1845) {          val x1846: java.lang.String = x1843.getName
            val x1847: Unit = throw new ArrayStoreException(x1846)
  x1847} else {()}
            val x1849: Boolean = x1839 < 0
            val x1853: Boolean = if (x1849) {x1849} else {          val x1850: Int = java.lang.reflect.Array.getLength(x1838)
            val x1851: Long = x1850.toLong
            val x1852: Boolean = x1839 >= x1851
  x1852}
            val x1856: Unit = if (x1853) {          val x1854: Int = x1839.toInt
            val x1855: Unit = throw new ArrayIndexOutOfBoundsException(x1854)
  x1855} else {()}
            val x1857: Long = 2 * x1839
            val x1858: Long = 24 + x1857
            val x1859: Char = unsafe.getChar(x1838,x1858)
            val x1860: Int = x1859.toInt
            val x1861: Char = x1860.toChar
            val x1862: Long = x1837.toLong
            val x1863: Boolean = p11_5 eq null
            val x1865: Object = if (x1863) {          val x1864: Object = throw new NullPointerException()
  x1864} else {p11_5}
            val x1866: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x1867: Boolean = x1866.isArray
            val x1868: Boolean = if (x1867) {false} else {true}
            val x1871: Unit = if (x1868) {          val x1869: java.lang.String = x1866.getName
            val x1870: Unit = throw new ArrayStoreException(x1869)
  x1870} else {()}
            val x1872: Boolean = x1862 < 0
            val x1876: Boolean = if (x1872) {x1872} else {          val x1873: Int = java.lang.reflect.Array.getLength(p11_5)
            val x1874: Long = x1873.toLong
            val x1875: Boolean = x1862 >= x1874
  x1875}
            val x1879: Unit = if (x1876) {          val x1877: Int = x1862.toInt
            val x1878: Unit = throw new ArrayIndexOutOfBoundsException(x1877)
  x1878} else {()}
            val x1880: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x1881: java.lang.Class[Object] = x1880.getComponentType.asInstanceOf[Class[Object]]
            val x1882: Boolean = x1881.isAssignableFrom(classOf[Char])
            val x1883: Boolean = if (x1882) {false} else {true}
            val x1885: Unit = if (x1883) {          val x1884: Unit = throw new ArrayStoreException("char")
  x1884} else {()}
            val x1886: Long = 2 * x1862
            val x1887: Long = 24 + x1886
            val x1888: Unit = unsafe.putChar(p11_5,x1887, x1861)
            val x1889: Unit = block_392(r,p11_0,p11_1,p11_2,x1777,p11_4,p11_5,x1777,x1784,x1837,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1889
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_400(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1890: Unit = block_406(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1890
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_401(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1891: Boolean = p11_3 eq null
            val x1893: Object = if (x1891) {          val x1892: Object = throw new NullPointerException()
  x1892} else {p11_3}
            val x1894: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x1895: Unit = block_400(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1895
  }
  // *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_402(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1896: Boolean = p10_3 eq null
            val x1898: Object = if (x1896) {          val x1897: Object = throw new NullPointerException()
  x1897} else {p10_3}
            val x1899: Int = unsafe.getInt(p10_3,16)
            val x1900: Int = p10_5 + x1899
            val x1901: Boolean = p10_3 eq null
            val x1903: Object = if (x1901) {          val x1902: Object = throw new NullPointerException()
  x1902} else {p10_3}
            val x1904: Unit = unsafe.putInt(p10_3,16, x1900)
            val x1905: Unit = block_407(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1905
  }
  // *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_403(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1906: Unit = block_408(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1906
  }
  // *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_404(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1907: Boolean = p8_6 eq null
            val x1909: Object = if (x1907) {          val x1908: Object = throw new NullPointerException()
  x1908} else {p8_6}
            val x1910: Unit = block_409(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1910
  }
  // *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_405(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1911: Unit = block_410(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1911
  }
  // *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_406(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1912: Boolean = p10_3 eq null
            val x1914: Object = if (x1912) {          val x1913: Object = throw new NullPointerException()
  x1913} else {p10_3}
            val x1915: Object = unsafe.getObject(p10_3,24)
            val x1916: Boolean = p10_3 eq null
            val x1918: Object = if (x1916) {          val x1917: Object = throw new NullPointerException()
  x1917} else {p10_3}
            val x1919: Int = unsafe.getInt(p10_3,16)
            val x1920: Boolean = p10_4 eq null
            val x1922: Object = if (x1920) {          val x1921: Object = throw new NullPointerException()
  x1921} else {p10_4}
            val x1923: Unit = block_411(null,null,null,null,p10_4,0,p10_5,x1915,x1919,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1923
  }
  // *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_407(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1924: Unit = block_412(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1924
  }
  // *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_408(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1925: Boolean = p8_6 eq null
            val x1927: Object = if (x1925) {          val x1926: Object = throw new NullPointerException()
  x1926} else {p8_6}
            val x1928: Unit = block_413(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1928
  }
  // *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_409(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1929: Boolean = p9_3 eq null
            val x1931: Object = if (x1929) {          val x1930: Object = throw new NullPointerException()
  x1930} else {p9_3}
            val x1932: Unit = block_414(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1932
  }
  // *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_410(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1933: Boolean = p11_9 == 0
            val x1936: Unit = if (x1933) {          val x1934: Unit = block_415(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1934} else {          val x1935: Unit = block_416(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1935}
  x1936
  }
  // *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_411(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1937: Boolean = p11_4 >= 0
            val x1940: Unit = if (x1937) {          val x1938: Unit = block_417(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1938} else {          val x1939: Unit = block_418(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1939}
  x1940
  }
  // *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_412(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1941: Boolean = p8_6 eq null
            val x1943: Object = if (x1941) {          val x1942: Object = throw new NullPointerException()
  x1942} else {p8_6}
            val x1944: Unit = block_419(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1944
  }
  // *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_413(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1945: Boolean = p9_3 eq null
            val x1947: Object = if (x1945) {          val x1946: Object = throw new NullPointerException()
  x1946} else {p9_3}
            val x1948: Unit = block_420(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1948
  }
  // *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_414(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1949: Boolean = -2147483648 != p10_4
            val x1952: Unit = if (x1949) {          val x1950: Unit = block_421(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1950} else {          val x1951: Unit = block_422(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1951}
  x1952
  }
  // *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_415(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1953: Unit = block_423(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1953
  }
  // *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_416(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1954: Int = p11_8 + -1
            val x1955: Char = p11_9.toChar
            val x1956: Long = x1954.toLong
            val x1957: Boolean = p11_5 eq null
            val x1959: Object = if (x1957) {          val x1958: Object = throw new NullPointerException()
  x1958} else {p11_5}
            val x1960: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x1961: Boolean = x1960.isArray
            val x1962: Boolean = if (x1961) {false} else {true}
            val x1965: Unit = if (x1962) {          val x1963: java.lang.String = x1960.getName
            val x1964: Unit = throw new ArrayStoreException(x1963)
  x1964} else {()}
            val x1966: Boolean = x1956 < 0
            val x1970: Boolean = if (x1966) {x1966} else {          val x1967: Int = java.lang.reflect.Array.getLength(p11_5)
            val x1968: Long = x1967.toLong
            val x1969: Boolean = x1956 >= x1968
  x1969}
            val x1973: Unit = if (x1970) {          val x1971: Int = x1956.toInt
            val x1972: Unit = throw new ArrayIndexOutOfBoundsException(x1971)
  x1972} else {()}
            val x1974: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x1975: java.lang.Class[Object] = x1974.getComponentType.asInstanceOf[Class[Object]]
            val x1976: Boolean = x1975.isAssignableFrom(classOf[Char])
            val x1977: Boolean = if (x1976) {false} else {true}
            val x1979: Unit = if (x1977) {          val x1978: Unit = throw new ArrayStoreException("char")
  x1978} else {()}
            val x1980: Long = 2 * x1956
            val x1981: Long = 24 + x1980
            val x1982: Unit = unsafe.putChar(p11_5,x1981, x1955)
            val x1983: Unit = block_423(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1983
  }
  // *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_417(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1984: Boolean = p11_3 eq null
            val x1986: Object = if (x1984) {          val x1985: Object = throw new NullPointerException()
  x1985} else {p11_3}
            val x1987: Object = unsafe.getObject(p11_3,16)
            val x1988: Boolean = x1987 eq null
            val x1990: Object = if (x1988) {          val x1989: Object = throw new NullPointerException()
  x1989} else {x1987}
            val x1991: Int = java.lang.reflect.Array.getLength(x1987)
            val x1992: Boolean = x1991 >= p11_5
            val x1995: Unit = if (x1992) {          val x1993: Unit = block_424(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1993} else {          val x1994: Unit = block_425(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x1994}
  x1995
  }
  // *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_418(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x1996: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x1997: Boolean = x1996 eq null
            val x1999: Object = if (x1997) {          val x1998: Object = throw new NullPointerException()
  x1998} else {x1996}
            val x2000: Unit = block_426(null,null,null,null,x1996,p11_4,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x1996,null,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2000
  }
  // *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_419(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2001: Boolean = p9_3 eq null
            val x2003: Object = if (x2001) {          val x2002: Object = throw new NullPointerException()
  x2002} else {p9_3}
            val x2004: Unit = block_427(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2004
  }
  // *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_420(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2005: Boolean = -2147483648 != p10_4
            val x2008: Unit = if (x2005) {          val x2006: Unit = block_428(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2006} else {          val x2007: Unit = block_429(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2007}
  x2008
  }
  // *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_421(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2009: Boolean = p10_4 >= 0
            val x2012: Unit = if (x2009) {          val x2010: Unit = block_430(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2010} else {          val x2011: Unit = block_431(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2011}
  x2012
  }
  // *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_422(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2013: Boolean = p10_3 eq null
            val x2015: Object = if (x2013) {          val x2014: Object = throw new NullPointerException()
  x2014} else {p10_3}
            val x2016: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
            val x2017: Unit = block_432(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2016,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2017
  }
  // *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_423(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2018: Boolean = p10_3 eq null
            val x2020: Object = if (x2018) {          val x2019: Object = throw new NullPointerException()
  x2019} else {p10_3}
            val x2021: Unit = unsafe.putInt(p10_3,16, p10_6)
            val x2022: Unit = block_339(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2022
  }
  // *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_424(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2023: Boolean = p11_5 >= p11_4
            val x2026: Unit = if (x2023) {          val x2024: Unit = block_433(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2024} else {          val x2025: Unit = block_434(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2025}
  x2026
  }
  // *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_425(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2027: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x2028: Boolean = x2027 eq null
            val x2030: Object = if (x2028) {          val x2029: Object = throw new NullPointerException()
  x2029} else {x2027}
            val x2031: Unit = block_435(null,null,null,null,x2027,p11_5,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x2027,null,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2031
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_426(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2032: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x2033: Boolean = x2032 eq null
            val x2035: Object = if (x2033) {          val x2034: Object = throw new NullPointerException()
  x2034} else {x2032}
            val x2036: Unit = block_436(null,null,null,null,x2032,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2032,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2036
  }
  // *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_427(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2037: Boolean = -2147483648 != p10_4
            val x2040: Unit = if (x2037) {          val x2038: Unit = block_437(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2038} else {          val x2039: Unit = block_438(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2039}
  x2040
  }
  // *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_428(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2041: Boolean = p10_4 >= 0
            val x2044: Unit = if (x2041) {          val x2042: Unit = block_439(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2042} else {          val x2043: Unit = block_440(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2043}
  x2044
  }
  // *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_429(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2045: Boolean = p10_3 eq null
            val x2047: Object = if (x2045) {          val x2046: Object = throw new NullPointerException()
  x2046} else {p10_3}
            val x2048: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
            val x2049: Unit = block_441(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2048,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2049
  }
  // *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_430(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2050: Unit = block_442(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2050
  }
  // *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_431(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2051: Int = -p10_4
            val x2052: Unit = block_443(null,null,null,null,x2051,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2052
  }
  // *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_432(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2053: Unit = block_444(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2053
  }
  // *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_433(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2054: Boolean = p11_3 eq null
            val x2056: Object = if (x2054) {          val x2055: Object = throw new NullPointerException()
  x2055} else {p11_3}
            val x2057: Object = unsafe.getObject(p11_3,16)
            val x2058: Int = -p11_4
            val x2059: Int = x2058 + p11_5
            val x2060: Unit = java.lang.System.arraycopy(x2057,p11_4,p11_6,p11_7,x2059).asInstanceOf[Object]
            val x2061: Unit = block_445(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2061
  }
  // *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_434(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2062: Object = unsafe.allocateInstance(Class.forName("java.lang.StringIndexOutOfBoundsException"))
            val x2063: Int = -p11_4
            val x2064: Int = x2063 + p11_5
            val x2065: Boolean = x2062 eq null
            val x2067: Object = if (x2065) {          val x2066: Object = throw new NullPointerException()
  x2066} else {x2062}
            val x2068: Unit = block_446(null,null,null,null,x2062,x2064,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x2062,null,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2068
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_435(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2069: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x2070: Boolean = x2069 eq null
            val x2072: Object = if (x2070) {          val x2071: Object = throw new NullPointerException()
  x2071} else {x2069}
            val x2073: Unit = block_447(null,null,null,null,x2069,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2069,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2073
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_436(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2074: Boolean = p13_3 eq null
            val x2076: Object = if (x2074) {          val x2075: Object = throw new NullPointerException()
  x2075} else {p13_3}
            val x2077: Unit = block_448(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2077
  }
  // *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_437(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2078: Boolean = p10_4 >= 0
            val x2081: Unit = if (x2078) {          val x2079: Unit = block_449(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2079} else {          val x2080: Unit = block_450(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2080}
  x2081
  }
  // *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_438(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2082: Boolean = p10_3 eq null
            val x2084: Object = if (x2082) {          val x2083: Object = throw new NullPointerException()
  x2083} else {p10_3}
            val x2085: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
            val x2086: Unit = block_451(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2085,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2086
  }
  // *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_439(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2087: Unit = block_452(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2087
  }
  // *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_440(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2088: Int = -p10_4
            val x2089: Unit = block_453(null,null,null,null,x2088,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2089
  }
  // *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_441(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2090: Unit = block_454(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2090
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_442(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2091: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2092: Long = 0.toLong
            val x2093: Boolean = x2091 eq null
            val x2095: Object = if (x2093) {          val x2094: Object = throw new NullPointerException()
  x2094} else {x2091}
            val x2096: java.lang.Class[Object] = x2091.getClass.asInstanceOf[Class[Object]]
            val x2097: Boolean = x2096.isArray
            val x2098: Boolean = if (x2097) {false} else {true}
            val x2101: Unit = if (x2098) {          val x2099: java.lang.String = x2096.getName
            val x2100: Unit = throw new ArrayStoreException(x2099)
  x2100} else {()}
            val x2102: Boolean = x2092 < 0
            val x2106: Boolean = if (x2102) {x2102} else {          val x2103: Int = java.lang.reflect.Array.getLength(x2091)
            val x2104: Long = x2103.toLong
            val x2105: Boolean = x2092 >= x2104
  x2105}
            val x2109: Unit = if (x2106) {          val x2107: Int = x2092.toInt
            val x2108: Unit = throw new ArrayIndexOutOfBoundsException(x2107)
  x2108} else {()}
            val x2110: Long = 4 * x2092
            val x2111: Long = 24 + x2110
            val x2112: Int = unsafe.getInt(x2091,x2111)
            val x2113: Boolean = x2112 < p11_3
            val x2116: Unit = if (x2113) {          val x2114: Unit = block_455(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2114} else {          val x2115: Unit = block_456(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2115}
  x2116
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_443(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2117: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2118: Long = 0.toLong
            val x2119: Boolean = x2117 eq null
            val x2121: Object = if (x2119) {          val x2120: Object = throw new NullPointerException()
  x2120} else {x2117}
            val x2122: java.lang.Class[Object] = x2117.getClass.asInstanceOf[Class[Object]]
            val x2123: Boolean = x2122.isArray
            val x2124: Boolean = if (x2123) {false} else {true}
            val x2127: Unit = if (x2124) {          val x2125: java.lang.String = x2122.getName
            val x2126: Unit = throw new ArrayStoreException(x2125)
  x2126} else {()}
            val x2128: Boolean = x2118 < 0
            val x2132: Boolean = if (x2128) {x2128} else {          val x2129: Int = java.lang.reflect.Array.getLength(x2117)
            val x2130: Long = x2129.toLong
            val x2131: Boolean = x2118 >= x2130
  x2131}
            val x2135: Unit = if (x2132) {          val x2133: Int = x2118.toInt
            val x2134: Unit = throw new ArrayIndexOutOfBoundsException(x2133)
  x2134} else {()}
            val x2136: Long = 4 * x2118
            val x2137: Long = 24 + x2136
            val x2138: Int = unsafe.getInt(x2117,x2137)
            val x2139: Boolean = x2138 < p11_3
            val x2142: Unit = if (x2139) {          val x2140: Unit = block_457(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2140} else {          val x2141: Unit = block_458(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2141}
  x2142
  }
  // *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_444(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2143: Unit = block_459(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2143
  }
  // *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_445(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2144: Unit = block_460(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2144
  }
  // *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_446(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2145: Object = unsafe.allocateInstance(Class.forName("java.lang.StringBuilder"))
            val x2146: Boolean = x2145 eq null
            val x2148: Object = if (x2146) {          val x2147: Object = throw new NullPointerException()
  x2147} else {x2145}
            val x2149: Unit = block_461(null,null,null,null,x2145,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2145,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2149
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_447(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2150: Boolean = p13_3 eq null
            val x2152: Object = if (x2150) {          val x2151: Object = throw new NullPointerException()
  x2151} else {p13_3}
            val x2153: Unit = block_462(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2153
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_448(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2154: Boolean = p14_3 eq null
            val x2156: Object = if (x2154) {          val x2155: Object = throw new NullPointerException()
  x2155} else {p14_3}
            val x2157: Unit = block_463(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2157
  }
  // *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_449(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2158: Unit = block_464(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2158
  }
  // *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_450(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2159: Int = -p10_4
            val x2160: Unit = block_465(null,null,null,null,x2159,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2160
  }
  // *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_451(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2161: Unit = block_466(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2161
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_452(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2162: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2163: Long = 0.toLong
            val x2164: Boolean = x2162 eq null
            val x2166: Object = if (x2164) {          val x2165: Object = throw new NullPointerException()
  x2165} else {x2162}
            val x2167: java.lang.Class[Object] = x2162.getClass.asInstanceOf[Class[Object]]
            val x2168: Boolean = x2167.isArray
            val x2169: Boolean = if (x2168) {false} else {true}
            val x2172: Unit = if (x2169) {          val x2170: java.lang.String = x2167.getName
            val x2171: Unit = throw new ArrayStoreException(x2170)
  x2171} else {()}
            val x2173: Boolean = x2163 < 0
            val x2177: Boolean = if (x2173) {x2173} else {          val x2174: Int = java.lang.reflect.Array.getLength(x2162)
            val x2175: Long = x2174.toLong
            val x2176: Boolean = x2163 >= x2175
  x2176}
            val x2180: Unit = if (x2177) {          val x2178: Int = x2163.toInt
            val x2179: Unit = throw new ArrayIndexOutOfBoundsException(x2178)
  x2179} else {()}
            val x2181: Long = 4 * x2163
            val x2182: Long = 24 + x2181
            val x2183: Int = unsafe.getInt(x2162,x2182)
            val x2184: Boolean = x2183 < p11_3
            val x2187: Unit = if (x2184) {          val x2185: Unit = block_467(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2185} else {          val x2186: Unit = block_468(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2186}
  x2187
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_453(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2188: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2189: Long = 0.toLong
            val x2190: Boolean = x2188 eq null
            val x2192: Object = if (x2190) {          val x2191: Object = throw new NullPointerException()
  x2191} else {x2188}
            val x2193: java.lang.Class[Object] = x2188.getClass.asInstanceOf[Class[Object]]
            val x2194: Boolean = x2193.isArray
            val x2195: Boolean = if (x2194) {false} else {true}
            val x2198: Unit = if (x2195) {          val x2196: java.lang.String = x2193.getName
            val x2197: Unit = throw new ArrayStoreException(x2196)
  x2197} else {()}
            val x2199: Boolean = x2189 < 0
            val x2203: Boolean = if (x2199) {x2199} else {          val x2200: Int = java.lang.reflect.Array.getLength(x2188)
            val x2201: Long = x2200.toLong
            val x2202: Boolean = x2189 >= x2201
  x2202}
            val x2206: Unit = if (x2203) {          val x2204: Int = x2189.toInt
            val x2205: Unit = throw new ArrayIndexOutOfBoundsException(x2204)
  x2205} else {()}
            val x2207: Long = 4 * x2189
            val x2208: Long = 24 + x2207
            val x2209: Int = unsafe.getInt(x2188,x2208)
            val x2210: Boolean = x2209 < p11_3
            val x2213: Unit = if (x2210) {          val x2211: Unit = block_469(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2211} else {          val x2212: Unit = block_470(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2212}
  x2213
  }
  // *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_454(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2214: Unit = block_471(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2214
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_455(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2215: Int = p11_4 + 1
            val x2216: Unit = block_472(r,p11_0,p11_1,p11_2,p11_3,x2215,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2216
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_456(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2217: Int = 1 + p11_4
            val x2218: Unit = block_473(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2217,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2218
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_457(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2219: Int = p11_4 + 1
            val x2220: Unit = block_474(r,p11_0,p11_1,p11_2,p11_3,x2219,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2220
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_458(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2221: Int = 1 + p11_4
            val x2222: Unit = block_475(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2221,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2222
  }
  // *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_459(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2223: Boolean = p8_6 eq null
            val x2225: Object = if (x2223) {          val x2224: Object = throw new NullPointerException()
  x2224} else {p8_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
            val x2226: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
  x2226
  }
  // *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_460(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2227: Boolean = p10_3 eq null
            val x2229: Object = if (x2227) {          val x2228: Object = throw new NullPointerException()
  x2228} else {p10_3}
            val x2230: Int = unsafe.getInt(p10_3,16)
            val x2231: Int = p10_5 + x2230
            val x2232: Boolean = p10_3 eq null
            val x2234: Object = if (x2232) {          val x2233: Object = throw new NullPointerException()
  x2233} else {p10_3}
            val x2235: Unit = unsafe.putInt(p10_3,16, x2231)
            val x2236: Unit = block_476(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2236
  }
  // *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_461(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2237: Boolean = p13_3 eq null
            val x2239: Object = if (x2237) {          val x2238: Object = throw new NullPointerException()
  x2238} else {p13_3}
            val x2240: Unit = block_477(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2240
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_462(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2241: Boolean = p14_3 eq null
            val x2243: Object = if (x2241) {          val x2242: Object = throw new NullPointerException()
  x2242} else {p14_3}
            val x2244: Unit = block_478(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2244
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_463(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2245: Unit = block_479(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2245
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_464(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2246: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2247: Long = 0.toLong
            val x2248: Boolean = x2246 eq null
            val x2250: Object = if (x2248) {          val x2249: Object = throw new NullPointerException()
  x2249} else {x2246}
            val x2251: java.lang.Class[Object] = x2246.getClass.asInstanceOf[Class[Object]]
            val x2252: Boolean = x2251.isArray
            val x2253: Boolean = if (x2252) {false} else {true}
            val x2256: Unit = if (x2253) {          val x2254: java.lang.String = x2251.getName
            val x2255: Unit = throw new ArrayStoreException(x2254)
  x2255} else {()}
            val x2257: Boolean = x2247 < 0
            val x2261: Boolean = if (x2257) {x2257} else {          val x2258: Int = java.lang.reflect.Array.getLength(x2246)
            val x2259: Long = x2258.toLong
            val x2260: Boolean = x2247 >= x2259
  x2260}
            val x2264: Unit = if (x2261) {          val x2262: Int = x2247.toInt
            val x2263: Unit = throw new ArrayIndexOutOfBoundsException(x2262)
  x2263} else {()}
            val x2265: Long = 4 * x2247
            val x2266: Long = 24 + x2265
            val x2267: Int = unsafe.getInt(x2246,x2266)
            val x2268: Boolean = x2267 < p11_3
            val x2271: Unit = if (x2268) {          val x2269: Unit = block_480(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2269} else {          val x2270: Unit = block_481(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2270}
  x2271
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_465(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2272: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2273: Long = 0.toLong
            val x2274: Boolean = x2272 eq null
            val x2276: Object = if (x2274) {          val x2275: Object = throw new NullPointerException()
  x2275} else {x2272}
            val x2277: java.lang.Class[Object] = x2272.getClass.asInstanceOf[Class[Object]]
            val x2278: Boolean = x2277.isArray
            val x2279: Boolean = if (x2278) {false} else {true}
            val x2282: Unit = if (x2279) {          val x2280: java.lang.String = x2277.getName
            val x2281: Unit = throw new ArrayStoreException(x2280)
  x2281} else {()}
            val x2283: Boolean = x2273 < 0
            val x2287: Boolean = if (x2283) {x2283} else {          val x2284: Int = java.lang.reflect.Array.getLength(x2272)
            val x2285: Long = x2284.toLong
            val x2286: Boolean = x2273 >= x2285
  x2286}
            val x2290: Unit = if (x2287) {          val x2288: Int = x2273.toInt
            val x2289: Unit = throw new ArrayIndexOutOfBoundsException(x2288)
  x2289} else {()}
            val x2291: Long = 4 * x2273
            val x2292: Long = 24 + x2291
            val x2293: Int = unsafe.getInt(x2272,x2292)
            val x2294: Boolean = x2293 < p11_3
            val x2297: Unit = if (x2294) {          val x2295: Unit = block_482(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2295} else {          val x2296: Unit = block_483(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2296}
  x2297
  }
  // *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_466(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2298: Unit = block_484(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2298
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_467(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2299: Int = p11_4 + 1
            val x2300: Unit = block_485(r,p11_0,p11_1,p11_2,p11_3,x2299,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2300
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_468(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2301: Int = 1 + p11_4
            val x2302: Unit = block_486(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2301,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2302
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_469(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2303: Int = p11_4 + 1
            val x2304: Unit = block_487(r,p11_0,p11_1,p11_2,p11_3,x2303,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2304
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_470(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2305: Int = 1 + p11_4
            val x2306: Unit = block_488(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2305,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2306
  }
  // *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_471(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2307: Boolean = p8_6 eq null
            val x2309: Object = if (x2307) {          val x2308: Object = throw new NullPointerException()
  x2308} else {p8_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
            val x2310: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
  x2310
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_472(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2311: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2312: Long = p11_4.toLong
            val x2313: Boolean = x2311 eq null
            val x2315: Object = if (x2313) {          val x2314: Object = throw new NullPointerException()
  x2314} else {x2311}
            val x2316: java.lang.Class[Object] = x2311.getClass.asInstanceOf[Class[Object]]
            val x2317: Boolean = x2316.isArray
            val x2318: Boolean = if (x2317) {false} else {true}
            val x2321: Unit = if (x2318) {          val x2319: java.lang.String = x2316.getName
            val x2320: Unit = throw new ArrayStoreException(x2319)
  x2320} else {()}
            val x2322: Boolean = x2312 < 0
            val x2326: Boolean = if (x2322) {x2322} else {          val x2323: Int = java.lang.reflect.Array.getLength(x2311)
            val x2324: Long = x2323.toLong
            val x2325: Boolean = x2312 >= x2324
  x2325}
            val x2329: Unit = if (x2326) {          val x2327: Int = x2312.toInt
            val x2328: Unit = throw new ArrayIndexOutOfBoundsException(x2327)
  x2328} else {()}
            val x2330: Long = 4 * x2312
            val x2331: Long = 24 + x2330
            val x2332: Int = unsafe.getInt(x2311,x2331)
            val x2333: Boolean = x2332 < p11_3
            val x2336: Unit = if (x2333) {          val x2334: Unit = block_455(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2334} else {          val x2335: Unit = block_456(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2335}
  x2336
  }
  // *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_473(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2337: Boolean = p10_3 eq null
            val x2339: Object = if (x2337) {          val x2338: Object = throw new NullPointerException()
  x2338} else {p10_3}
            val x2340: Int = unsafe.getInt(p10_3,16)
            val x2341: Int = p10_7 + x2340
            val x2342: Boolean = p10_3 eq null
            val x2344: Object = if (x2342) {          val x2343: Object = throw new NullPointerException()
  x2343} else {p10_3}
            val x2345: Unit = block_489(null,null,null,null,p10_3,x2341,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2341,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2345
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_474(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2346: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2347: Long = p11_4.toLong
            val x2348: Boolean = x2346 eq null
            val x2350: Object = if (x2348) {          val x2349: Object = throw new NullPointerException()
  x2349} else {x2346}
            val x2351: java.lang.Class[Object] = x2346.getClass.asInstanceOf[Class[Object]]
            val x2352: Boolean = x2351.isArray
            val x2353: Boolean = if (x2352) {false} else {true}
            val x2356: Unit = if (x2353) {          val x2354: java.lang.String = x2351.getName
            val x2355: Unit = throw new ArrayStoreException(x2354)
  x2355} else {()}
            val x2357: Boolean = x2347 < 0
            val x2361: Boolean = if (x2357) {x2357} else {          val x2358: Int = java.lang.reflect.Array.getLength(x2346)
            val x2359: Long = x2358.toLong
            val x2360: Boolean = x2347 >= x2359
  x2360}
            val x2364: Unit = if (x2361) {          val x2362: Int = x2347.toInt
            val x2363: Unit = throw new ArrayIndexOutOfBoundsException(x2362)
  x2363} else {()}
            val x2365: Long = 4 * x2347
            val x2366: Long = 24 + x2365
            val x2367: Int = unsafe.getInt(x2346,x2366)
            val x2368: Boolean = x2367 < p11_3
            val x2371: Unit = if (x2368) {          val x2369: Unit = block_457(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2369} else {          val x2370: Unit = block_458(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2370}
  x2371
  }
  // *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_475(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2372: Int = 1 + p10_7
            val x2373: Unit = block_473(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2372,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2373
  }
  // *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_476(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2374: Unit = block_490(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2374
  }
  // *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_477(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2375: Boolean = p14_3 eq null
            val x2377: Object = if (x2375) {          val x2376: Object = throw new NullPointerException()
  x2376} else {p14_3}
            val x2378: Unit = block_491(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2378
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_478(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2379: Unit = block_492(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2379
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_479(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2380: Object = new Array[char](p14_4)
            val x2381: Boolean = p14_3 eq null
            val x2383: Object = if (x2381) {          val x2382: Object = throw new NullPointerException()
  x2382} else {p14_3}
            val x2384: Unit = unsafe.putObject(p14_3,24, x2380)
            val x2385: Unit = block_493(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2385
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_480(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2386: Int = p11_4 + 1
            val x2387: Unit = block_494(r,p11_0,p11_1,p11_2,p11_3,x2386,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2387
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_481(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2388: Int = 1 + p11_4
            val x2389: Unit = block_495(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2388,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2389
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_482(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2390: Int = p11_4 + 1
            val x2391: Unit = block_496(r,p11_0,p11_1,p11_2,p11_3,x2390,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2391
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_483(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2392: Int = 1 + p11_4
            val x2393: Unit = block_497(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2392,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2393
  }
  // *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_484(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2394: Boolean = p8_6 eq null
            val x2396: Object = if (x2394) {          val x2395: Object = throw new NullPointerException()
  x2395} else {p8_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
            val x2397: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
  x2397
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_485(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2398: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2399: Long = p11_4.toLong
            val x2400: Boolean = x2398 eq null
            val x2402: Object = if (x2400) {          val x2401: Object = throw new NullPointerException()
  x2401} else {x2398}
            val x2403: java.lang.Class[Object] = x2398.getClass.asInstanceOf[Class[Object]]
            val x2404: Boolean = x2403.isArray
            val x2405: Boolean = if (x2404) {false} else {true}
            val x2408: Unit = if (x2405) {          val x2406: java.lang.String = x2403.getName
            val x2407: Unit = throw new ArrayStoreException(x2406)
  x2407} else {()}
            val x2409: Boolean = x2399 < 0
            val x2413: Boolean = if (x2409) {x2409} else {          val x2410: Int = java.lang.reflect.Array.getLength(x2398)
            val x2411: Long = x2410.toLong
            val x2412: Boolean = x2399 >= x2411
  x2412}
            val x2416: Unit = if (x2413) {          val x2414: Int = x2399.toInt
            val x2415: Unit = throw new ArrayIndexOutOfBoundsException(x2414)
  x2415} else {()}
            val x2417: Long = 4 * x2399
            val x2418: Long = 24 + x2417
            val x2419: Int = unsafe.getInt(x2398,x2418)
            val x2420: Boolean = x2419 < p11_3
            val x2423: Unit = if (x2420) {          val x2421: Unit = block_467(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2421} else {          val x2422: Unit = block_468(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2422}
  x2423
  }
  // *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_486(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2424: Boolean = p10_3 eq null
            val x2426: Object = if (x2424) {          val x2425: Object = throw new NullPointerException()
  x2425} else {p10_3}
            val x2427: Int = unsafe.getInt(p10_3,16)
            val x2428: Int = p10_7 + x2427
            val x2429: Boolean = p10_3 eq null
            val x2431: Object = if (x2429) {          val x2430: Object = throw new NullPointerException()
  x2430} else {p10_3}
            val x2432: Unit = block_498(null,null,null,null,p10_3,x2428,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2428,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2432
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_487(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2433: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2434: Long = p11_4.toLong
            val x2435: Boolean = x2433 eq null
            val x2437: Object = if (x2435) {          val x2436: Object = throw new NullPointerException()
  x2436} else {x2433}
            val x2438: java.lang.Class[Object] = x2433.getClass.asInstanceOf[Class[Object]]
            val x2439: Boolean = x2438.isArray
            val x2440: Boolean = if (x2439) {false} else {true}
            val x2443: Unit = if (x2440) {          val x2441: java.lang.String = x2438.getName
            val x2442: Unit = throw new ArrayStoreException(x2441)
  x2442} else {()}
            val x2444: Boolean = x2434 < 0
            val x2448: Boolean = if (x2444) {x2444} else {          val x2445: Int = java.lang.reflect.Array.getLength(x2433)
            val x2446: Long = x2445.toLong
            val x2447: Boolean = x2434 >= x2446
  x2447}
            val x2451: Unit = if (x2448) {          val x2449: Int = x2434.toInt
            val x2450: Unit = throw new ArrayIndexOutOfBoundsException(x2449)
  x2450} else {()}
            val x2452: Long = 4 * x2434
            val x2453: Long = 24 + x2452
            val x2454: Int = unsafe.getInt(x2433,x2453)
            val x2455: Boolean = x2454 < p11_3
            val x2458: Unit = if (x2455) {          val x2456: Unit = block_469(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2456} else {          val x2457: Unit = block_470(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2457}
  x2458
  }
  // *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_488(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2459: Int = 1 + p10_7
            val x2460: Unit = block_486(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2459,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2460
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_489(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2461: Boolean = p11_3 eq null
            val x2463: Object = if (x2461) {          val x2462: Object = throw new NullPointerException()
  x2462} else {p11_3}
            val x2464: Object = unsafe.getObject(p11_3,24)
            val x2465: Boolean = x2464 eq null
            val x2467: Object = if (x2465) {          val x2466: Object = throw new NullPointerException()
  x2466} else {x2464}
            val x2468: Int = java.lang.reflect.Array.getLength(x2464)
            val x2469: Int = -x2468
            val x2470: Int = x2469 + p11_4
            val x2471: Boolean = x2470 <= 0
            val x2474: Unit = if (x2471) {          val x2472: Unit = block_499(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2472} else {          val x2473: Unit = block_500(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2473}
  x2474
  }
  // *** begin block 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_490(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2475: Boolean = p8_10 eq null
            val x2477: Object = if (x2475) {          val x2476: Object = throw new NullPointerException()
  x2476} else {p8_10}
            val x2478: Unit = block_501(null,null,null,null,p8_10,p8_5,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2478
  }
  // *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_491(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2479: Unit = block_502(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2479
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_492(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2480: Object = new Array[char](p14_4)
            val x2481: Boolean = p14_3 eq null
            val x2483: Object = if (x2481) {          val x2482: Object = throw new NullPointerException()
  x2482} else {p14_3}
            val x2484: Unit = unsafe.putObject(p14_3,24, x2480)
            val x2485: Unit = block_503(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2485
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_493(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2486: Unit = block_504(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2486
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_494(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2487: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2488: Long = p11_4.toLong
            val x2489: Boolean = x2487 eq null
            val x2491: Object = if (x2489) {          val x2490: Object = throw new NullPointerException()
  x2490} else {x2487}
            val x2492: java.lang.Class[Object] = x2487.getClass.asInstanceOf[Class[Object]]
            val x2493: Boolean = x2492.isArray
            val x2494: Boolean = if (x2493) {false} else {true}
            val x2497: Unit = if (x2494) {          val x2495: java.lang.String = x2492.getName
            val x2496: Unit = throw new ArrayStoreException(x2495)
  x2496} else {()}
            val x2498: Boolean = x2488 < 0
            val x2502: Boolean = if (x2498) {x2498} else {          val x2499: Int = java.lang.reflect.Array.getLength(x2487)
            val x2500: Long = x2499.toLong
            val x2501: Boolean = x2488 >= x2500
  x2501}
            val x2505: Unit = if (x2502) {          val x2503: Int = x2488.toInt
            val x2504: Unit = throw new ArrayIndexOutOfBoundsException(x2503)
  x2504} else {()}
            val x2506: Long = 4 * x2488
            val x2507: Long = 24 + x2506
            val x2508: Int = unsafe.getInt(x2487,x2507)
            val x2509: Boolean = x2508 < p11_3
            val x2512: Unit = if (x2509) {          val x2510: Unit = block_480(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2510} else {          val x2511: Unit = block_481(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2511}
  x2512
  }
  // *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_495(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2513: Boolean = p10_3 eq null
            val x2515: Object = if (x2513) {          val x2514: Object = throw new NullPointerException()
  x2514} else {p10_3}
            val x2516: Int = unsafe.getInt(p10_3,16)
            val x2517: Int = p10_7 + x2516
            val x2518: Boolean = p10_3 eq null
            val x2520: Object = if (x2518) {          val x2519: Object = throw new NullPointerException()
  x2519} else {p10_3}
            val x2521: Unit = block_505(null,null,null,null,p10_3,x2517,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2517,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2521
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_496(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2522: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2523: Long = p11_4.toLong
            val x2524: Boolean = x2522 eq null
            val x2526: Object = if (x2524) {          val x2525: Object = throw new NullPointerException()
  x2525} else {x2522}
            val x2527: java.lang.Class[Object] = x2522.getClass.asInstanceOf[Class[Object]]
            val x2528: Boolean = x2527.isArray
            val x2529: Boolean = if (x2528) {false} else {true}
            val x2532: Unit = if (x2529) {          val x2530: java.lang.String = x2527.getName
            val x2531: Unit = throw new ArrayStoreException(x2530)
  x2531} else {()}
            val x2533: Boolean = x2523 < 0
            val x2537: Boolean = if (x2533) {x2533} else {          val x2534: Int = java.lang.reflect.Array.getLength(x2522)
            val x2535: Long = x2534.toLong
            val x2536: Boolean = x2523 >= x2535
  x2536}
            val x2540: Unit = if (x2537) {          val x2538: Int = x2523.toInt
            val x2539: Unit = throw new ArrayIndexOutOfBoundsException(x2538)
  x2539} else {()}
            val x2541: Long = 4 * x2523
            val x2542: Long = 24 + x2541
            val x2543: Int = unsafe.getInt(x2522,x2542)
            val x2544: Boolean = x2543 < p11_3
            val x2547: Unit = if (x2544) {          val x2545: Unit = block_482(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2545} else {          val x2546: Unit = block_483(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2546}
  x2547
  }
  // *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_497(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2548: Int = 1 + p10_7
            val x2549: Unit = block_495(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2548,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2549
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_498(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2550: Boolean = p11_3 eq null
            val x2552: Object = if (x2550) {          val x2551: Object = throw new NullPointerException()
  x2551} else {p11_3}
            val x2553: Object = unsafe.getObject(p11_3,24)
            val x2554: Boolean = x2553 eq null
            val x2556: Object = if (x2554) {          val x2555: Object = throw new NullPointerException()
  x2555} else {x2553}
            val x2557: Int = java.lang.reflect.Array.getLength(x2553)
            val x2558: Int = -x2557
            val x2559: Int = x2558 + p11_4
            val x2560: Boolean = x2559 <= 0
            val x2563: Unit = if (x2560) {          val x2561: Unit = block_506(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2561} else {          val x2562: Unit = block_507(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2562}
  x2563
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_499(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2564: Unit = block_508(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2564
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_500(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2565: Boolean = p11_3 eq null
            val x2567: Object = if (x2565) {          val x2566: Object = throw new NullPointerException()
  x2566} else {p11_3}
            val x2568: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x2569: Unit = block_499(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2569
  }
  // *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_501(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2570: Boolean = p9_3 eq null
            val x2572: Object = if (x2570) {          val x2571: Object = throw new NullPointerException()
  x2571} else {p9_3}
            val x2573: Unit = block_509(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2573
  }
  // *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_502(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2574: Object = new Array[char](p14_4)
            val x2575: Boolean = p14_3 eq null
            val x2577: Object = if (x2575) {          val x2576: Object = throw new NullPointerException()
  x2576} else {p14_3}
            val x2578: Unit = unsafe.putObject(p14_3,24, x2574)
            val x2579: Unit = block_510(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2579
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_503(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2580: Unit = block_511(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2580
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_504(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2581: Boolean = p12_6 eq null
            val x2583: Object = if (x2581) {          val x2582: Object = throw new NullPointerException()
  x2582} else {p12_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x2584: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x2584
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_505(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2585: Boolean = p11_3 eq null
            val x2587: Object = if (x2585) {          val x2586: Object = throw new NullPointerException()
  x2586} else {p11_3}
            val x2588: Object = unsafe.getObject(p11_3,24)
            val x2589: Boolean = x2588 eq null
            val x2591: Object = if (x2589) {          val x2590: Object = throw new NullPointerException()
  x2590} else {x2588}
            val x2592: Int = java.lang.reflect.Array.getLength(x2588)
            val x2593: Int = -x2592
            val x2594: Int = x2593 + p11_4
            val x2595: Boolean = x2594 <= 0
            val x2598: Unit = if (x2595) {          val x2596: Unit = block_512(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2596} else {          val x2597: Unit = block_513(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2597}
  x2598
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_506(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2599: Unit = block_514(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2599
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_507(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2600: Boolean = p11_3 eq null
            val x2602: Object = if (x2600) {          val x2601: Object = throw new NullPointerException()
  x2601} else {p11_3}
            val x2603: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x2604: Unit = block_506(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2604
  }
  // *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_508(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2605: Boolean = p10_3 eq null
            val x2607: Object = if (x2605) {          val x2606: Object = throw new NullPointerException()
  x2606} else {p10_3}
            val x2608: Object = unsafe.getObject(p10_3,24)
            val x2609: Unit = block_515(null,null,null,null,p10_4,p10_6,x2608,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2609
  }
  // *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_509(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2610: Boolean = -2147483648 != p10_4
            val x2613: Unit = if (x2610) {          val x2611: Unit = block_516(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2611} else {          val x2612: Unit = block_517(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2612}
  x2613
  }
  // *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_510(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2614: Unit = block_518(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2614
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_511(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2615: Boolean = p12_6 eq null
            val x2617: Object = if (x2615) {          val x2616: Object = throw new NullPointerException()
  x2616} else {p12_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x2618: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x2618
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_512(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2619: Unit = block_519(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2619
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_513(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2620: Boolean = p11_3 eq null
            val x2622: Object = if (x2620) {          val x2621: Object = throw new NullPointerException()
  x2621} else {p11_3}
            val x2623: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x2624: Unit = block_512(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2624
  }
  // *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_514(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2625: Boolean = p10_3 eq null
            val x2627: Object = if (x2625) {          val x2626: Object = throw new NullPointerException()
  x2626} else {p10_3}
            val x2628: Object = unsafe.getObject(p10_3,24)
            val x2629: Unit = block_520(null,null,null,null,p10_4,p10_6,x2628,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2629
  }
  // *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_515(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2630: Boolean = p11_3 >= 0
            val x2633: Unit = if (x2630) {          val x2631: Unit = block_521(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2631} else {          val x2632: Unit = block_522(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2632}
  x2633
  }
  // *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_516(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2634: Boolean = p10_4 >= 0
            val x2637: Unit = if (x2634) {          val x2635: Unit = block_523(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2635} else {          val x2636: Unit = block_524(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2636}
  x2637
  }
  // *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_517(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2638: Boolean = p10_3 eq null
            val x2640: Object = if (x2638) {          val x2639: Object = throw new NullPointerException()
  x2639} else {p10_3}
            val x2641: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
            val x2642: Unit = block_525(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2641,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2642
  }
  // *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_518(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2643: Boolean = p12_6 eq null
            val x2645: Object = if (x2643) {          val x2644: Object = throw new NullPointerException()
  x2644} else {p12_6}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
            val x2646: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
  x2646
  }
  // *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_519(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2647: Boolean = p10_3 eq null
            val x2649: Object = if (x2647) {          val x2648: Object = throw new NullPointerException()
  x2648} else {p10_3}
            val x2650: Object = unsafe.getObject(p10_3,24)
            val x2651: Unit = block_526(null,null,null,null,p10_4,p10_6,x2650,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2651
  }
  // *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_520(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2652: Boolean = p11_3 >= 0
            val x2655: Unit = if (x2652) {          val x2653: Unit = block_527(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2653} else {          val x2654: Unit = block_528(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2654}
  x2655
  }
  // *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_521(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2656: Boolean = 65536 > p11_3
            val x2659: Unit = if (x2656) {          val x2657: Unit = block_529(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2657} else {          val x2658: Unit = block_530(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2658}
  x2659
  }
  // *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_522(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2660: Int = -p11_3
            val x2661: Boolean = 65536 > x2660
            val x2664: Unit = if (x2661) {          val x2662: Unit = block_529(r,p11_0,p11_1,p11_2,x2660,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2662} else {          val x2663: Unit = block_530(r,p11_0,p11_1,p11_2,x2660,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2663}
  x2664
  }
  // *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_523(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2665: Unit = block_531(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2665
  }
  // *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_524(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2666: Int = -p10_4
            val x2667: Unit = block_532(null,null,null,null,x2666,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2667
  }
  // *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_525(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2668: Unit = block_533(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2668
  }
  // *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_526(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2669: Boolean = p11_3 >= 0
            val x2672: Unit = if (x2669) {          val x2670: Unit = block_534(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2670} else {          val x2671: Unit = block_535(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2671}
  x2672
  }
  // *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_527(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2673: Boolean = 65536 > p11_3
            val x2676: Unit = if (x2673) {          val x2674: Unit = block_536(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2674} else {          val x2675: Unit = block_537(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2675}
  x2676
  }
  // *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_528(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2677: Int = -p11_3
            val x2678: Boolean = 65536 > x2677
            val x2681: Unit = if (x2678) {          val x2679: Unit = block_536(r,p11_0,p11_1,p11_2,x2677,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2679} else {          val x2680: Unit = block_537(r,p11_0,p11_1,p11_2,x2677,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2680}
  x2681
  }
  // *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_529(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2682: Int = 52429 * p11_3
            val x2683: Int = x2682 >>> 19
            val x2684: Int = x2683 << 3
            val x2685: Int = x2683 << 1
            val x2686: Int = x2685 + x2684
            val x2687: Int = -x2686
            val x2688: Int = x2687 + p11_3
            val x2689: Int = p11_8 + -1
            val x2690: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
            val x2691: Long = x2688.toLong
            val x2692: Boolean = x2690 eq null
            val x2694: Object = if (x2692) {          val x2693: Object = throw new NullPointerException()
  x2693} else {x2690}
            val x2695: java.lang.Class[Object] = x2690.getClass.asInstanceOf[Class[Object]]
            val x2696: Boolean = x2695.isArray
            val x2697: Boolean = if (x2696) {false} else {true}
            val x2700: Unit = if (x2697) {          val x2698: java.lang.String = x2695.getName
            val x2699: Unit = throw new ArrayStoreException(x2698)
  x2699} else {()}
            val x2701: Boolean = x2691 < 0
            val x2705: Boolean = if (x2701) {x2701} else {          val x2702: Int = java.lang.reflect.Array.getLength(x2690)
            val x2703: Long = x2702.toLong
            val x2704: Boolean = x2691 >= x2703
  x2704}
            val x2708: Unit = if (x2705) {          val x2706: Int = x2691.toInt
            val x2707: Unit = throw new ArrayIndexOutOfBoundsException(x2706)
  x2707} else {()}
            val x2709: Long = 2 * x2691
            val x2710: Long = 24 + x2709
            val x2711: Char = unsafe.getChar(x2690,x2710)
            val x2712: Int = x2711.toInt
            val x2713: Char = x2712.toChar
            val x2714: Long = x2689.toLong
            val x2715: Boolean = p11_5 eq null
            val x2717: Object = if (x2715) {          val x2716: Object = throw new NullPointerException()
  x2716} else {p11_5}
            val x2718: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x2719: Boolean = x2718.isArray
            val x2720: Boolean = if (x2719) {false} else {true}
            val x2723: Unit = if (x2720) {          val x2721: java.lang.String = x2718.getName
            val x2722: Unit = throw new ArrayStoreException(x2721)
  x2722} else {()}
            val x2724: Boolean = x2714 < 0
            val x2728: Boolean = if (x2724) {x2724} else {          val x2725: Int = java.lang.reflect.Array.getLength(p11_5)
            val x2726: Long = x2725.toLong
            val x2727: Boolean = x2714 >= x2726
  x2727}
            val x2731: Unit = if (x2728) {          val x2729: Int = x2714.toInt
            val x2730: Unit = throw new ArrayIndexOutOfBoundsException(x2729)
  x2730} else {()}
            val x2732: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x2733: java.lang.Class[Object] = x2732.getComponentType.asInstanceOf[Class[Object]]
            val x2734: Boolean = x2733.isAssignableFrom(classOf[Char])
            val x2735: Boolean = if (x2734) {false} else {true}
            val x2737: Unit = if (x2735) {          val x2736: Unit = throw new ArrayStoreException("char")
  x2736} else {()}
            val x2738: Long = 2 * x2714
            val x2739: Long = 24 + x2738
            val x2740: Unit = unsafe.putChar(p11_5,x2739, x2713)
            val x2741: Boolean = x2683 != 0
            val x2744: Unit = if (x2741) {          val x2742: Unit = block_529(r,p11_0,p11_1,p11_2,x2683,p11_4,p11_5,x2683,x2688,x2689,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2742} else {          val x2743: Unit = block_538(r,p11_0,p11_1,p11_2,x2683,p11_4,p11_5,x2683,x2688,x2689,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2743}
  x2744
  }
  // *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_530(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2745: Int = p11_3 / 100
            val x2746: Int = x2745 << 6
            val x2747: Int = x2745 << 5
            val x2748: Int = x2747 + x2746
            val x2749: Int = x2745 << 2
            val x2750: Int = x2749 + x2748
            val x2751: Int = -x2750
            val x2752: Int = x2751 + p11_3
            val x2753: Int = p11_8 + -1
            val x2754: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
            val x2755: Long = x2752.toLong
            val x2756: Boolean = x2754 eq null
            val x2758: Object = if (x2756) {          val x2757: Object = throw new NullPointerException()
  x2757} else {x2754}
            val x2759: java.lang.Class[Object] = x2754.getClass.asInstanceOf[Class[Object]]
            val x2760: Boolean = x2759.isArray
            val x2761: Boolean = if (x2760) {false} else {true}
            val x2764: Unit = if (x2761) {          val x2762: java.lang.String = x2759.getName
            val x2763: Unit = throw new ArrayStoreException(x2762)
  x2763} else {()}
            val x2765: Boolean = x2755 < 0
            val x2769: Boolean = if (x2765) {x2765} else {          val x2766: Int = java.lang.reflect.Array.getLength(x2754)
            val x2767: Long = x2766.toLong
            val x2768: Boolean = x2755 >= x2767
  x2768}
            val x2772: Unit = if (x2769) {          val x2770: Int = x2755.toInt
            val x2771: Unit = throw new ArrayIndexOutOfBoundsException(x2770)
  x2771} else {()}
            val x2773: Long = 2 * x2755
            val x2774: Long = 24 + x2773
            val x2775: Char = unsafe.getChar(x2754,x2774)
            val x2776: Int = x2775.toInt
            val x2777: Char = x2776.toChar
            val x2778: Long = x2753.toLong
            val x2779: Boolean = p11_5 eq null
            val x2781: Object = if (x2779) {          val x2780: Object = throw new NullPointerException()
  x2780} else {p11_5}
            val x2782: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x2783: Boolean = x2782.isArray
            val x2784: Boolean = if (x2783) {false} else {true}
            val x2787: Unit = if (x2784) {          val x2785: java.lang.String = x2782.getName
            val x2786: Unit = throw new ArrayStoreException(x2785)
  x2786} else {()}
            val x2788: Boolean = x2778 < 0
            val x2792: Boolean = if (x2788) {x2788} else {          val x2789: Int = java.lang.reflect.Array.getLength(p11_5)
            val x2790: Long = x2789.toLong
            val x2791: Boolean = x2778 >= x2790
  x2791}
            val x2795: Unit = if (x2792) {          val x2793: Int = x2778.toInt
            val x2794: Unit = throw new ArrayIndexOutOfBoundsException(x2793)
  x2794} else {()}
            val x2796: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x2797: java.lang.Class[Object] = x2796.getComponentType.asInstanceOf[Class[Object]]
            val x2798: Boolean = x2797.isAssignableFrom(classOf[Char])
            val x2799: Boolean = if (x2798) {false} else {true}
            val x2801: Unit = if (x2799) {          val x2800: Unit = throw new ArrayStoreException("char")
  x2800} else {()}
            val x2802: Long = 2 * x2778
            val x2803: Long = 24 + x2802
            val x2804: Unit = unsafe.putChar(p11_5,x2803, x2777)
            val x2805: Int = x2753 + -1
            val x2806: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
            val x2807: Long = x2752.toLong
            val x2808: Boolean = x2806 eq null
            val x2810: Object = if (x2808) {          val x2809: Object = throw new NullPointerException()
  x2809} else {x2806}
            val x2811: java.lang.Class[Object] = x2806.getClass.asInstanceOf[Class[Object]]
            val x2812: Boolean = x2811.isArray
            val x2813: Boolean = if (x2812) {false} else {true}
            val x2816: Unit = if (x2813) {          val x2814: java.lang.String = x2811.getName
            val x2815: Unit = throw new ArrayStoreException(x2814)
  x2815} else {()}
            val x2817: Boolean = x2807 < 0
            val x2821: Boolean = if (x2817) {x2817} else {          val x2818: Int = java.lang.reflect.Array.getLength(x2806)
            val x2819: Long = x2818.toLong
            val x2820: Boolean = x2807 >= x2819
  x2820}
            val x2824: Unit = if (x2821) {          val x2822: Int = x2807.toInt
            val x2823: Unit = throw new ArrayIndexOutOfBoundsException(x2822)
  x2823} else {()}
            val x2825: Long = 2 * x2807
            val x2826: Long = 24 + x2825
            val x2827: Char = unsafe.getChar(x2806,x2826)
            val x2828: Int = x2827.toInt
            val x2829: Char = x2828.toChar
            val x2830: Long = x2805.toLong
            val x2831: Boolean = p11_5 eq null
            val x2833: Object = if (x2831) {          val x2832: Object = throw new NullPointerException()
  x2832} else {p11_5}
            val x2834: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x2835: Boolean = x2834.isArray
            val x2836: Boolean = if (x2835) {false} else {true}
            val x2839: Unit = if (x2836) {          val x2837: java.lang.String = x2834.getName
            val x2838: Unit = throw new ArrayStoreException(x2837)
  x2838} else {()}
            val x2840: Boolean = x2830 < 0
            val x2844: Boolean = if (x2840) {x2840} else {          val x2841: Int = java.lang.reflect.Array.getLength(p11_5)
            val x2842: Long = x2841.toLong
            val x2843: Boolean = x2830 >= x2842
  x2843}
            val x2847: Unit = if (x2844) {          val x2845: Int = x2830.toInt
            val x2846: Unit = throw new ArrayIndexOutOfBoundsException(x2845)
  x2846} else {()}
            val x2848: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x2849: java.lang.Class[Object] = x2848.getComponentType.asInstanceOf[Class[Object]]
            val x2850: Boolean = x2849.isAssignableFrom(classOf[Char])
            val x2851: Boolean = if (x2850) {false} else {true}
            val x2853: Unit = if (x2851) {          val x2852: Unit = throw new ArrayStoreException("char")
  x2852} else {()}
            val x2854: Long = 2 * x2830
            val x2855: Long = 24 + x2854
            val x2856: Unit = unsafe.putChar(p11_5,x2855, x2829)
            val x2857: Unit = block_521(r,p11_0,p11_1,p11_2,x2745,p11_4,p11_5,x2745,x2752,x2805,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2857
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_531(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2858: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2859: Long = 0.toLong
            val x2860: Boolean = x2858 eq null
            val x2862: Object = if (x2860) {          val x2861: Object = throw new NullPointerException()
  x2861} else {x2858}
            val x2863: java.lang.Class[Object] = x2858.getClass.asInstanceOf[Class[Object]]
            val x2864: Boolean = x2863.isArray
            val x2865: Boolean = if (x2864) {false} else {true}
            val x2868: Unit = if (x2865) {          val x2866: java.lang.String = x2863.getName
            val x2867: Unit = throw new ArrayStoreException(x2866)
  x2867} else {()}
            val x2869: Boolean = x2859 < 0
            val x2873: Boolean = if (x2869) {x2869} else {          val x2870: Int = java.lang.reflect.Array.getLength(x2858)
            val x2871: Long = x2870.toLong
            val x2872: Boolean = x2859 >= x2871
  x2872}
            val x2876: Unit = if (x2873) {          val x2874: Int = x2859.toInt
            val x2875: Unit = throw new ArrayIndexOutOfBoundsException(x2874)
  x2875} else {()}
            val x2877: Long = 4 * x2859
            val x2878: Long = 24 + x2877
            val x2879: Int = unsafe.getInt(x2858,x2878)
            val x2880: Boolean = x2879 < p11_3
            val x2883: Unit = if (x2880) {          val x2881: Unit = block_539(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2881} else {          val x2882: Unit = block_540(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2882}
  x2883
  }
  // *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_532(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2884: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x2885: Long = 0.toLong
            val x2886: Boolean = x2884 eq null
            val x2888: Object = if (x2886) {          val x2887: Object = throw new NullPointerException()
  x2887} else {x2884}
            val x2889: java.lang.Class[Object] = x2884.getClass.asInstanceOf[Class[Object]]
            val x2890: Boolean = x2889.isArray
            val x2891: Boolean = if (x2890) {false} else {true}
            val x2894: Unit = if (x2891) {          val x2892: java.lang.String = x2889.getName
            val x2893: Unit = throw new ArrayStoreException(x2892)
  x2893} else {()}
            val x2895: Boolean = x2885 < 0
            val x2899: Boolean = if (x2895) {x2895} else {          val x2896: Int = java.lang.reflect.Array.getLength(x2884)
            val x2897: Long = x2896.toLong
            val x2898: Boolean = x2885 >= x2897
  x2898}
            val x2902: Unit = if (x2899) {          val x2900: Int = x2885.toInt
            val x2901: Unit = throw new ArrayIndexOutOfBoundsException(x2900)
  x2901} else {()}
            val x2903: Long = 4 * x2885
            val x2904: Long = 24 + x2903
            val x2905: Int = unsafe.getInt(x2884,x2904)
            val x2906: Boolean = x2905 < p11_3
            val x2909: Unit = if (x2906) {          val x2907: Unit = block_541(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2907} else {          val x2908: Unit = block_542(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2908}
  x2909
  }
  // *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_533(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2910: Unit = block_543(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2910
  }
  // *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_534(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2911: Boolean = 65536 > p11_3
            val x2914: Unit = if (x2911) {          val x2912: Unit = block_544(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2912} else {          val x2913: Unit = block_545(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2913}
  x2914
  }
  // *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_535(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2915: Int = -p11_3
            val x2916: Boolean = 65536 > x2915
            val x2919: Unit = if (x2916) {          val x2917: Unit = block_544(r,p11_0,p11_1,p11_2,x2915,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2917} else {          val x2918: Unit = block_545(r,p11_0,p11_1,p11_2,x2915,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2918}
  x2919
  }
  // *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_536(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2920: Int = 52429 * p11_3
            val x2921: Int = x2920 >>> 19
            val x2922: Int = x2921 << 3
            val x2923: Int = x2921 << 1
            val x2924: Int = x2923 + x2922
            val x2925: Int = -x2924
            val x2926: Int = x2925 + p11_3
            val x2927: Int = p11_8 + -1
            val x2928: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
            val x2929: Long = x2926.toLong
            val x2930: Boolean = x2928 eq null
            val x2932: Object = if (x2930) {          val x2931: Object = throw new NullPointerException()
  x2931} else {x2928}
            val x2933: java.lang.Class[Object] = x2928.getClass.asInstanceOf[Class[Object]]
            val x2934: Boolean = x2933.isArray
            val x2935: Boolean = if (x2934) {false} else {true}
            val x2938: Unit = if (x2935) {          val x2936: java.lang.String = x2933.getName
            val x2937: Unit = throw new ArrayStoreException(x2936)
  x2937} else {()}
            val x2939: Boolean = x2929 < 0
            val x2943: Boolean = if (x2939) {x2939} else {          val x2940: Int = java.lang.reflect.Array.getLength(x2928)
            val x2941: Long = x2940.toLong
            val x2942: Boolean = x2929 >= x2941
  x2942}
            val x2946: Unit = if (x2943) {          val x2944: Int = x2929.toInt
            val x2945: Unit = throw new ArrayIndexOutOfBoundsException(x2944)
  x2945} else {()}
            val x2947: Long = 2 * x2929
            val x2948: Long = 24 + x2947
            val x2949: Char = unsafe.getChar(x2928,x2948)
            val x2950: Int = x2949.toInt
            val x2951: Char = x2950.toChar
            val x2952: Long = x2927.toLong
            val x2953: Boolean = p11_5 eq null
            val x2955: Object = if (x2953) {          val x2954: Object = throw new NullPointerException()
  x2954} else {p11_5}
            val x2956: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x2957: Boolean = x2956.isArray
            val x2958: Boolean = if (x2957) {false} else {true}
            val x2961: Unit = if (x2958) {          val x2959: java.lang.String = x2956.getName
            val x2960: Unit = throw new ArrayStoreException(x2959)
  x2960} else {()}
            val x2962: Boolean = x2952 < 0
            val x2966: Boolean = if (x2962) {x2962} else {          val x2963: Int = java.lang.reflect.Array.getLength(p11_5)
            val x2964: Long = x2963.toLong
            val x2965: Boolean = x2952 >= x2964
  x2965}
            val x2969: Unit = if (x2966) {          val x2967: Int = x2952.toInt
            val x2968: Unit = throw new ArrayIndexOutOfBoundsException(x2967)
  x2968} else {()}
            val x2970: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x2971: java.lang.Class[Object] = x2970.getComponentType.asInstanceOf[Class[Object]]
            val x2972: Boolean = x2971.isAssignableFrom(classOf[Char])
            val x2973: Boolean = if (x2972) {false} else {true}
            val x2975: Unit = if (x2973) {          val x2974: Unit = throw new ArrayStoreException("char")
  x2974} else {()}
            val x2976: Long = 2 * x2952
            val x2977: Long = 24 + x2976
            val x2978: Unit = unsafe.putChar(p11_5,x2977, x2951)
            val x2979: Boolean = x2921 != 0
            val x2982: Unit = if (x2979) {          val x2980: Unit = block_536(r,p11_0,p11_1,p11_2,x2921,p11_4,p11_5,x2921,x2926,x2927,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2980} else {          val x2981: Unit = block_546(r,p11_0,p11_1,p11_2,x2921,p11_4,p11_5,x2921,x2926,x2927,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x2981}
  x2982
  }
  // *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_537(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x2983: Int = p11_3 / 100
            val x2984: Int = x2983 << 6
            val x2985: Int = x2983 << 5
            val x2986: Int = x2985 + x2984
            val x2987: Int = x2983 << 2
            val x2988: Int = x2987 + x2986
            val x2989: Int = -x2988
            val x2990: Int = x2989 + p11_3
            val x2991: Int = p11_8 + -1
            val x2992: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
            val x2993: Long = x2990.toLong
            val x2994: Boolean = x2992 eq null
            val x2996: Object = if (x2994) {          val x2995: Object = throw new NullPointerException()
  x2995} else {x2992}
            val x2997: java.lang.Class[Object] = x2992.getClass.asInstanceOf[Class[Object]]
            val x2998: Boolean = x2997.isArray
            val x2999: Boolean = if (x2998) {false} else {true}
            val x3002: Unit = if (x2999) {          val x3000: java.lang.String = x2997.getName
            val x3001: Unit = throw new ArrayStoreException(x3000)
  x3001} else {()}
            val x3003: Boolean = x2993 < 0
            val x3007: Boolean = if (x3003) {x3003} else {          val x3004: Int = java.lang.reflect.Array.getLength(x2992)
            val x3005: Long = x3004.toLong
            val x3006: Boolean = x2993 >= x3005
  x3006}
            val x3010: Unit = if (x3007) {          val x3008: Int = x2993.toInt
            val x3009: Unit = throw new ArrayIndexOutOfBoundsException(x3008)
  x3009} else {()}
            val x3011: Long = 2 * x2993
            val x3012: Long = 24 + x3011
            val x3013: Char = unsafe.getChar(x2992,x3012)
            val x3014: Int = x3013.toInt
            val x3015: Char = x3014.toChar
            val x3016: Long = x2991.toLong
            val x3017: Boolean = p11_5 eq null
            val x3019: Object = if (x3017) {          val x3018: Object = throw new NullPointerException()
  x3018} else {p11_5}
            val x3020: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3021: Boolean = x3020.isArray
            val x3022: Boolean = if (x3021) {false} else {true}
            val x3025: Unit = if (x3022) {          val x3023: java.lang.String = x3020.getName
            val x3024: Unit = throw new ArrayStoreException(x3023)
  x3024} else {()}
            val x3026: Boolean = x3016 < 0
            val x3030: Boolean = if (x3026) {x3026} else {          val x3027: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3028: Long = x3027.toLong
            val x3029: Boolean = x3016 >= x3028
  x3029}
            val x3033: Unit = if (x3030) {          val x3031: Int = x3016.toInt
            val x3032: Unit = throw new ArrayIndexOutOfBoundsException(x3031)
  x3032} else {()}
            val x3034: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3035: java.lang.Class[Object] = x3034.getComponentType.asInstanceOf[Class[Object]]
            val x3036: Boolean = x3035.isAssignableFrom(classOf[Char])
            val x3037: Boolean = if (x3036) {false} else {true}
            val x3039: Unit = if (x3037) {          val x3038: Unit = throw new ArrayStoreException("char")
  x3038} else {()}
            val x3040: Long = 2 * x3016
            val x3041: Long = 24 + x3040
            val x3042: Unit = unsafe.putChar(p11_5,x3041, x3015)
            val x3043: Int = x2991 + -1
            val x3044: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
            val x3045: Long = x2990.toLong
            val x3046: Boolean = x3044 eq null
            val x3048: Object = if (x3046) {          val x3047: Object = throw new NullPointerException()
  x3047} else {x3044}
            val x3049: java.lang.Class[Object] = x3044.getClass.asInstanceOf[Class[Object]]
            val x3050: Boolean = x3049.isArray
            val x3051: Boolean = if (x3050) {false} else {true}
            val x3054: Unit = if (x3051) {          val x3052: java.lang.String = x3049.getName
            val x3053: Unit = throw new ArrayStoreException(x3052)
  x3053} else {()}
            val x3055: Boolean = x3045 < 0
            val x3059: Boolean = if (x3055) {x3055} else {          val x3056: Int = java.lang.reflect.Array.getLength(x3044)
            val x3057: Long = x3056.toLong
            val x3058: Boolean = x3045 >= x3057
  x3058}
            val x3062: Unit = if (x3059) {          val x3060: Int = x3045.toInt
            val x3061: Unit = throw new ArrayIndexOutOfBoundsException(x3060)
  x3061} else {()}
            val x3063: Long = 2 * x3045
            val x3064: Long = 24 + x3063
            val x3065: Char = unsafe.getChar(x3044,x3064)
            val x3066: Int = x3065.toInt
            val x3067: Char = x3066.toChar
            val x3068: Long = x3043.toLong
            val x3069: Boolean = p11_5 eq null
            val x3071: Object = if (x3069) {          val x3070: Object = throw new NullPointerException()
  x3070} else {p11_5}
            val x3072: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3073: Boolean = x3072.isArray
            val x3074: Boolean = if (x3073) {false} else {true}
            val x3077: Unit = if (x3074) {          val x3075: java.lang.String = x3072.getName
            val x3076: Unit = throw new ArrayStoreException(x3075)
  x3076} else {()}
            val x3078: Boolean = x3068 < 0
            val x3082: Boolean = if (x3078) {x3078} else {          val x3079: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3080: Long = x3079.toLong
            val x3081: Boolean = x3068 >= x3080
  x3081}
            val x3085: Unit = if (x3082) {          val x3083: Int = x3068.toInt
            val x3084: Unit = throw new ArrayIndexOutOfBoundsException(x3083)
  x3084} else {()}
            val x3086: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3087: java.lang.Class[Object] = x3086.getComponentType.asInstanceOf[Class[Object]]
            val x3088: Boolean = x3087.isAssignableFrom(classOf[Char])
            val x3089: Boolean = if (x3088) {false} else {true}
            val x3091: Unit = if (x3089) {          val x3090: Unit = throw new ArrayStoreException("char")
  x3090} else {()}
            val x3092: Long = 2 * x3068
            val x3093: Long = 24 + x3092
            val x3094: Unit = unsafe.putChar(p11_5,x3093, x3067)
            val x3095: Unit = block_527(r,p11_0,p11_1,p11_2,x2983,p11_4,p11_5,x2983,x2990,x3043,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3095
  }
  // *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_538(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3096: Unit = block_547(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3096
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_539(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3097: Int = p11_4 + 1
            val x3098: Unit = block_548(r,p11_0,p11_1,p11_2,p11_3,x3097,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3098
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_540(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3099: Int = 1 + p11_4
            val x3100: Unit = block_549(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3099,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3100
  }
  // *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_541(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3101: Int = p11_4 + 1
            val x3102: Unit = block_550(r,p11_0,p11_1,p11_2,p11_3,x3101,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3102
  }
  // *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_542(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3103: Int = 1 + p11_4
            val x3104: Unit = block_551(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3103,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3104
  }
  // *** begin block 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_543(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3105: Boolean = p8_10 eq null
            val x3107: Object = if (x3105) {          val x3106: Object = throw new NullPointerException()
  x3106} else {p8_10}
  // *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
            val x3108: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
  x3108
  }
  // *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_544(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3109: Int = 52429 * p11_3
            val x3110: Int = x3109 >>> 19
            val x3111: Int = x3110 << 3
            val x3112: Int = x3110 << 1
            val x3113: Int = x3112 + x3111
            val x3114: Int = -x3113
            val x3115: Int = x3114 + p11_3
            val x3116: Int = p11_8 + -1
            val x3117: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
            val x3118: Long = x3115.toLong
            val x3119: Boolean = x3117 eq null
            val x3121: Object = if (x3119) {          val x3120: Object = throw new NullPointerException()
  x3120} else {x3117}
            val x3122: java.lang.Class[Object] = x3117.getClass.asInstanceOf[Class[Object]]
            val x3123: Boolean = x3122.isArray
            val x3124: Boolean = if (x3123) {false} else {true}
            val x3127: Unit = if (x3124) {          val x3125: java.lang.String = x3122.getName
            val x3126: Unit = throw new ArrayStoreException(x3125)
  x3126} else {()}
            val x3128: Boolean = x3118 < 0
            val x3132: Boolean = if (x3128) {x3128} else {          val x3129: Int = java.lang.reflect.Array.getLength(x3117)
            val x3130: Long = x3129.toLong
            val x3131: Boolean = x3118 >= x3130
  x3131}
            val x3135: Unit = if (x3132) {          val x3133: Int = x3118.toInt
            val x3134: Unit = throw new ArrayIndexOutOfBoundsException(x3133)
  x3134} else {()}
            val x3136: Long = 2 * x3118
            val x3137: Long = 24 + x3136
            val x3138: Char = unsafe.getChar(x3117,x3137)
            val x3139: Int = x3138.toInt
            val x3140: Char = x3139.toChar
            val x3141: Long = x3116.toLong
            val x3142: Boolean = p11_5 eq null
            val x3144: Object = if (x3142) {          val x3143: Object = throw new NullPointerException()
  x3143} else {p11_5}
            val x3145: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3146: Boolean = x3145.isArray
            val x3147: Boolean = if (x3146) {false} else {true}
            val x3150: Unit = if (x3147) {          val x3148: java.lang.String = x3145.getName
            val x3149: Unit = throw new ArrayStoreException(x3148)
  x3149} else {()}
            val x3151: Boolean = x3141 < 0
            val x3155: Boolean = if (x3151) {x3151} else {          val x3152: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3153: Long = x3152.toLong
            val x3154: Boolean = x3141 >= x3153
  x3154}
            val x3158: Unit = if (x3155) {          val x3156: Int = x3141.toInt
            val x3157: Unit = throw new ArrayIndexOutOfBoundsException(x3156)
  x3157} else {()}
            val x3159: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3160: java.lang.Class[Object] = x3159.getComponentType.asInstanceOf[Class[Object]]
            val x3161: Boolean = x3160.isAssignableFrom(classOf[Char])
            val x3162: Boolean = if (x3161) {false} else {true}
            val x3164: Unit = if (x3162) {          val x3163: Unit = throw new ArrayStoreException("char")
  x3163} else {()}
            val x3165: Long = 2 * x3141
            val x3166: Long = 24 + x3165
            val x3167: Unit = unsafe.putChar(p11_5,x3166, x3140)
            val x3168: Boolean = x3110 != 0
            val x3171: Unit = if (x3168) {          val x3169: Unit = block_544(r,p11_0,p11_1,p11_2,x3110,p11_4,p11_5,x3110,x3115,x3116,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3169} else {          val x3170: Unit = block_552(r,p11_0,p11_1,p11_2,x3110,p11_4,p11_5,x3110,x3115,x3116,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3170}
  x3171
  }
  // *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_545(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3172: Int = p11_3 / 100
            val x3173: Int = x3172 << 6
            val x3174: Int = x3172 << 5
            val x3175: Int = x3174 + x3173
            val x3176: Int = x3172 << 2
            val x3177: Int = x3176 + x3175
            val x3178: Int = -x3177
            val x3179: Int = x3178 + p11_3
            val x3180: Int = p11_8 + -1
            val x3181: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
            val x3182: Long = x3179.toLong
            val x3183: Boolean = x3181 eq null
            val x3185: Object = if (x3183) {          val x3184: Object = throw new NullPointerException()
  x3184} else {x3181}
            val x3186: java.lang.Class[Object] = x3181.getClass.asInstanceOf[Class[Object]]
            val x3187: Boolean = x3186.isArray
            val x3188: Boolean = if (x3187) {false} else {true}
            val x3191: Unit = if (x3188) {          val x3189: java.lang.String = x3186.getName
            val x3190: Unit = throw new ArrayStoreException(x3189)
  x3190} else {()}
            val x3192: Boolean = x3182 < 0
            val x3196: Boolean = if (x3192) {x3192} else {          val x3193: Int = java.lang.reflect.Array.getLength(x3181)
            val x3194: Long = x3193.toLong
            val x3195: Boolean = x3182 >= x3194
  x3195}
            val x3199: Unit = if (x3196) {          val x3197: Int = x3182.toInt
            val x3198: Unit = throw new ArrayIndexOutOfBoundsException(x3197)
  x3198} else {()}
            val x3200: Long = 2 * x3182
            val x3201: Long = 24 + x3200
            val x3202: Char = unsafe.getChar(x3181,x3201)
            val x3203: Int = x3202.toInt
            val x3204: Char = x3203.toChar
            val x3205: Long = x3180.toLong
            val x3206: Boolean = p11_5 eq null
            val x3208: Object = if (x3206) {          val x3207: Object = throw new NullPointerException()
  x3207} else {p11_5}
            val x3209: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3210: Boolean = x3209.isArray
            val x3211: Boolean = if (x3210) {false} else {true}
            val x3214: Unit = if (x3211) {          val x3212: java.lang.String = x3209.getName
            val x3213: Unit = throw new ArrayStoreException(x3212)
  x3213} else {()}
            val x3215: Boolean = x3205 < 0
            val x3219: Boolean = if (x3215) {x3215} else {          val x3216: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3217: Long = x3216.toLong
            val x3218: Boolean = x3205 >= x3217
  x3218}
            val x3222: Unit = if (x3219) {          val x3220: Int = x3205.toInt
            val x3221: Unit = throw new ArrayIndexOutOfBoundsException(x3220)
  x3221} else {()}
            val x3223: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3224: java.lang.Class[Object] = x3223.getComponentType.asInstanceOf[Class[Object]]
            val x3225: Boolean = x3224.isAssignableFrom(classOf[Char])
            val x3226: Boolean = if (x3225) {false} else {true}
            val x3228: Unit = if (x3226) {          val x3227: Unit = throw new ArrayStoreException("char")
  x3227} else {()}
            val x3229: Long = 2 * x3205
            val x3230: Long = 24 + x3229
            val x3231: Unit = unsafe.putChar(p11_5,x3230, x3204)
            val x3232: Int = x3180 + -1
            val x3233: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
            val x3234: Long = x3179.toLong
            val x3235: Boolean = x3233 eq null
            val x3237: Object = if (x3235) {          val x3236: Object = throw new NullPointerException()
  x3236} else {x3233}
            val x3238: java.lang.Class[Object] = x3233.getClass.asInstanceOf[Class[Object]]
            val x3239: Boolean = x3238.isArray
            val x3240: Boolean = if (x3239) {false} else {true}
            val x3243: Unit = if (x3240) {          val x3241: java.lang.String = x3238.getName
            val x3242: Unit = throw new ArrayStoreException(x3241)
  x3242} else {()}
            val x3244: Boolean = x3234 < 0
            val x3248: Boolean = if (x3244) {x3244} else {          val x3245: Int = java.lang.reflect.Array.getLength(x3233)
            val x3246: Long = x3245.toLong
            val x3247: Boolean = x3234 >= x3246
  x3247}
            val x3251: Unit = if (x3248) {          val x3249: Int = x3234.toInt
            val x3250: Unit = throw new ArrayIndexOutOfBoundsException(x3249)
  x3250} else {()}
            val x3252: Long = 2 * x3234
            val x3253: Long = 24 + x3252
            val x3254: Char = unsafe.getChar(x3233,x3253)
            val x3255: Int = x3254.toInt
            val x3256: Char = x3255.toChar
            val x3257: Long = x3232.toLong
            val x3258: Boolean = p11_5 eq null
            val x3260: Object = if (x3258) {          val x3259: Object = throw new NullPointerException()
  x3259} else {p11_5}
            val x3261: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3262: Boolean = x3261.isArray
            val x3263: Boolean = if (x3262) {false} else {true}
            val x3266: Unit = if (x3263) {          val x3264: java.lang.String = x3261.getName
            val x3265: Unit = throw new ArrayStoreException(x3264)
  x3265} else {()}
            val x3267: Boolean = x3257 < 0
            val x3271: Boolean = if (x3267) {x3267} else {          val x3268: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3269: Long = x3268.toLong
            val x3270: Boolean = x3257 >= x3269
  x3270}
            val x3274: Unit = if (x3271) {          val x3272: Int = x3257.toInt
            val x3273: Unit = throw new ArrayIndexOutOfBoundsException(x3272)
  x3273} else {()}
            val x3275: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3276: java.lang.Class[Object] = x3275.getComponentType.asInstanceOf[Class[Object]]
            val x3277: Boolean = x3276.isAssignableFrom(classOf[Char])
            val x3278: Boolean = if (x3277) {false} else {true}
            val x3280: Unit = if (x3278) {          val x3279: Unit = throw new ArrayStoreException("char")
  x3279} else {()}
            val x3281: Long = 2 * x3257
            val x3282: Long = 24 + x3281
            val x3283: Unit = unsafe.putChar(p11_5,x3282, x3256)
            val x3284: Unit = block_534(r,p11_0,p11_1,p11_2,x3172,p11_4,p11_5,x3172,x3179,x3232,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3284
  }
  // *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_546(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3285: Unit = block_553(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3285
  }
  // *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_547(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3286: Boolean = p11_9 == 0
            val x3289: Unit = if (x3286) {          val x3287: Unit = block_554(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3287} else {          val x3288: Unit = block_555(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3288}
  x3289
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_548(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3290: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x3291: Long = p11_4.toLong
            val x3292: Boolean = x3290 eq null
            val x3294: Object = if (x3292) {          val x3293: Object = throw new NullPointerException()
  x3293} else {x3290}
            val x3295: java.lang.Class[Object] = x3290.getClass.asInstanceOf[Class[Object]]
            val x3296: Boolean = x3295.isArray
            val x3297: Boolean = if (x3296) {false} else {true}
            val x3300: Unit = if (x3297) {          val x3298: java.lang.String = x3295.getName
            val x3299: Unit = throw new ArrayStoreException(x3298)
  x3299} else {()}
            val x3301: Boolean = x3291 < 0
            val x3305: Boolean = if (x3301) {x3301} else {          val x3302: Int = java.lang.reflect.Array.getLength(x3290)
            val x3303: Long = x3302.toLong
            val x3304: Boolean = x3291 >= x3303
  x3304}
            val x3308: Unit = if (x3305) {          val x3306: Int = x3291.toInt
            val x3307: Unit = throw new ArrayIndexOutOfBoundsException(x3306)
  x3307} else {()}
            val x3309: Long = 4 * x3291
            val x3310: Long = 24 + x3309
            val x3311: Int = unsafe.getInt(x3290,x3310)
            val x3312: Boolean = x3311 < p11_3
            val x3315: Unit = if (x3312) {          val x3313: Unit = block_539(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3313} else {          val x3314: Unit = block_540(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3314}
  x3315
  }
  // *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_549(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3316: Boolean = p10_3 eq null
            val x3318: Object = if (x3316) {          val x3317: Object = throw new NullPointerException()
  x3317} else {p10_3}
            val x3319: Int = unsafe.getInt(p10_3,16)
            val x3320: Int = p10_7 + x3319
            val x3321: Boolean = p10_3 eq null
            val x3323: Object = if (x3321) {          val x3322: Object = throw new NullPointerException()
  x3322} else {p10_3}
            val x3324: Unit = block_556(null,null,null,null,p10_3,x3320,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x3320,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3324
  }
  // *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_550(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3325: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
            val x3326: Long = p11_4.toLong
            val x3327: Boolean = x3325 eq null
            val x3329: Object = if (x3327) {          val x3328: Object = throw new NullPointerException()
  x3328} else {x3325}
            val x3330: java.lang.Class[Object] = x3325.getClass.asInstanceOf[Class[Object]]
            val x3331: Boolean = x3330.isArray
            val x3332: Boolean = if (x3331) {false} else {true}
            val x3335: Unit = if (x3332) {          val x3333: java.lang.String = x3330.getName
            val x3334: Unit = throw new ArrayStoreException(x3333)
  x3334} else {()}
            val x3336: Boolean = x3326 < 0
            val x3340: Boolean = if (x3336) {x3336} else {          val x3337: Int = java.lang.reflect.Array.getLength(x3325)
            val x3338: Long = x3337.toLong
            val x3339: Boolean = x3326 >= x3338
  x3339}
            val x3343: Unit = if (x3340) {          val x3341: Int = x3326.toInt
            val x3342: Unit = throw new ArrayIndexOutOfBoundsException(x3341)
  x3342} else {()}
            val x3344: Long = 4 * x3326
            val x3345: Long = 24 + x3344
            val x3346: Int = unsafe.getInt(x3325,x3345)
            val x3347: Boolean = x3346 < p11_3
            val x3350: Unit = if (x3347) {          val x3348: Unit = block_541(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3348} else {          val x3349: Unit = block_542(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3349}
  x3350
  }
  // *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_551(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3351: Int = 1 + p10_7
            val x3352: Unit = block_549(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3351,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3352
  }
  // *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_552(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3353: Unit = block_557(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3353
  }
  // *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_553(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3354: Boolean = p11_9 == 0
            val x3357: Unit = if (x3354) {          val x3355: Unit = block_558(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3355} else {          val x3356: Unit = block_559(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3356}
  x3357
  }
  // *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_554(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3358: Unit = block_560(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3358
  }
  // *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_555(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3359: Int = p11_8 + -1
            val x3360: Char = p11_9.toChar
            val x3361: Long = x3359.toLong
            val x3362: Boolean = p11_5 eq null
            val x3364: Object = if (x3362) {          val x3363: Object = throw new NullPointerException()
  x3363} else {p11_5}
            val x3365: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3366: Boolean = x3365.isArray
            val x3367: Boolean = if (x3366) {false} else {true}
            val x3370: Unit = if (x3367) {          val x3368: java.lang.String = x3365.getName
            val x3369: Unit = throw new ArrayStoreException(x3368)
  x3369} else {()}
            val x3371: Boolean = x3361 < 0
            val x3375: Boolean = if (x3371) {x3371} else {          val x3372: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3373: Long = x3372.toLong
            val x3374: Boolean = x3361 >= x3373
  x3374}
            val x3378: Unit = if (x3375) {          val x3376: Int = x3361.toInt
            val x3377: Unit = throw new ArrayIndexOutOfBoundsException(x3376)
  x3377} else {()}
            val x3379: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3380: java.lang.Class[Object] = x3379.getComponentType.asInstanceOf[Class[Object]]
            val x3381: Boolean = x3380.isAssignableFrom(classOf[Char])
            val x3382: Boolean = if (x3381) {false} else {true}
            val x3384: Unit = if (x3382) {          val x3383: Unit = throw new ArrayStoreException("char")
  x3383} else {()}
            val x3385: Long = 2 * x3361
            val x3386: Long = 24 + x3385
            val x3387: Unit = unsafe.putChar(p11_5,x3386, x3360)
            val x3388: Unit = block_560(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3388
  }
  // *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_556(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3389: Boolean = p11_3 eq null
            val x3391: Object = if (x3389) {          val x3390: Object = throw new NullPointerException()
  x3390} else {p11_3}
            val x3392: Object = unsafe.getObject(p11_3,24)
            val x3393: Boolean = x3392 eq null
            val x3395: Object = if (x3393) {          val x3394: Object = throw new NullPointerException()
  x3394} else {x3392}
            val x3396: Int = java.lang.reflect.Array.getLength(x3392)
            val x3397: Int = -x3396
            val x3398: Int = x3397 + p11_4
            val x3399: Boolean = x3398 <= 0
            val x3402: Unit = if (x3399) {          val x3400: Unit = block_561(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3400} else {          val x3401: Unit = block_562(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3401}
  x3402
  }
  // *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_557(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3403: Boolean = p11_9 == 0
            val x3406: Unit = if (x3403) {          val x3404: Unit = block_563(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3404} else {          val x3405: Unit = block_564(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3405}
  x3406
  }
  // *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_558(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3407: Unit = block_565(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3407
  }
  // *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_559(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3408: Int = p11_8 + -1
            val x3409: Char = p11_9.toChar
            val x3410: Long = x3408.toLong
            val x3411: Boolean = p11_5 eq null
            val x3413: Object = if (x3411) {          val x3412: Object = throw new NullPointerException()
  x3412} else {p11_5}
            val x3414: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3415: Boolean = x3414.isArray
            val x3416: Boolean = if (x3415) {false} else {true}
            val x3419: Unit = if (x3416) {          val x3417: java.lang.String = x3414.getName
            val x3418: Unit = throw new ArrayStoreException(x3417)
  x3418} else {()}
            val x3420: Boolean = x3410 < 0
            val x3424: Boolean = if (x3420) {x3420} else {          val x3421: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3422: Long = x3421.toLong
            val x3423: Boolean = x3410 >= x3422
  x3423}
            val x3427: Unit = if (x3424) {          val x3425: Int = x3410.toInt
            val x3426: Unit = throw new ArrayIndexOutOfBoundsException(x3425)
  x3426} else {()}
            val x3428: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3429: java.lang.Class[Object] = x3428.getComponentType.asInstanceOf[Class[Object]]
            val x3430: Boolean = x3429.isAssignableFrom(classOf[Char])
            val x3431: Boolean = if (x3430) {false} else {true}
            val x3433: Unit = if (x3431) {          val x3432: Unit = throw new ArrayStoreException("char")
  x3432} else {()}
            val x3434: Long = 2 * x3410
            val x3435: Long = 24 + x3434
            val x3436: Unit = unsafe.putChar(p11_5,x3435, x3409)
            val x3437: Unit = block_565(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3437
  }
  // *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_560(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3438: Boolean = p10_3 eq null
            val x3440: Object = if (x3438) {          val x3439: Object = throw new NullPointerException()
  x3439} else {p10_3}
            val x3441: Unit = unsafe.putInt(p10_3,16, p10_6)
            val x3442: Unit = block_444(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3442
  }
  // *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_561(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3443: Unit = block_566(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3443
  }
  // *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_562(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3444: Boolean = p11_3 eq null
            val x3446: Object = if (x3444) {          val x3445: Object = throw new NullPointerException()
  x3445} else {p11_3}
            val x3447: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
            val x3448: Unit = block_561(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3448
  }
  // *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_563(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3449: Unit = block_567(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3449
  }
  // *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_564(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3450: Int = p11_8 + -1
            val x3451: Char = p11_9.toChar
            val x3452: Long = x3450.toLong
            val x3453: Boolean = p11_5 eq null
            val x3455: Object = if (x3453) {          val x3454: Object = throw new NullPointerException()
  x3454} else {p11_5}
            val x3456: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3457: Boolean = x3456.isArray
            val x3458: Boolean = if (x3457) {false} else {true}
            val x3461: Unit = if (x3458) {          val x3459: java.lang.String = x3456.getName
            val x3460: Unit = throw new ArrayStoreException(x3459)
  x3460} else {()}
            val x3462: Boolean = x3452 < 0
            val x3466: Boolean = if (x3462) {x3462} else {          val x3463: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3464: Long = x3463.toLong
            val x3465: Boolean = x3452 >= x3464
  x3465}
            val x3469: Unit = if (x3466) {          val x3467: Int = x3452.toInt
            val x3468: Unit = throw new ArrayIndexOutOfBoundsException(x3467)
  x3468} else {()}
            val x3470: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3471: java.lang.Class[Object] = x3470.getComponentType.asInstanceOf[Class[Object]]
            val x3472: Boolean = x3471.isAssignableFrom(classOf[Char])
            val x3473: Boolean = if (x3472) {false} else {true}
            val x3475: Unit = if (x3473) {          val x3474: Unit = throw new ArrayStoreException("char")
  x3474} else {()}
            val x3476: Long = 2 * x3452
            val x3477: Long = 24 + x3476
            val x3478: Unit = unsafe.putChar(p11_5,x3477, x3451)
            val x3479: Unit = block_567(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3479
  }
  // *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_565(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3480: Boolean = p10_3 eq null
            val x3482: Object = if (x3480) {          val x3481: Object = throw new NullPointerException()
  x3481} else {p10_3}
            val x3483: Unit = unsafe.putInt(p10_3,16, p10_6)
            val x3484: Unit = block_454(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3484
  }
  // *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_566(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3485: Boolean = p10_3 eq null
            val x3487: Object = if (x3485) {          val x3486: Object = throw new NullPointerException()
  x3486} else {p10_3}
            val x3488: Object = unsafe.getObject(p10_3,24)
            val x3489: Unit = block_568(null,null,null,null,p10_4,p10_6,x3488,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3489
  }
  // *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_567(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3490: Boolean = p10_3 eq null
            val x3492: Object = if (x3490) {          val x3491: Object = throw new NullPointerException()
  x3491} else {p10_3}
            val x3493: Unit = unsafe.putInt(p10_3,16, p10_6)
            val x3494: Unit = block_466(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3494
  }
  // *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_568(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3495: Boolean = p11_3 >= 0
            val x3498: Unit = if (x3495) {          val x3496: Unit = block_569(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3496} else {          val x3497: Unit = block_570(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3497}
  x3498
  }
  // *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_569(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3499: Boolean = 65536 > p11_3
            val x3502: Unit = if (x3499) {          val x3500: Unit = block_571(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3500} else {          val x3501: Unit = block_572(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3501}
  x3502
  }
  // *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_570(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3503: Int = -p11_3
            val x3504: Boolean = 65536 > x3503
            val x3507: Unit = if (x3504) {          val x3505: Unit = block_571(r,p11_0,p11_1,p11_2,x3503,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3505} else {          val x3506: Unit = block_572(r,p11_0,p11_1,p11_2,x3503,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3506}
  x3507
  }
  // *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_571(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3508: Int = 52429 * p11_3
            val x3509: Int = x3508 >>> 19
            val x3510: Int = x3509 << 3
            val x3511: Int = x3509 << 1
            val x3512: Int = x3511 + x3510
            val x3513: Int = -x3512
            val x3514: Int = x3513 + p11_3
            val x3515: Int = p11_8 + -1
            val x3516: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
            val x3517: Long = x3514.toLong
            val x3518: Boolean = x3516 eq null
            val x3520: Object = if (x3518) {          val x3519: Object = throw new NullPointerException()
  x3519} else {x3516}
            val x3521: java.lang.Class[Object] = x3516.getClass.asInstanceOf[Class[Object]]
            val x3522: Boolean = x3521.isArray
            val x3523: Boolean = if (x3522) {false} else {true}
            val x3526: Unit = if (x3523) {          val x3524: java.lang.String = x3521.getName
            val x3525: Unit = throw new ArrayStoreException(x3524)
  x3525} else {()}
            val x3527: Boolean = x3517 < 0
            val x3531: Boolean = if (x3527) {x3527} else {          val x3528: Int = java.lang.reflect.Array.getLength(x3516)
            val x3529: Long = x3528.toLong
            val x3530: Boolean = x3517 >= x3529
  x3530}
            val x3534: Unit = if (x3531) {          val x3532: Int = x3517.toInt
            val x3533: Unit = throw new ArrayIndexOutOfBoundsException(x3532)
  x3533} else {()}
            val x3535: Long = 2 * x3517
            val x3536: Long = 24 + x3535
            val x3537: Char = unsafe.getChar(x3516,x3536)
            val x3538: Int = x3537.toInt
            val x3539: Char = x3538.toChar
            val x3540: Long = x3515.toLong
            val x3541: Boolean = p11_5 eq null
            val x3543: Object = if (x3541) {          val x3542: Object = throw new NullPointerException()
  x3542} else {p11_5}
            val x3544: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3545: Boolean = x3544.isArray
            val x3546: Boolean = if (x3545) {false} else {true}
            val x3549: Unit = if (x3546) {          val x3547: java.lang.String = x3544.getName
            val x3548: Unit = throw new ArrayStoreException(x3547)
  x3548} else {()}
            val x3550: Boolean = x3540 < 0
            val x3554: Boolean = if (x3550) {x3550} else {          val x3551: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3552: Long = x3551.toLong
            val x3553: Boolean = x3540 >= x3552
  x3553}
            val x3557: Unit = if (x3554) {          val x3555: Int = x3540.toInt
            val x3556: Unit = throw new ArrayIndexOutOfBoundsException(x3555)
  x3556} else {()}
            val x3558: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3559: java.lang.Class[Object] = x3558.getComponentType.asInstanceOf[Class[Object]]
            val x3560: Boolean = x3559.isAssignableFrom(classOf[Char])
            val x3561: Boolean = if (x3560) {false} else {true}
            val x3563: Unit = if (x3561) {          val x3562: Unit = throw new ArrayStoreException("char")
  x3562} else {()}
            val x3564: Long = 2 * x3540
            val x3565: Long = 24 + x3564
            val x3566: Unit = unsafe.putChar(p11_5,x3565, x3539)
            val x3567: Boolean = x3509 != 0
            val x3570: Unit = if (x3567) {          val x3568: Unit = block_571(r,p11_0,p11_1,p11_2,x3509,p11_4,p11_5,x3509,x3514,x3515,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3568} else {          val x3569: Unit = block_573(r,p11_0,p11_1,p11_2,x3509,p11_4,p11_5,x3509,x3514,x3515,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3569}
  x3570
  }
  // *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_572(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3571: Int = p11_3 / 100
            val x3572: Int = x3571 << 6
            val x3573: Int = x3571 << 5
            val x3574: Int = x3573 + x3572
            val x3575: Int = x3571 << 2
            val x3576: Int = x3575 + x3574
            val x3577: Int = -x3576
            val x3578: Int = x3577 + p11_3
            val x3579: Int = p11_8 + -1
            val x3580: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
            val x3581: Long = x3578.toLong
            val x3582: Boolean = x3580 eq null
            val x3584: Object = if (x3582) {          val x3583: Object = throw new NullPointerException()
  x3583} else {x3580}
            val x3585: java.lang.Class[Object] = x3580.getClass.asInstanceOf[Class[Object]]
            val x3586: Boolean = x3585.isArray
            val x3587: Boolean = if (x3586) {false} else {true}
            val x3590: Unit = if (x3587) {          val x3588: java.lang.String = x3585.getName
            val x3589: Unit = throw new ArrayStoreException(x3588)
  x3589} else {()}
            val x3591: Boolean = x3581 < 0
            val x3595: Boolean = if (x3591) {x3591} else {          val x3592: Int = java.lang.reflect.Array.getLength(x3580)
            val x3593: Long = x3592.toLong
            val x3594: Boolean = x3581 >= x3593
  x3594}
            val x3598: Unit = if (x3595) {          val x3596: Int = x3581.toInt
            val x3597: Unit = throw new ArrayIndexOutOfBoundsException(x3596)
  x3597} else {()}
            val x3599: Long = 2 * x3581
            val x3600: Long = 24 + x3599
            val x3601: Char = unsafe.getChar(x3580,x3600)
            val x3602: Int = x3601.toInt
            val x3603: Char = x3602.toChar
            val x3604: Long = x3579.toLong
            val x3605: Boolean = p11_5 eq null
            val x3607: Object = if (x3605) {          val x3606: Object = throw new NullPointerException()
  x3606} else {p11_5}
            val x3608: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3609: Boolean = x3608.isArray
            val x3610: Boolean = if (x3609) {false} else {true}
            val x3613: Unit = if (x3610) {          val x3611: java.lang.String = x3608.getName
            val x3612: Unit = throw new ArrayStoreException(x3611)
  x3612} else {()}
            val x3614: Boolean = x3604 < 0
            val x3618: Boolean = if (x3614) {x3614} else {          val x3615: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3616: Long = x3615.toLong
            val x3617: Boolean = x3604 >= x3616
  x3617}
            val x3621: Unit = if (x3618) {          val x3619: Int = x3604.toInt
            val x3620: Unit = throw new ArrayIndexOutOfBoundsException(x3619)
  x3620} else {()}
            val x3622: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3623: java.lang.Class[Object] = x3622.getComponentType.asInstanceOf[Class[Object]]
            val x3624: Boolean = x3623.isAssignableFrom(classOf[Char])
            val x3625: Boolean = if (x3624) {false} else {true}
            val x3627: Unit = if (x3625) {          val x3626: Unit = throw new ArrayStoreException("char")
  x3626} else {()}
            val x3628: Long = 2 * x3604
            val x3629: Long = 24 + x3628
            val x3630: Unit = unsafe.putChar(p11_5,x3629, x3603)
            val x3631: Int = x3579 + -1
            val x3632: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
            val x3633: Long = x3578.toLong
            val x3634: Boolean = x3632 eq null
            val x3636: Object = if (x3634) {          val x3635: Object = throw new NullPointerException()
  x3635} else {x3632}
            val x3637: java.lang.Class[Object] = x3632.getClass.asInstanceOf[Class[Object]]
            val x3638: Boolean = x3637.isArray
            val x3639: Boolean = if (x3638) {false} else {true}
            val x3642: Unit = if (x3639) {          val x3640: java.lang.String = x3637.getName
            val x3641: Unit = throw new ArrayStoreException(x3640)
  x3641} else {()}
            val x3643: Boolean = x3633 < 0
            val x3647: Boolean = if (x3643) {x3643} else {          val x3644: Int = java.lang.reflect.Array.getLength(x3632)
            val x3645: Long = x3644.toLong
            val x3646: Boolean = x3633 >= x3645
  x3646}
            val x3650: Unit = if (x3647) {          val x3648: Int = x3633.toInt
            val x3649: Unit = throw new ArrayIndexOutOfBoundsException(x3648)
  x3649} else {()}
            val x3651: Long = 2 * x3633
            val x3652: Long = 24 + x3651
            val x3653: Char = unsafe.getChar(x3632,x3652)
            val x3654: Int = x3653.toInt
            val x3655: Char = x3654.toChar
            val x3656: Long = x3631.toLong
            val x3657: Boolean = p11_5 eq null
            val x3659: Object = if (x3657) {          val x3658: Object = throw new NullPointerException()
  x3658} else {p11_5}
            val x3660: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3661: Boolean = x3660.isArray
            val x3662: Boolean = if (x3661) {false} else {true}
            val x3665: Unit = if (x3662) {          val x3663: java.lang.String = x3660.getName
            val x3664: Unit = throw new ArrayStoreException(x3663)
  x3664} else {()}
            val x3666: Boolean = x3656 < 0
            val x3670: Boolean = if (x3666) {x3666} else {          val x3667: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3668: Long = x3667.toLong
            val x3669: Boolean = x3656 >= x3668
  x3669}
            val x3673: Unit = if (x3670) {          val x3671: Int = x3656.toInt
            val x3672: Unit = throw new ArrayIndexOutOfBoundsException(x3671)
  x3672} else {()}
            val x3674: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3675: java.lang.Class[Object] = x3674.getComponentType.asInstanceOf[Class[Object]]
            val x3676: Boolean = x3675.isAssignableFrom(classOf[Char])
            val x3677: Boolean = if (x3676) {false} else {true}
            val x3679: Unit = if (x3677) {          val x3678: Unit = throw new ArrayStoreException("char")
  x3678} else {()}
            val x3680: Long = 2 * x3656
            val x3681: Long = 24 + x3680
            val x3682: Unit = unsafe.putChar(p11_5,x3681, x3655)
            val x3683: Unit = block_569(r,p11_0,p11_1,p11_2,x3571,p11_4,p11_5,x3571,x3578,x3631,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3683
  }
  // *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_573(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3684: Unit = block_574(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3684
  }
  // *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_574(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3685: Boolean = p11_9 == 0
            val x3688: Unit = if (x3685) {          val x3686: Unit = block_575(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3686} else {          val x3687: Unit = block_576(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3687}
  x3688
  }
  // *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_575(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3689: Unit = block_577(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3689
  }
  // *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_576(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3690: Int = p11_8 + -1
            val x3691: Char = p11_9.toChar
            val x3692: Long = x3690.toLong
            val x3693: Boolean = p11_5 eq null
            val x3695: Object = if (x3693) {          val x3694: Object = throw new NullPointerException()
  x3694} else {p11_5}
            val x3696: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3697: Boolean = x3696.isArray
            val x3698: Boolean = if (x3697) {false} else {true}
            val x3701: Unit = if (x3698) {          val x3699: java.lang.String = x3696.getName
            val x3700: Unit = throw new ArrayStoreException(x3699)
  x3700} else {()}
            val x3702: Boolean = x3692 < 0
            val x3706: Boolean = if (x3702) {x3702} else {          val x3703: Int = java.lang.reflect.Array.getLength(p11_5)
            val x3704: Long = x3703.toLong
            val x3705: Boolean = x3692 >= x3704
  x3705}
            val x3709: Unit = if (x3706) {          val x3707: Int = x3692.toInt
            val x3708: Unit = throw new ArrayIndexOutOfBoundsException(x3707)
  x3708} else {()}
            val x3710: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
            val x3711: java.lang.Class[Object] = x3710.getComponentType.asInstanceOf[Class[Object]]
            val x3712: Boolean = x3711.isAssignableFrom(classOf[Char])
            val x3713: Boolean = if (x3712) {false} else {true}
            val x3715: Unit = if (x3713) {          val x3714: Unit = throw new ArrayStoreException("char")
  x3714} else {()}
            val x3716: Long = 2 * x3692
            val x3717: Long = 24 + x3716
            val x3718: Unit = unsafe.putChar(p11_5,x3717, x3691)
            val x3719: Unit = block_577(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3719
  }
  // *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  def block_577(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
            val x3720: Boolean = p10_3 eq null
            val x3722: Object = if (x3720) {          val x3721: Object = throw new NullPointerException()
  x3721} else {p10_3}
            val x3723: Unit = unsafe.putInt(p10_3,16, p10_6)
            val x3724: Unit = block_533(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
  x3724
  }
}; BODY.RES }
}

warning: there were 156 deprecation warnings; re-run with -deprecation for details
one warning found
compilation: ok
hello: 8
9
