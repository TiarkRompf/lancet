// constants: <function1>,lancet.interpreter.BytecodeInterpreter_Simple@65d23f8e,HotSpotMethod<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>,Array(CONST_0, x0),void java.lang.AbstractStringBuilder.expandCapacity(int),public java.lang.String java.lang.Object.toString(),public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(),public void java.io.PrintStream.println(java.lang.String),public java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder.append(java.lang.String)
class Generated(CONST_0: lancet.interpreter.TestInterpreter1$$anonfun$testB$1$$anonfun$1,CONST_1: lancet.interpreter.BytecodeInterpreter_Simple,CONST_2: com.oracle.graal.hotspot.meta.HotSpotResolvedJavaMethod,CONST_3: Array[lancet.interpreter.Base_Simple$Rep],CONST_4: java.lang.reflect.Method,CONST_5: java.lang.reflect.Method,CONST_6: java.lang.reflect.Method,CONST_7: java.lang.reflect.Method,CONST_8: java.lang.reflect.Method) extends (Int=>Int){
import sun.misc.Unsafe
val unsafe = { val fld = classOf[Unsafe].getDeclaredField("theUnsafe"); fld.setAccessible(true); fld.get(classOf[Unsafe]).asInstanceOf[Unsafe]; }
type char = Char
def apply(ARG: Int): Int = { object BODY {
var RES = null.asInstanceOf[Int]
          val x0: Int = ARG
          val x1: Int = x0.asInstanceOf[Int]
          val x2: Unit = block_0(null,null,null,null,CONST_0,x1,null,null) // 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
          val x3: Object = null // stub return value int
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_0(r:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x4: Boolean = p2_3 eq null
          val x6: Object = if (x4) {          val x5: Object = throw new NullPointerException()
x5} else {p2_3}
          val x7: Unit = block_1(null,null,null,null,p2_3,p2_4,null,null,p2_0,p2_1,p2_2,p2_3,p2_4,null,null) // 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x7
}
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_1(r:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x8: Boolean = p3_3 eq null
          val x10: Object = if (x8) {          val x9: Object = throw new NullPointerException()
x9} else {p3_3}
          val x11: Object = unsafe.getObject(x10,16)
          val x12: Boolean = x11 eq null
          val x14: Object = if (x12) {          val x13: Object = throw new NullPointerException()
x13} else {x11}
          val x15: Unit = block_2(null,null,null,null,x11,8,null,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,null,null,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x15
}
// *** begin block 0:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_2(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Any,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x16: Object = unsafe.getObject(Class.forName("java.lang.System"),208)
          val x17: Object = unsafe.allocateInstance(classOf[scala.collection.mutable.StringBuilder])
          val x18: Boolean = x17 eq null
          val x20: Object = if (x18) {          val x19: Object = throw new NullPointerException()
x19} else {x17}
          val x21: Unit = block_3(null,null,null,null,x17,null,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,x16,x17,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x21
}
// *** begin block 0:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_3(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x22: Boolean = p5_3 eq null
          val x24: Object = if (x22) {          val x23: Object = throw new NullPointerException()
x23} else {p5_3}
          val x25: Unit = block_4(null,null,null,null,p5_3,16,"",null,null,null,null,null,p5_0,p5_1,p5_2,p5_3,null,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x25
}
// *** begin block 0:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_4(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x26: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x27: Boolean = p6_5 eq null
          val x29: Object = if (x27) {          val x28: Object = throw new NullPointerException()
x28} else {p6_5}
          val x30: Unit = block_5(null,null,null,null,p6_5,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_3,x26,x26,null,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x30
}
// *** begin block 0:<String.length>()I // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_5(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Object,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x31: Boolean = p7_3 eq null
          val x33: Object = if (x31) {          val x32: Object = throw new NullPointerException()
x32} else {p7_3}
          val x34: Object = unsafe.getObject(x33,16)
          val x35: Boolean = x34 eq null
          val x37: Object = if (x35) {          val x36: Object = throw new NullPointerException()
x36} else {x34}
          val x38: Int = java.lang.reflect.Array.getLength(x37)
          val x39: Unit = block_6(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,x38,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x39
}
// *** begin block 9:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_6(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Object,p6_9:Int,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x40: Int = p6_4 + p6_9
          val x41: Boolean = p6_8 eq null
          val x43: Object = if (x41) {          val x42: Object = throw new NullPointerException()
x42} else {p6_8}
          val x44: Unit = block_7(null,null,null,null,p6_8,x40,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,null,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x44
}
// *** begin block 0:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_7(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x45: Boolean = p7_3 eq null
          val x47: Object = if (x45) {          val x46: Object = throw new NullPointerException()
x46} else {p7_3}
          val x48: Unit = block_8(null,null,null,null,p7_3,p7_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x48
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_8(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x49: Boolean = p8_3 eq null
          val x51: Object = if (x49) {          val x50: Object = throw new NullPointerException()
x50} else {p8_3}
          val x52: Unit = block_9(null,null,null,null,p8_3,p8_0,p8_1,p8_2,p8_3,p8_4,null,p8_6,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x52
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_9(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x53: Unit = block_10(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x53
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_10(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x54: Object = new Array[char](p8_4)
          val x55: Boolean = p8_3 eq null
          val x57: Object = if (x55) {          val x56: Object = throw new NullPointerException()
x56} else {p8_3}
          val x58: Unit = unsafe.putObject(x57,24, x54)
          val x59: Unit = block_11(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x59
}
// *** begin block 5:<StringBuilder.<init>>(I)V // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_11(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x60: Unit = block_12(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x60
}
// *** begin block 14:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_12(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x61: Boolean = p6_7 eq null
          val x63: Object = if (x61) {          val x62: Object = throw new NullPointerException()
x62} else {p6_7}
          val x64: Unit = block_13(null,null,null,null,p6_7,p6_5,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,null,null,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x64
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_13(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x65: Boolean = p7_3 eq null
          val x67: Object = if (x65) {          val x66: Object = throw new NullPointerException()
x66} else {p7_3}
          val x68: Unit = block_14(null,null,null,null,p7_3,p7_4,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x68
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_14(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x71: Unit = if (true) {          val x69: Unit = block_15(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x69} else {          val x70: Unit = block_16(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x70}
x71
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_15(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x72: Boolean = p8_4 eq null
          val x74: Object = if (x72) {          val x73: Object = throw new NullPointerException()
x73} else {p8_4}
          val x75: Unit = block_17(null,null,null,null,p8_4,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x75
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_16(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x76: Boolean = "null" eq null
          val x78: Object = if (x76) {          val x77: Object = throw new NullPointerException()
x77} else {"null"}
          val x79: Unit = block_17(null,null,null,null,"null",null,p8_0,p8_1,p8_2,p8_3,"null",p8_5,null,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x79
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_17(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x80: Boolean = p9_3 eq null
          val x82: Object = if (x80) {          val x81: Object = throw new NullPointerException()
x81} else {p9_3}
          val x83: Object = unsafe.getObject(x82,16)
          val x84: Boolean = x83 eq null
          val x86: Object = if (x84) {          val x85: Object = throw new NullPointerException()
x85} else {x83}
          val x87: Int = java.lang.reflect.Array.getLength(x86)
          val x88: Unit = block_18(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x87,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x88
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_18(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Any,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x89: Boolean = p8_3 eq null
          val x91: Object = if (x89) {          val x90: Object = throw new NullPointerException()
x90} else {p8_3}
          val x92: Int = unsafe.getInt(x91,16)
          val x93: Int = p8_6 + x92
          val x94: Boolean = p8_3 eq null
          val x96: Object = if (x94) {          val x95: Object = throw new NullPointerException()
x95} else {p8_3}
          val x97: Unit = block_19(null,null,null,null,p8_3,x93,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_6,null,null,null,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x97
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_19(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x98: Boolean = p9_3 eq null
          val x100: Object = if (x98) {          val x99: Object = throw new NullPointerException()
x99} else {p9_3}
          val x101: Object = unsafe.getObject(x100,24)
          val x102: Boolean = x101 eq null
          val x104: Object = if (x102) {          val x103: Object = throw new NullPointerException()
x103} else {x101}
          val x105: Int = java.lang.reflect.Array.getLength(x104)
          val x106: Int = -x105
          val x107: Int = x106 + p9_4
          val x108: Boolean = x107 <= 0
          val x111: Unit = if (x108) {          val x109: Unit = block_20(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x109} else {          val x110: Unit = block_21(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x110}
x111
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_20(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x112: Unit = block_22(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x112
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_21(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x113: Boolean = p9_3 eq null
          val x115: Object = if (x113) {          val x114: Object = throw new NullPointerException()
x114} else {p9_3}
          val x116: Unit = CONST_4.invoke(p9_3.asInstanceOf[AnyRef],p9_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x117: Unit = block_20(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x117
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_22(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x118: Boolean = p8_3 eq null
          val x120: Object = if (x118) {          val x119: Object = throw new NullPointerException()
x119} else {p8_3}
          val x121: Object = unsafe.getObject(x120,24)
          val x122: Boolean = p8_3 eq null
          val x124: Object = if (x122) {          val x123: Object = throw new NullPointerException()
x123} else {p8_3}
          val x125: Int = unsafe.getInt(x124,16)
          val x126: Boolean = p8_4 eq null
          val x128: Object = if (x126) {          val x127: Object = throw new NullPointerException()
x127} else {p8_4}
          val x129: Unit = block_23(null,null,null,null,p8_4,0,p8_5,x121,x125,null,null,null,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x129
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_23(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x130: Boolean = p9_4 >= 0
          val x133: Unit = if (x130) {          val x131: Unit = block_24(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x131} else {          val x132: Unit = block_25(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x132}
x133
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_24(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x134: Boolean = p9_3 eq null
          val x136: Object = if (x134) {          val x135: Object = throw new NullPointerException()
x135} else {p9_3}
          val x137: Object = unsafe.getObject(x136,16)
          val x138: Boolean = x137 eq null
          val x140: Object = if (x138) {          val x139: Object = throw new NullPointerException()
x139} else {x137}
          val x141: Int = java.lang.reflect.Array.getLength(x140)
          val x142: Boolean = x141 >= p9_5
          val x145: Unit = if (x142) {          val x143: Unit = block_26(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x143} else {          val x144: Unit = block_27(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x144}
x145
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_25(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x146: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x147: Boolean = x146 eq null
          val x149: Object = if (x147) {          val x148: Object = throw new NullPointerException()
x148} else {x146}
          val x150: Unit = block_28(null,null,null,null,x146,p9_4,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x146,null,null,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x150
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_26(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x151: Boolean = p9_5 >= p9_4
          val x154: Unit = if (x151) {          val x152: Unit = block_29(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x152} else {          val x153: Unit = block_30(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x153}
x154
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_27(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x155: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x156: Boolean = x155 eq null
          val x158: Object = if (x156) {          val x157: Object = throw new NullPointerException()
x157} else {x155}
          val x159: Unit = block_31(null,null,null,null,x155,p9_5,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x155,null,null,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x159
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_28(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x160: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x161: Boolean = x160 eq null
          val x163: Object = if (x161) {          val x162: Object = throw new NullPointerException()
x162} else {x160}
          val x164: Unit = block_32(null,null,null,null,x160,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x160,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x164
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_29(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x165: Boolean = p9_3 eq null
          val x167: Object = if (x165) {          val x166: Object = throw new NullPointerException()
x166} else {p9_3}
          val x168: Object = unsafe.getObject(x167,16)
          val x169: Int = -p9_4
          val x170: Int = x169 + p9_5
          val x171: Unit = java.lang.System.arraycopy(x168,p9_4,p9_6,p9_7,x170).asInstanceOf[Object]
          val x172: Unit = block_33(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,null,null,null,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x172
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_30(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x173: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x174: Int = -p9_4
          val x175: Int = x174 + p9_5
          val x176: Boolean = x173 eq null
          val x178: Object = if (x176) {          val x177: Object = throw new NullPointerException()
x177} else {x173}
          val x179: Unit = block_34(null,null,null,null,x173,x175,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,x173,null,null,null,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x179
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_31(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x180: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x181: Boolean = x180 eq null
          val x183: Object = if (x181) {          val x182: Object = throw new NullPointerException()
x182} else {x180}
          val x184: Unit = block_35(null,null,null,null,x180,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x180,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x184
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_32(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x185: Boolean = p11_3 eq null
          val x187: Object = if (x185) {          val x186: Object = throw new NullPointerException()
x186} else {p11_3}
          val x188: Unit = block_36(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x188
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_33(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Any,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x189: Unit = block_37(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x189
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_34(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x190: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x191: Boolean = x190 eq null
          val x193: Object = if (x191) {          val x192: Object = throw new NullPointerException()
x192} else {x190}
          val x194: Unit = block_38(null,null,null,null,x190,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_3,x190,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x194
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_35(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x195: Boolean = p11_3 eq null
          val x197: Object = if (x195) {          val x196: Object = throw new NullPointerException()
x196} else {p11_3}
          val x198: Unit = block_39(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x198
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_36(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x199: Boolean = p12_3 eq null
          val x201: Object = if (x199) {          val x200: Object = throw new NullPointerException()
x200} else {p12_3}
          val x202: Unit = block_40(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x202
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_37(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x203: Boolean = p8_3 eq null
          val x205: Object = if (x203) {          val x204: Object = throw new NullPointerException()
x204} else {p8_3}
          val x206: Int = unsafe.getInt(x205,16)
          val x207: Int = p8_5 + x206
          val x208: Boolean = p8_3 eq null
          val x210: Object = if (x208) {          val x209: Object = throw new NullPointerException()
x209} else {p8_3}
          val x211: Unit = unsafe.putInt(x210,16, x207)
          val x212: Unit = block_41(r,p7_0,p7_1,p7_2,p7_3,p7_4,p8_3,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x212
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_38(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x213: Boolean = p11_3 eq null
          val x215: Object = if (x213) {          val x214: Object = throw new NullPointerException()
x214} else {p11_3}
          val x216: Unit = block_42(null,null,null,null,p11_3,16,null,null,p11_0,p11_1,p11_2,p11_3,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x216
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_39(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x217: Boolean = p12_3 eq null
          val x219: Object = if (x217) {          val x218: Object = throw new NullPointerException()
x218} else {p12_3}
          val x220: Unit = block_43(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x220
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_40(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x221: Unit = block_44(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x221
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_41(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Object,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x222: Unit = block_45(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p7_3,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x222
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_42(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x223: Boolean = p12_3 eq null
          val x225: Object = if (x223) {          val x224: Object = throw new NullPointerException()
x224} else {p12_3}
          val x226: Unit = block_46(null,null,null,null,p12_3,p12_0,p12_1,p12_2,p12_3,p12_4,null,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x226
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_43(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x227: Unit = block_47(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x227
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_44(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x228: Object = new Array[char](p12_4)
          val x229: Boolean = p12_3 eq null
          val x231: Object = if (x229) {          val x230: Object = throw new NullPointerException()
x230} else {p12_3}
          val x232: Unit = unsafe.putObject(x231,24, x228)
          val x233: Unit = block_48(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x233
}
// *** begin block 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_45(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Object,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x234: Boolean = p6_6 eq null
          val x236: Object = if (x234) {          val x235: Object = throw new NullPointerException()
x235} else {p6_6}
          val x237: Unit = block_49(null,null,null,null,p6_6,p6_7,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,null,null,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x237
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_46(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x238: Unit = block_50(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x238
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_47(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x239: Object = new Array[char](p12_4)
          val x240: Boolean = p12_3 eq null
          val x242: Object = if (x240) {          val x241: Object = throw new NullPointerException()
x241} else {p12_3}
          val x243: Unit = unsafe.putObject(x242,24, x239)
          val x244: Unit = block_51(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x244
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_48(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x245: Unit = block_52(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x245
}
// *** begin block 0:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_49(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x246: Boolean = p7_3 eq null
          val x248: Object = if (x246) {          val x247: Object = throw new NullPointerException()
x247} else {p7_3}
          val x249: Unit = unsafe.putObject(x248,16, p7_4)
          val x250: Boolean = p7_3 eq null
          val x252: Object = if (x250) {          val x251: Object = throw new NullPointerException()
x251} else {p7_3}
          val x253: Unit = block_53(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x253
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_50(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x254: Object = new Array[char](p12_4)
          val x255: Boolean = p12_3 eq null
          val x257: Object = if (x255) {          val x256: Object = throw new NullPointerException()
x256} else {p12_3}
          val x258: Unit = unsafe.putObject(x257,24, x254)
          val x259: Unit = block_54(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x259
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_51(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x260: Unit = block_55(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x260
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_52(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x261: Boolean = p10_6 eq null
          val x263: Object = if (x261) {          val x262: Object = throw new NullPointerException()
x262} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x264: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x264
}
// *** begin block 0:<Object.<init>>()V // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_53(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x265: Unit = block_56(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x265
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_54(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p11_5:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x266: Unit = block_57(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p9_8,p9_9,p9_10,p9_11,p9_12,p9_13,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x266
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_55(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x267: Boolean = p10_6 eq null
          val x269: Object = if (x267) {          val x268: Object = throw new NullPointerException()
x268} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x270: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x270
}
// *** begin block 9:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_56(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x271: Unit = block_58(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x271
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 18:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_57(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Object,p10_6:Object,p10_7:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Int,p9_6:Object,p9_7:Int,p9_8:Object,p9_9:Any,p9_10:Any,p9_11:Any,p9_12:Any,p9_13:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Object,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Object,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x272: Boolean = p10_6 eq null
          val x274: Object = if (x272) {          val x273: Object = throw new NullPointerException()
x273} else {p10_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x275: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x275
}
// *** begin block 0:<GenTraversableOnce$class.$init$>(Lscala/collection/GenTraversableOnce;)V // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_58(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x276: Unit = block_59(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x276
}
// *** begin block 13:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_59(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x277: Unit = block_60(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x277
}
// *** begin block 0:<TraversableOnce$class.$init$>(Lscala/collection/TraversableOnce;)V // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_60(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x278: Unit = block_61(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x278
}
// *** begin block 17:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_61(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x279: Unit = block_62(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x279
}
// *** begin block 0:<Parallelizable$class.$init$>(Lscala/collection/Parallelizable;)V // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_62(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x280: Unit = block_63(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x280
}
// *** begin block 21:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_63(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x281: Unit = block_64(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x281
}
// *** begin block 0:<GenTraversableLike$class.$init$>(Lscala/collection/GenTraversableLike;)V // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_64(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x282: Unit = block_65(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x282
}
// *** begin block 25:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_65(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x283: Unit = block_66(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x283
}
// *** begin block 0:<TraversableLike$class.$init$>(Lscala/collection/TraversableLike;)V // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_66(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x284: Unit = block_67(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x284
}
// *** begin block 29:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_67(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x285: Unit = block_68(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x285
}
// *** begin block 0:<GenericTraversableTemplate$class.$init$>(Lscala/collection/generic/GenericTraversableTemplate;)V // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_68(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x286: Unit = block_69(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x286
}
// *** begin block 33:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_69(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x287: Unit = block_70(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x287
}
// *** begin block 0:<GenTraversable$class.$init$>(Lscala/collection/GenTraversable;)V // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_70(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x288: Unit = block_71(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x288
}
// *** begin block 37:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_71(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x289: Unit = block_72(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x289
}
// *** begin block 0:<Traversable$class.$init$>(Lscala/collection/Traversable;)V // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_72(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x290: Unit = block_73(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x290
}
// *** begin block 41:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_73(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x291: Unit = block_74(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x291
}
// *** begin block 0:<Traversable$class.$init$>(Lscala/collection/mutable/Traversable;)V // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_74(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x292: Unit = block_75(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x292
}
// *** begin block 45:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_75(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x293: Unit = block_76(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x293
}
// *** begin block 0:<GenIterableLike$class.$init$>(Lscala/collection/GenIterableLike;)V // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_76(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x294: Unit = block_77(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x294
}
// *** begin block 49:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_77(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x295: Unit = block_78(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x295
}
// *** begin block 0:<GenIterable$class.$init$>(Lscala/collection/GenIterable;)V // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_78(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x296: Unit = block_79(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x296
}
// *** begin block 53:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_79(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x297: Unit = block_80(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x297
}
// *** begin block 0:<IterableLike$class.$init$>(Lscala/collection/IterableLike;)V // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_80(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x298: Unit = block_81(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x298
}
// *** begin block 57:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_81(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x299: Unit = block_82(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x299
}
// *** begin block 0:<Iterable$class.$init$>(Lscala/collection/Iterable;)V // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_82(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x300: Unit = block_83(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x300
}
// *** begin block 61:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_83(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x301: Unit = block_84(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x301
}
// *** begin block 0:<Iterable$class.$init$>(Lscala/collection/mutable/Iterable;)V // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_84(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x302: Unit = block_85(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x302
}
// *** begin block 65:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_85(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x303: Unit = block_86(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x303
}
// *** begin block 0:<Function1$class.$init$>(Lscala/Function1;)V // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_86(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x304: Unit = block_87(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x304
}
// *** begin block 69:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_87(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x305: Unit = block_88(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x305
}
// *** begin block 0:<PartialFunction$class.$init$>(Lscala/PartialFunction;)V // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_88(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x306: Unit = block_89(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x306
}
// *** begin block 73:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_89(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x307: Unit = block_90(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x307
}
// *** begin block 0:<GenSeqLike$class.$init$>(Lscala/collection/GenSeqLike;)V // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_90(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x308: Unit = block_91(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x308
}
// *** begin block 77:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_91(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x309: Unit = block_92(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x309
}
// *** begin block 0:<GenSeq$class.$init$>(Lscala/collection/GenSeq;)V // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_92(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x310: Unit = block_93(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x310
}
// *** begin block 81:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_93(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x311: Unit = block_94(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x311
}
// *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/SeqLike;)V // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_94(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x312: Unit = block_95(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x312
}
// *** begin block 85:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_95(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x313: Unit = block_96(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x313
}
// *** begin block 0:<Seq$class.$init$>(Lscala/collection/Seq;)V // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_96(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x314: Unit = block_97(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x314
}
// *** begin block 89:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_97(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x315: Unit = block_98(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x315
}
// *** begin block 0:<Cloneable$class.$init$>(Lscala/collection/mutable/Cloneable;)V // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_98(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x316: Unit = block_99(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x316
}
// *** begin block 93:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_99(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x317: Unit = block_100(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x317
}
// *** begin block 0:<SeqLike$class.$init$>(Lscala/collection/mutable/SeqLike;)V // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_100(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x318: Unit = block_101(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x318
}
// *** begin block 97:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_101(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x319: Unit = block_102(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x319
}
// *** begin block 0:<Seq$class.$init$>(Lscala/collection/mutable/Seq;)V // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_102(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x320: Unit = block_103(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x320
}
// *** begin block 101:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_103(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x321: Unit = block_104(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x321
}
// *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/IndexedSeqLike;)V // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_104(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x322: Unit = block_105(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x322
}
// *** begin block 105:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_105(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x323: Unit = block_106(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x323
}
// *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/IndexedSeq;)V // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_106(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x324: Unit = block_107(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x324
}
// *** begin block 109:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_107(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x325: Unit = block_108(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x325
}
// *** begin block 0:<IndexedSeqLike$class.$init$>(Lscala/collection/mutable/IndexedSeqLike;)V // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_108(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x326: Unit = block_109(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x326
}
// *** begin block 113:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_109(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x327: Unit = block_110(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x327
}
// *** begin block 0:<IndexedSeq$class.$init$>(Lscala/collection/mutable/IndexedSeq;)V // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_110(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x328: Unit = block_111(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x328
}
// *** begin block 117:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_111(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x329: Unit = block_112(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x329
}
// *** begin block 0:<IndexedSeqOptimized$class.$init$>(Lscala/collection/IndexedSeqOptimized;)V // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_112(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x330: Unit = block_113(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x330
}
// *** begin block 121:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_113(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x331: Unit = block_114(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x331
}
// *** begin block 0:<Ordered$class.$init$>(Lscala/math/Ordered;)V // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_114(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x332: Unit = block_115(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x332
}
// *** begin block 125:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_115(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x333: Unit = block_116(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x333
}
// *** begin block 0:<StringLike$class.$init$>(Lscala/collection/immutable/StringLike;)V // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_116(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x334: Unit = block_117(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x334
}
// *** begin block 129:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_117(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x335: Unit = block_118(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x335
}
// *** begin block 0:<Growable$class.$init$>(Lscala/collection/generic/Growable;)V // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_118(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x336: Unit = block_119(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x336
}
// *** begin block 133:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_119(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x337: Unit = block_120(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x337
}
// *** begin block 0:<Builder$class.$init$>(Lscala/collection/mutable/Builder;)V // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_120(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x338: Unit = block_121(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x338
}
// *** begin block 137:<StringBuilder.<init>>(Ljava/lang/StringBuilder;)V // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_121(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x339: Unit = block_122(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p6_9,p6_10,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x339
}
// *** begin block 21:<StringBuilder.<init>>(ILjava/lang/String;)V // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_122(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Int,p6_5:Object,p6_6:Any,p6_7:Any,p6_8:Any,p6_9:Any,p6_10:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x340: Unit = block_123(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x340
}
// *** begin block 9:<StringBuilder.<init>>()V // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_123(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x341: Unit = block_124(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x341
}
// *** begin block 10:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_124(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x342: Boolean = p4_6 eq null
          val x344: Object = if (x342) {          val x343: Object = throw new NullPointerException()
x343} else {p4_6}
          val x345: Unit = block_125(null,null,null,null,p4_6,"hello: ",null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x345
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_125(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x346: Boolean = p5_3 eq null
          val x348: Object = if (x346) {          val x347: Object = throw new NullPointerException()
x347} else {p5_3}
          val x349: Unit = block_126(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x349
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_126(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x350: Boolean = p6_3 eq null
          val x352: Object = if (x350) {          val x351: Object = throw new NullPointerException()
x351} else {p6_3}
          val x353: Object = unsafe.getObject(x352,16)
          val x354: Unit = block_127(r,p5_0,p5_1,p5_2,p5_3,p5_4,x353,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x354
}
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_127(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x355: Unit = block_128(null,null,null,null,p5_4,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x355
}
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_128(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x358: Unit = if (true) {          val x356: Unit = block_129(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x356} else {          val x357: Unit = block_130(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x357}
x358
}
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_129(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x359: Boolean = p6_3 eq null
          val x361: Object = if (x359) {          val x360: Object = throw new NullPointerException()
x360} else {p6_3}
          val x362: Object = CONST_5.invoke(p6_3) // java.lang.Object.toString
          val x363: Unit = block_131(r,p6_0,p6_1,p6_2,p6_3,x362,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x363
}
// *** begin block 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_130(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x364: Unit = block_131(r,p6_0,p6_1,p6_2,p6_3,"null",p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x364
}
// *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_131(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x365: Unit = block_132(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x365
}
// *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_132(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x366: Boolean = p5_5 eq null
          val x368: Object = if (x366) {          val x367: Object = throw new NullPointerException()
x367} else {p5_5}
          val x369: Unit = block_133(null,null,null,null,p5_5,p5_6,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x369
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_133(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x370: Boolean = p6_3 eq null
          val x372: Object = if (x370) {          val x371: Object = throw new NullPointerException()
x371} else {p6_3}
          val x373: Unit = block_134(null,null,null,null,p6_3,p6_4,null,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x373
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_134(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x376: Unit = if (true) {          val x374: Unit = block_135(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x374} else {          val x375: Unit = block_136(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x375}
x376
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_135(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x377: Boolean = p7_4 eq null
          val x379: Object = if (x377) {          val x378: Object = throw new NullPointerException()
x378} else {p7_4}
          val x380: Unit = block_137(null,null,null,null,p7_4,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x380
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_136(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x381: Boolean = "null" eq null
          val x383: Object = if (x381) {          val x382: Object = throw new NullPointerException()
x382} else {"null"}
          val x384: Unit = block_137(null,null,null,null,"null",null,p7_0,p7_1,p7_2,p7_3,"null",p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x384
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_137(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x385: Boolean = p8_3 eq null
          val x387: Object = if (x385) {          val x386: Object = throw new NullPointerException()
x386} else {p8_3}
          val x388: Object = unsafe.getObject(x387,16)
          val x389: Boolean = x388 eq null
          val x391: Object = if (x389) {          val x390: Object = throw new NullPointerException()
x390} else {x388}
          val x392: Int = java.lang.reflect.Array.getLength(x391)
          val x393: Unit = block_138(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,x392,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x393
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_138(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x394: Boolean = p7_3 eq null
          val x396: Object = if (x394) {          val x395: Object = throw new NullPointerException()
x395} else {p7_3}
          val x397: Int = unsafe.getInt(x396,16)
          val x398: Int = p7_6 + x397
          val x399: Boolean = p7_3 eq null
          val x401: Object = if (x399) {          val x400: Object = throw new NullPointerException()
x400} else {p7_3}
          val x402: Unit = block_139(null,null,null,null,p7_3,x398,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_6,null,null,null,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x402
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_139(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x403: Boolean = p8_3 eq null
          val x405: Object = if (x403) {          val x404: Object = throw new NullPointerException()
x404} else {p8_3}
          val x406: Object = unsafe.getObject(x405,24)
          val x407: Boolean = x406 eq null
          val x409: Object = if (x407) {          val x408: Object = throw new NullPointerException()
x408} else {x406}
          val x410: Int = java.lang.reflect.Array.getLength(x409)
          val x411: Int = -x410
          val x412: Int = x411 + p8_4
          val x413: Boolean = x412 <= 0
          val x416: Unit = if (x413) {          val x414: Unit = block_140(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x414} else {          val x415: Unit = block_141(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x415}
x416
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_140(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x417: Unit = block_142(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x417
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_141(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x418: Boolean = p8_3 eq null
          val x420: Object = if (x418) {          val x419: Object = throw new NullPointerException()
x419} else {p8_3}
          val x421: Unit = CONST_4.invoke(p8_3.asInstanceOf[AnyRef],p8_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x422: Unit = block_140(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x422
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_142(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x423: Boolean = p7_3 eq null
          val x425: Object = if (x423) {          val x424: Object = throw new NullPointerException()
x424} else {p7_3}
          val x426: Object = unsafe.getObject(x425,24)
          val x427: Boolean = p7_3 eq null
          val x429: Object = if (x427) {          val x428: Object = throw new NullPointerException()
x428} else {p7_3}
          val x430: Int = unsafe.getInt(x429,16)
          val x431: Boolean = p7_4 eq null
          val x433: Object = if (x431) {          val x432: Object = throw new NullPointerException()
x432} else {p7_4}
          val x434: Unit = block_143(null,null,null,null,p7_4,0,p7_5,x426,x430,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x434
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_143(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x435: Boolean = p8_4 >= 0
          val x438: Unit = if (x435) {          val x436: Unit = block_144(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x436} else {          val x437: Unit = block_145(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x437}
x438
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_144(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x439: Boolean = p8_3 eq null
          val x441: Object = if (x439) {          val x440: Object = throw new NullPointerException()
x440} else {p8_3}
          val x442: Object = unsafe.getObject(x441,16)
          val x443: Boolean = x442 eq null
          val x445: Object = if (x443) {          val x444: Object = throw new NullPointerException()
x444} else {x442}
          val x446: Int = java.lang.reflect.Array.getLength(x445)
          val x447: Boolean = x446 >= p8_5
          val x450: Unit = if (x447) {          val x448: Unit = block_146(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x448} else {          val x449: Unit = block_147(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x449}
x450
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_145(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x451: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x452: Boolean = x451 eq null
          val x454: Object = if (x452) {          val x453: Object = throw new NullPointerException()
x453} else {x451}
          val x455: Unit = block_148(null,null,null,null,x451,p8_4,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x451,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x455
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_146(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x456: Boolean = p8_5 >= p8_4
          val x459: Unit = if (x456) {          val x457: Unit = block_149(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x457} else {          val x458: Unit = block_150(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x458}
x459
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_147(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x460: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x461: Boolean = x460 eq null
          val x463: Object = if (x461) {          val x462: Object = throw new NullPointerException()
x462} else {x460}
          val x464: Unit = block_151(null,null,null,null,x460,p8_5,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x460,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x464
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_148(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x465: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x466: Boolean = x465 eq null
          val x468: Object = if (x466) {          val x467: Object = throw new NullPointerException()
x467} else {x465}
          val x469: Unit = block_152(null,null,null,null,x465,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x465,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x469
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_149(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x470: Boolean = p8_3 eq null
          val x472: Object = if (x470) {          val x471: Object = throw new NullPointerException()
x471} else {p8_3}
          val x473: Object = unsafe.getObject(x472,16)
          val x474: Int = -p8_4
          val x475: Int = x474 + p8_5
          val x476: Unit = java.lang.System.arraycopy(x473,p8_4,p8_6,p8_7,x475).asInstanceOf[Object]
          val x477: Unit = block_153(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x477
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_150(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x478: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x479: Int = -p8_4
          val x480: Int = x479 + p8_5
          val x481: Boolean = x478 eq null
          val x483: Object = if (x481) {          val x482: Object = throw new NullPointerException()
x482} else {x478}
          val x484: Unit = block_154(null,null,null,null,x478,x480,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x478,null,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x484
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_151(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x485: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x486: Boolean = x485 eq null
          val x488: Object = if (x486) {          val x487: Object = throw new NullPointerException()
x487} else {x485}
          val x489: Unit = block_155(null,null,null,null,x485,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x485,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x489
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_152(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x490: Boolean = p10_3 eq null
          val x492: Object = if (x490) {          val x491: Object = throw new NullPointerException()
x491} else {p10_3}
          val x493: Unit = block_156(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x493
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_153(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x494: Unit = block_157(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x494
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_154(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x495: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x496: Boolean = x495 eq null
          val x498: Object = if (x496) {          val x497: Object = throw new NullPointerException()
x497} else {x495}
          val x499: Unit = block_158(null,null,null,null,x495,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x495,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x499
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_155(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x500: Boolean = p10_3 eq null
          val x502: Object = if (x500) {          val x501: Object = throw new NullPointerException()
x501} else {p10_3}
          val x503: Unit = block_159(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x503
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_156(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x504: Boolean = p11_3 eq null
          val x506: Object = if (x504) {          val x505: Object = throw new NullPointerException()
x505} else {p11_3}
          val x507: Unit = block_160(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x507
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_157(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x508: Boolean = p7_3 eq null
          val x510: Object = if (x508) {          val x509: Object = throw new NullPointerException()
x509} else {p7_3}
          val x511: Int = unsafe.getInt(x510,16)
          val x512: Int = p7_5 + x511
          val x513: Boolean = p7_3 eq null
          val x515: Object = if (x513) {          val x514: Object = throw new NullPointerException()
x514} else {p7_3}
          val x516: Unit = unsafe.putInt(x515,16, x512)
          val x517: Unit = block_161(r,p6_0,p6_1,p6_2,p6_3,p6_4,p7_3,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x517
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_158(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x518: Boolean = p10_3 eq null
          val x520: Object = if (x518) {          val x519: Object = throw new NullPointerException()
x519} else {p10_3}
          val x521: Unit = block_162(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x521
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_159(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x522: Boolean = p11_3 eq null
          val x524: Object = if (x522) {          val x523: Object = throw new NullPointerException()
x523} else {p11_3}
          val x525: Unit = block_163(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x525
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_160(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x526: Unit = block_164(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x526
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_161(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Object,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x527: Unit = block_165(r,p5_0,p5_1,p5_2,p5_3,p5_4,p6_3,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x527
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_162(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x528: Boolean = p11_3 eq null
          val x530: Object = if (x528) {          val x529: Object = throw new NullPointerException()
x529} else {p11_3}
          val x531: Unit = block_166(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x531
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_163(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x532: Unit = block_167(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x532
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_164(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x533: Object = new Array[char](p11_4)
          val x534: Boolean = p11_3 eq null
          val x536: Object = if (x534) {          val x535: Object = throw new NullPointerException()
x535} else {p11_3}
          val x537: Unit = unsafe.putObject(x536,24, x533)
          val x538: Unit = block_168(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x538
}
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_165(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x539: Unit = block_169(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_3,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x539
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_166(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x540: Unit = block_170(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x540
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_167(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x541: Object = new Array[char](p11_4)
          val x542: Boolean = p11_3 eq null
          val x544: Object = if (x542) {          val x543: Object = throw new NullPointerException()
x543} else {p11_3}
          val x545: Unit = unsafe.putObject(x544,24, x541)
          val x546: Unit = block_171(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x546
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_168(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x547: Unit = block_172(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x547
}
// *** begin block 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_169(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x548: Unit = block_173(null,null,null,null,p4_4,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x548
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_170(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x549: Object = new Array[char](p11_4)
          val x550: Boolean = p11_3 eq null
          val x552: Object = if (x550) {          val x551: Object = throw new NullPointerException()
x551} else {p11_3}
          val x553: Unit = unsafe.putObject(x552,24, x549)
          val x554: Unit = block_174(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x554
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_171(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x555: Unit = block_175(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x555
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_172(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x556: Boolean = p9_6 eq null
          val x558: Object = if (x556) {          val x557: Object = throw new NullPointerException()
x557} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x559: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x559
}
// *** begin block 0:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_173(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x560: Unit = block_176(null,null,null,null,p5_3,null,null,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x560
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_174(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x561: Unit = block_177(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x561
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_175(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x562: Boolean = p9_6 eq null
          val x564: Object = if (x562) {          val x563: Object = throw new NullPointerException()
x563} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x565: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x565
}
// *** begin block 0:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_176(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x566: Boolean = unsafe.getBoolean(Class.forName("java.lang.Integer"),260)
          val x567: Int = if (x566) {1} else {0}
          val x568: Boolean = x567 != 0
          val x571: Unit = if (x568) {          val x569: Unit = block_178(r,p6_0,p6_1,p6_2,p6_3,null,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x569} else {          val x570: Unit = block_179(r,p6_0,p6_1,p6_2,p6_3,null,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x570}
x571
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 15:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_177(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x572: Boolean = p9_6 eq null
          val x574: Object = if (x572) {          val x573: Object = throw new NullPointerException()
x573} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x575: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x575
}
// *** begin block 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_178(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x576: Boolean = -128 > p6_3
          val x579: Unit = if (x576) {          val x577: Unit = block_180(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x577} else {          val x578: Unit = block_181(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x578}
x579
}
// *** begin block 6:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_179(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x580: Int = unsafe.getInt(Class.forName("java.lang.Integer$IntegerCache"),212)
          val x581: Boolean = 127 <= x580
          val x584: Unit = if (x581) {          val x582: Unit = block_178(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x582} else {          val x583: Unit = block_182(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 14:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x583}
x584
}
// *** begin block 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_180(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x585: Object = unsafe.allocateInstance(classOf[java.lang.Integer])
          val x586: Boolean = x585 eq null
          val x588: Object = if (x586) {          val x587: Object = throw new NullPointerException()
x587} else {x585}
          val x589: Unit = block_183(null,null,null,null,x585,p6_3,null,null,p6_0,p6_1,p6_2,p6_3,x585,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x589
}
// *** begin block 28:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_181(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x590: Int = unsafe.getInt(Class.forName("java.lang.Integer$IntegerCache"),212)
          val x591: Boolean = x590 < p6_3
          val x594: Unit = if (x591) {          val x592: Unit = block_180(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 45:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x592} else {          val x593: Unit = block_184(r,p6_0,p6_1,p6_2,p6_3,null,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x593}
x594
}
// *** begin block 14:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_182(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x595: Object = unsafe.allocateInstance(classOf[java.lang.AssertionError])
          val x596: Boolean = x595 eq null
          val x598: Object = if (x596) {          val x597: Object = throw new NullPointerException()
x597} else {x595}
          val x599: Unit = block_185(null,null,null,null,x595,null,p6_0,p6_1,p6_2,p6_3,x595,null,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x599
}
// *** begin block 0:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_183(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x600: Boolean = p7_3 eq null
          val x602: Object = if (x600) {          val x601: Object = throw new NullPointerException()
x601} else {p7_3}
          val x603: Unit = block_186(null,null,null,null,p7_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,null,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x603
}
// *** begin block 35:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_184(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Any,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x604: Object = unsafe.getObject(Class.forName("java.lang.Integer$IntegerCache"),200)
          val x605: Int = 128 + p6_3
          val x606: Long = x605.toLong
          val x607: Boolean = x604 eq null
          val x609: Object = if (x607) {          val x608: Object = throw new NullPointerException()
x608} else {x604}
          val x610: java.lang.Class[Object] = x604.getClass.asInstanceOf[Class[Object]]
          val x611: Boolean = x610.isArray
          val x612: Boolean = if (x611) {false} else {true}
          val x615: Unit = if (x612) {          val x613: java.lang.String = x610.getName
          val x614: Unit = throw new ArrayStoreException(x613)
x614} else {()}
          val x616: Boolean = x606 < 0
          val x620: Boolean = if (x616) {x616} else {          val x617: Int = java.lang.reflect.Array.getLength(x604)
          val x618: Long = x617.toLong
          val x619: Boolean = x606 >= x618
x619}
          val x623: Unit = if (x620) {          val x621: Int = x606.toInt
          val x622: Unit = throw new ArrayIndexOutOfBoundsException(x621)
x622} else {()}
          val x624: Long = 8 * x606
          val x625: Long = 24 + x624
          val x626: Object = unsafe.getObject(x604,x625)
          val x627: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,x626,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x627
}
// *** begin block 0:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_185(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x628: Boolean = p7_3 eq null
          val x630: Object = if (x628) {          val x629: Object = throw new NullPointerException()
x629} else {p7_3}
          val x631: Unit = block_188(null,null,null,null,p7_3,null,p7_0,p7_1,p7_2,p7_3,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x631
}
// *** begin block 0:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_186(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x632: Boolean = p8_3 eq null
          val x634: Object = if (x632) {          val x633: Object = throw new NullPointerException()
x633} else {p8_3}
          val x635: Unit = block_189(null,null,null,null,p8_3,p8_0,p8_1,p8_2,p8_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x635
}
// *** begin block 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_187(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x636: Unit = block_190(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p5_4,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x636
}
// *** begin block 0:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_188(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x637: Boolean = p8_3 eq null
          val x639: Object = if (x637) {          val x638: Object = throw new NullPointerException()
x638} else {p8_3}
          val x640: Unit = block_191(null,null,null,null,p8_3,null,null,p8_0,p8_1,p8_2,p8_3,null,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x640
}
// *** begin block 0:<Object.<init>>()V // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_189(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x641: Unit = block_192(r,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x641
}
// *** begin block 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_190(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Object,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x642: Boolean = p4_6 eq null
          val x644: Object = if (x642) {          val x643: Object = throw new NullPointerException()
x643} else {p4_6}
          val x645: Unit = block_193(null,null,null,null,p4_6,p4_7,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,null,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x645
}
// *** begin block 0:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_191(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x646: Boolean = p9_3 eq null
          val x648: Object = if (x646) {          val x647: Object = throw new NullPointerException()
x647} else {p9_3}
          val x649: Unit = block_194(null,null,null,null,p9_3,p9_0,p9_1,p9_2,p9_3,null,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x649
}
// *** begin block 4:<Number.<init>>()V // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_192(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x650: Unit = block_195(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x650
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_193(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x651: Boolean = p5_3 eq null
          val x653: Object = if (x651) {          val x652: Object = throw new NullPointerException()
x652} else {p5_3}
          val x654: Unit = block_196(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x654
}
// *** begin block 0:<Object.<init>>()V // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_194(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x655: Unit = block_197(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x655
}
// *** begin block 4:<Integer.<init>>(I)V // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_195(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Int,p7_5:Any,p7_6:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x656: Boolean = p7_3 eq null
          val x658: Object = if (x656) {          val x657: Object = throw new NullPointerException()
x657} else {p7_3}
          val x659: Unit = unsafe.putInt(x658,16, p7_4)
          val x660: Unit = block_198(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x660
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_196(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x661: Boolean = p6_3 eq null
          val x663: Object = if (x661) {          val x662: Object = throw new NullPointerException()
x662} else {p6_3}
          val x664: Object = unsafe.getObject(x663,16)
          val x665: Unit = block_199(r,p5_0,p5_1,p5_2,p5_3,p5_4,x664,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x665
}
// *** begin block 4:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_197(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x666: Boolean = p9_3 eq null
          val x668: Object = if (x666) {          val x667: Object = throw new NullPointerException()
x667} else {p9_3}
          val x669: Unit = unsafe.putObject(x668,32, p9_3)
          val x670: Object = unsafe.getObject(Class.forName("java.lang.Throwable"),200)
          val x671: Boolean = p9_3 eq null
          val x673: Object = if (x671) {          val x672: Object = throw new NullPointerException()
x672} else {p9_3}
          val x674: Unit = unsafe.putObject(x673,40, x670)
          val x675: Object = unsafe.getObject(Class.forName("java.lang.Throwable"),208)
          val x676: Boolean = p9_3 eq null
          val x678: Object = if (x676) {          val x677: Object = throw new NullPointerException()
x677} else {p9_3}
          val x679: Unit = unsafe.putObject(x678,48, x675)
          val x680: Boolean = p9_3 eq null
          val x682: Object = if (x680) {          val x681: Object = throw new NullPointerException()
x681} else {p9_3}
          val x683: Object = CONST_6.invoke(p9_3) // java.lang.Throwable.fillInStackTrace
          val x684: Unit = block_200(r,p9_0,p9_1,p9_2,p9_3,x683,null,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x684
}
// *** begin block 53:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_198(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x685: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x685
}
// *** begin block 4:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_199(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x686: Unit = block_201(null,null,null,null,p5_4,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x686
}
// *** begin block 27:<Throwable.<init>>()V // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_200(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x687: Unit = block_202(r,p8_0,p8_1,p8_2,p8_3,p8_4,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x687
}
// *** begin block 0:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_201(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x690: Unit = if (true) {          val x688: Unit = block_203(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x688} else {          val x689: Unit = block_204(r,p6_0,p6_1,p6_2,p6_3,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x689}
x690
}
// *** begin block 4:<Error.<init>>()V // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_202(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x691: Unit = block_205(r,p7_0,p7_1,p7_2,p7_3,p7_4,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x691
}
// *** begin block 9:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_203(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x692: Boolean = p6_3 eq null
          val x694: Object = if (x692) {          val x693: Object = throw new NullPointerException()
x693} else {p6_3}
          val x695: Object = CONST_5.invoke(p6_3) // java.lang.Object.toString
          val x696: Unit = block_206(r,p6_0,p6_1,p6_2,p6_3,x695,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x696
}
// *** begin block 4:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_204(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x697: Unit = block_206(r,p6_0,p6_1,p6_2,p6_3,"null",p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x697
}
// *** begin block 4:<AssertionError.<init>>()V // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_205(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x698: Unit = block_207(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x698
}
// *** begin block 13:<String.valueOf>(Ljava/lang/Object;)Ljava/lang/String; // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_206(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x699: Unit = block_208(r,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x699
}
// *** begin block 21:<Integer.valueOf>(I)Ljava/lang/Integer; // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_207(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Int,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Int,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x700: Unit = block_187(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<BoxesRunTime.boxToInteger>(I)Ljava/lang/Integer; // 19:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x700
}
// *** begin block 8:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_208(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x701: Boolean = p5_5 eq null
          val x703: Object = if (x701) {          val x702: Object = throw new NullPointerException()
x702} else {p5_5}
          val x704: Unit = block_209(null,null,null,null,p5_5,p5_6,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,null,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x704
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_209(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x705: Boolean = p6_3 eq null
          val x707: Object = if (x705) {          val x706: Object = throw new NullPointerException()
x706} else {p6_3}
          val x708: Unit = block_210(null,null,null,null,p6_3,p6_4,null,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x708
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_210(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x711: Unit = if (true) {          val x709: Unit = block_211(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x709} else {          val x710: Unit = block_212(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x710}
x711
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_211(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x712: Boolean = p7_4 eq null
          val x714: Object = if (x712) {          val x713: Object = throw new NullPointerException()
x713} else {p7_4}
          val x715: Unit = block_213(null,null,null,null,p7_4,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x715
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_212(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x716: Boolean = "null" eq null
          val x718: Object = if (x716) {          val x717: Object = throw new NullPointerException()
x717} else {"null"}
          val x719: Unit = block_213(null,null,null,null,"null",null,p7_0,p7_1,p7_2,p7_3,"null",p7_5,null,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x719
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_213(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x720: Boolean = p8_3 eq null
          val x722: Object = if (x720) {          val x721: Object = throw new NullPointerException()
x721} else {p8_3}
          val x723: Object = unsafe.getObject(x722,16)
          val x724: Boolean = x723 eq null
          val x726: Object = if (x724) {          val x725: Object = throw new NullPointerException()
x725} else {x723}
          val x727: Int = java.lang.reflect.Array.getLength(x726)
          val x728: Unit = block_214(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,x727,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x728
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_214(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Any,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x729: Boolean = p7_3 eq null
          val x731: Object = if (x729) {          val x730: Object = throw new NullPointerException()
x730} else {p7_3}
          val x732: Int = unsafe.getInt(x731,16)
          val x733: Int = p7_6 + x732
          val x734: Boolean = p7_3 eq null
          val x736: Object = if (x734) {          val x735: Object = throw new NullPointerException()
x735} else {p7_3}
          val x737: Unit = block_215(null,null,null,null,p7_3,x733,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_6,null,null,null,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x737
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_215(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x738: Boolean = p8_3 eq null
          val x740: Object = if (x738) {          val x739: Object = throw new NullPointerException()
x739} else {p8_3}
          val x741: Object = unsafe.getObject(x740,24)
          val x742: Boolean = x741 eq null
          val x744: Object = if (x742) {          val x743: Object = throw new NullPointerException()
x743} else {x741}
          val x745: Int = java.lang.reflect.Array.getLength(x744)
          val x746: Int = -x745
          val x747: Int = x746 + p8_4
          val x748: Boolean = x747 <= 0
          val x751: Unit = if (x748) {          val x749: Unit = block_216(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x749} else {          val x750: Unit = block_217(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x750}
x751
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_216(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x752: Unit = block_218(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x752
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_217(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x753: Boolean = p8_3 eq null
          val x755: Object = if (x753) {          val x754: Object = throw new NullPointerException()
x754} else {p8_3}
          val x756: Unit = CONST_4.invoke(p8_3.asInstanceOf[AnyRef],p8_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x757: Unit = block_216(r,p8_0,p8_1,p8_2,p8_3,p8_4,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x757
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_218(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x758: Boolean = p7_3 eq null
          val x760: Object = if (x758) {          val x759: Object = throw new NullPointerException()
x759} else {p7_3}
          val x761: Object = unsafe.getObject(x760,24)
          val x762: Boolean = p7_3 eq null
          val x764: Object = if (x762) {          val x763: Object = throw new NullPointerException()
x763} else {p7_3}
          val x765: Int = unsafe.getInt(x764,16)
          val x766: Boolean = p7_4 eq null
          val x768: Object = if (x766) {          val x767: Object = throw new NullPointerException()
x767} else {p7_4}
          val x769: Unit = block_219(null,null,null,null,p7_4,0,p7_5,x761,x765,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x769
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_219(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x770: Boolean = p8_4 >= 0
          val x773: Unit = if (x770) {          val x771: Unit = block_220(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x771} else {          val x772: Unit = block_221(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x772}
x773
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_220(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x774: Boolean = p8_3 eq null
          val x776: Object = if (x774) {          val x775: Object = throw new NullPointerException()
x775} else {p8_3}
          val x777: Object = unsafe.getObject(x776,16)
          val x778: Boolean = x777 eq null
          val x780: Object = if (x778) {          val x779: Object = throw new NullPointerException()
x779} else {x777}
          val x781: Int = java.lang.reflect.Array.getLength(x780)
          val x782: Boolean = x781 >= p8_5
          val x785: Unit = if (x782) {          val x783: Unit = block_222(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x783} else {          val x784: Unit = block_223(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x784}
x785
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_221(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x786: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x787: Boolean = x786 eq null
          val x789: Object = if (x787) {          val x788: Object = throw new NullPointerException()
x788} else {x786}
          val x790: Unit = block_224(null,null,null,null,x786,p8_4,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x786,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x790
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_222(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x791: Boolean = p8_5 >= p8_4
          val x794: Unit = if (x791) {          val x792: Unit = block_225(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x792} else {          val x793: Unit = block_226(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x793}
x794
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_223(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x795: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x796: Boolean = x795 eq null
          val x798: Object = if (x796) {          val x797: Object = throw new NullPointerException()
x797} else {x795}
          val x799: Unit = block_227(null,null,null,null,x795,p8_5,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x795,null,null,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x799
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_224(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x800: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x801: Boolean = x800 eq null
          val x803: Object = if (x801) {          val x802: Object = throw new NullPointerException()
x802} else {x800}
          val x804: Unit = block_228(null,null,null,null,x800,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x800,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x804
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_225(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x805: Boolean = p8_3 eq null
          val x807: Object = if (x805) {          val x806: Object = throw new NullPointerException()
x806} else {p8_3}
          val x808: Object = unsafe.getObject(x807,16)
          val x809: Int = -p8_4
          val x810: Int = x809 + p8_5
          val x811: Unit = java.lang.System.arraycopy(x808,p8_4,p8_6,p8_7,x810).asInstanceOf[Object]
          val x812: Unit = block_229(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x812
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_226(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x813: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x814: Int = -p8_4
          val x815: Int = x814 + p8_5
          val x816: Boolean = x813 eq null
          val x818: Object = if (x816) {          val x817: Object = throw new NullPointerException()
x817} else {x813}
          val x819: Unit = block_230(null,null,null,null,x813,x815,null,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x813,null,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x819
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_227(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x820: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x821: Boolean = x820 eq null
          val x823: Object = if (x821) {          val x822: Object = throw new NullPointerException()
x822} else {x820}
          val x824: Unit = block_231(null,null,null,null,x820,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x820,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x824
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_228(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x825: Boolean = p10_3 eq null
          val x827: Object = if (x825) {          val x826: Object = throw new NullPointerException()
x826} else {p10_3}
          val x828: Unit = block_232(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x828
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_229(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x829: Unit = block_233(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x829
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_230(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x830: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x831: Boolean = x830 eq null
          val x833: Object = if (x831) {          val x832: Object = throw new NullPointerException()
x832} else {x830}
          val x834: Unit = block_234(null,null,null,null,x830,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,x830,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x834
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_231(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x835: Boolean = p10_3 eq null
          val x837: Object = if (x835) {          val x836: Object = throw new NullPointerException()
x836} else {p10_3}
          val x838: Unit = block_235(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x838
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_232(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x839: Boolean = p11_3 eq null
          val x841: Object = if (x839) {          val x840: Object = throw new NullPointerException()
x840} else {p11_3}
          val x842: Unit = block_236(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x842
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_233(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x843: Boolean = p7_3 eq null
          val x845: Object = if (x843) {          val x844: Object = throw new NullPointerException()
x844} else {p7_3}
          val x846: Int = unsafe.getInt(x845,16)
          val x847: Int = p7_5 + x846
          val x848: Boolean = p7_3 eq null
          val x850: Object = if (x848) {          val x849: Object = throw new NullPointerException()
x849} else {p7_3}
          val x851: Unit = unsafe.putInt(x850,16, x847)
          val x852: Unit = block_237(r,p6_0,p6_1,p6_2,p6_3,p6_4,p7_3,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x852
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_234(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x853: Boolean = p10_3 eq null
          val x855: Object = if (x853) {          val x854: Object = throw new NullPointerException()
x854} else {p10_3}
          val x856: Unit = block_238(null,null,null,null,p10_3,16,null,null,p10_0,p10_1,p10_2,p10_3,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x856
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_235(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x857: Boolean = p11_3 eq null
          val x859: Object = if (x857) {          val x858: Object = throw new NullPointerException()
x858} else {p11_3}
          val x860: Unit = block_239(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x860
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_236(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x861: Unit = block_240(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x861
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_237(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Object,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x862: Unit = block_241(r,p5_0,p5_1,p5_2,p5_3,p5_4,p6_3,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x862
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_238(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x863: Boolean = p11_3 eq null
          val x865: Object = if (x863) {          val x864: Object = throw new NullPointerException()
x864} else {p11_3}
          val x866: Unit = block_242(null,null,null,null,p11_3,p11_0,p11_1,p11_2,p11_3,p11_4,null,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x866
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_239(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x867: Unit = block_243(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x867
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_240(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x868: Object = new Array[char](p11_4)
          val x869: Boolean = p11_3 eq null
          val x871: Object = if (x869) {          val x870: Object = throw new NullPointerException()
x870} else {p11_3}
          val x872: Unit = unsafe.putObject(x871,24, x868)
          val x873: Unit = block_244(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x873
}
// *** begin block 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_241(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Object,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x874: Unit = block_245(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_3,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x874
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_242(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x875: Unit = block_246(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x875
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_243(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x876: Object = new Array[char](p11_4)
          val x877: Boolean = p11_3 eq null
          val x879: Object = if (x877) {          val x878: Object = throw new NullPointerException()
x878} else {p11_3}
          val x880: Unit = unsafe.putObject(x879,24, x876)
          val x881: Unit = block_247(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x881
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_244(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x882: Unit = block_248(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x882
}
// *** begin block 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_245(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x883: Boolean = p4_6 eq null
          val x885: Object = if (x883) {          val x884: Object = throw new NullPointerException()
x884} else {p4_6}
          val x886: Unit = block_249(null,null,null,null,p4_6,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,null,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x886
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_246(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x887: Object = new Array[char](p11_4)
          val x888: Boolean = p11_3 eq null
          val x890: Object = if (x888) {          val x889: Object = throw new NullPointerException()
x889} else {p11_3}
          val x891: Unit = unsafe.putObject(x890,24, x887)
          val x892: Unit = block_250(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x892
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_247(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x893: Unit = block_251(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x893
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_248(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x894: Boolean = p9_6 eq null
          val x896: Object = if (x894) {          val x895: Object = throw new NullPointerException()
x895} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x897: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x897
}
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_249(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x898: Boolean = p5_3 eq null
          val x900: Object = if (x898) {          val x899: Object = throw new NullPointerException()
x899} else {p5_3}
          val x901: Unit = block_252(null,null,null,null,p5_3,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x901
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_250(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Any,p10_5:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x902: Unit = block_253(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p9_7,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p5_0,p5_1,p5_2,p5_3,p5_4,p5_5,p5_6,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x902
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_251(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x903: Boolean = p9_6 eq null
          val x905: Object = if (x903) {          val x904: Object = throw new NullPointerException()
x904} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x906: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x906
}
// *** begin block 0:<StringBuilder.underlying>()Ljava/lang/StringBuilder; // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_252(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x907: Boolean = p6_3 eq null
          val x909: Object = if (x907) {          val x908: Object = throw new NullPointerException()
x908} else {p6_3}
          val x910: Object = unsafe.getObject(x909,16)
          val x911: Unit = block_254(r,p5_0,p5_1,p5_2,p5_3,x910,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x911
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 11:<StringBuilder.append>(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder; // 22:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_253(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Object,p9_7:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Object,p8_7:Int,p8_8:Object,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Any,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p5_5:Any,p5_6:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x912: Boolean = p9_6 eq null
          val x914: Object = if (x912) {          val x913: Object = throw new NullPointerException()
x913} else {p9_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x915: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x915
}
// *** begin block 4:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_254(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x916: Boolean = p5_4 eq null
          val x918: Object = if (x916) {          val x917: Object = throw new NullPointerException()
x917} else {p5_4}
          val x919: Unit = block_255(null,null,null,null,p5_4,null,null,null,null,null,p5_0,p5_1,p5_2,p5_3,null,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x919
}
// *** begin block 0:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_255(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Any,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x920: Object = unsafe.allocateInstance(classOf[java.lang.String])
          val x921: Boolean = p6_3 eq null
          val x923: Object = if (x921) {          val x922: Object = throw new NullPointerException()
x922} else {p6_3}
          val x924: Object = unsafe.getObject(x923,24)
          val x925: Boolean = p6_3 eq null
          val x927: Object = if (x925) {          val x926: Object = throw new NullPointerException()
x926} else {p6_3}
          val x928: Int = unsafe.getInt(x927,16)
          val x929: Boolean = x920 eq null
          val x931: Object = if (x929) {          val x930: Object = throw new NullPointerException()
x930} else {x920}
          val x932: Unit = block_256(null,null,null,null,x920,x924,0,x928,null,null,null,null,null,p6_0,p6_1,p6_2,p6_3,x920,null,null,null,null,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x932
}
// *** begin block 0:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_256(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x933: Boolean = p7_3 eq null
          val x935: Object = if (x933) {          val x934: Object = throw new NullPointerException()
x934} else {p7_3}
          val x936: Unit = block_257(null,null,null,null,p7_3,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x936
}
// *** begin block 0:<Object.<init>>()V // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_257(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x937: Unit = block_258(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x937
}
// *** begin block 4:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_258(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x938: Boolean = p7_3 eq null
          val x940: Object = if (x938) {          val x939: Object = throw new NullPointerException()
x939} else {p7_3}
          val x941: Unit = unsafe.putInt(x940,28, 0)
          val x942: Boolean = p7_5 >= 0
          val x945: Unit = if (x942) {          val x943: Unit = block_259(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x943} else {          val x944: Unit = block_260(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x944}
x945
}
// *** begin block 22:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_259(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x946: Boolean = p7_6 >= 0
          val x949: Unit = if (x946) {          val x947: Unit = block_261(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x947} else {          val x948: Unit = block_262(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 26:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x948}
x949
}
// *** begin block 13:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_260(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x950: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x951: Boolean = x950 eq null
          val x953: Object = if (x951) {          val x952: Object = throw new NullPointerException()
x952} else {x950}
          val x954: Unit = block_263(null,null,null,null,x950,p7_5,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x950,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x954
}
// *** begin block 35:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_261(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x955: Boolean = p7_4 eq null
          val x957: Object = if (x955) {          val x956: Object = throw new NullPointerException()
x956} else {p7_4}
          val x958: Int = java.lang.reflect.Array.getLength(x957)
          val x959: Int = -p7_6
          val x960: Int = x959 + x958
          val x961: Boolean = x960 >= p7_5
          val x964: Unit = if (x961) {          val x962: Unit = block_264(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x962} else {          val x963: Unit = block_265(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,null,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 43:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x963}
x964
}
// *** begin block 26:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_262(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x965: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x966: Boolean = x965 eq null
          val x968: Object = if (x966) {          val x967: Object = throw new NullPointerException()
x967} else {x965}
          val x969: Unit = block_266(null,null,null,null,x965,p7_6,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x965,null,null,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x969
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_263(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x970: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x971: Boolean = x970 eq null
          val x973: Object = if (x971) {          val x972: Object = throw new NullPointerException()
x972} else {x970}
          val x974: Unit = block_267(null,null,null,null,x970,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x970,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x974
}
// *** begin block 54:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_264(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x975: Int = p7_6 + p7_5
          val x976: Unit = block_268(null,null,null,null,p7_4,p7_5,x975,null,null,null,null,null,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_3,null,null,null,null,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x976
}
// *** begin block 43:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_265(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Any,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x977: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x978: Int = p7_6 + p7_5
          val x979: Boolean = x977 eq null
          val x981: Object = if (x979) {          val x980: Object = throw new NullPointerException()
x980} else {x977}
          val x982: Unit = block_269(null,null,null,null,x977,x978,null,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,x977,null,null,null,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x982
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_266(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x983: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x984: Boolean = x983 eq null
          val x986: Object = if (x984) {          val x985: Object = throw new NullPointerException()
x985} else {x983}
          val x987: Unit = block_270(null,null,null,null,x983,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x983,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x987
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_267(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x988: Boolean = p9_3 eq null
          val x990: Object = if (x988) {          val x989: Object = throw new NullPointerException()
x989} else {p9_3}
          val x991: Unit = block_271(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x991
}
// *** begin block 0:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_268(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Any,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x992: Int = -p8_4
          val x993: Int = x992 + p8_5
          val x994: Boolean = x993 >= 0
          val x997: Unit = if (x994) {          val x995: Unit = block_272(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x993,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x995} else {          val x996: Unit = block_273(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,x993,p8_7,null,null,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x996}
x997
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_269(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Any,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x998: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x999: Boolean = x998 eq null
          val x1001: Object = if (x999) {          val x1000: Object = throw new NullPointerException()
x1000} else {x998}
          val x1002: Unit = block_274(null,null,null,null,x998,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_3,x998,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1002
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_270(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1003: Boolean = p9_3 eq null
          val x1005: Object = if (x1003) {          val x1004: Object = throw new NullPointerException()
x1004} else {p9_3}
          val x1006: Unit = block_275(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1006
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_271(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1007: Boolean = p10_3 eq null
          val x1009: Object = if (x1007) {          val x1008: Object = throw new NullPointerException()
x1008} else {p10_3}
          val x1010: Unit = block_276(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1010
}
// *** begin block 39:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_272(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1011: Object = new Array[char](p8_6)
          val x1012: Boolean = p8_3 eq null
          val x1014: Object = if (x1012) {          val x1013: Object = throw new NullPointerException()
x1013} else {p8_3}
          val x1015: Int = java.lang.reflect.Array.getLength(x1014)
          val x1016: Int = -p8_4
          val x1017: Int = x1016 + x1015
          val x1018: Unit = block_277(null,null,null,null,x1017,p8_6,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,x1011,p8_3,p8_4,x1011,0,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1018
}
// *** begin block 8:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_273(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1019: Object = unsafe.allocateInstance(classOf[java.lang.IllegalArgumentException])
          val x1020: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x1021: Boolean = x1020 eq null
          val x1023: Object = if (x1021) {          val x1022: Object = throw new NullPointerException()
x1022} else {x1020}
          val x1024: Unit = block_278(null,null,null,null,x1020,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,x1019,x1019,x1020,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1024
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_274(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1025: Boolean = p9_3 eq null
          val x1027: Object = if (x1025) {          val x1026: Object = throw new NullPointerException()
x1026} else {p9_3}
          val x1028: Unit = block_279(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1028
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_275(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1029: Boolean = p10_3 eq null
          val x1031: Object = if (x1029) {          val x1030: Object = throw new NullPointerException()
x1030} else {p10_3}
          val x1032: Unit = block_280(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1032
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_276(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1033: Unit = block_281(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1033
}
// *** begin block 0:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_277(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1034: Boolean = p9_4 < p9_3
          val x1037: Unit = if (x1034) {          val x1035: Unit = block_282(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1035} else {          val x1036: Unit = block_283(r,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1036}
x1037
}
// *** begin block 0:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_278(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1038: Boolean = p9_3 eq null
          val x1040: Object = if (x1038) {          val x1039: Object = throw new NullPointerException()
x1039} else {p9_3}
          val x1041: Unit = block_284(null,null,null,null,p9_3,16,null,null,p9_0,p9_1,p9_2,p9_3,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1041
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_279(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1042: Boolean = p10_3 eq null
          val x1044: Object = if (x1042) {          val x1043: Object = throw new NullPointerException()
x1043} else {p10_3}
          val x1045: Unit = block_285(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1045
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_280(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1046: Unit = block_286(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1046
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_281(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1047: Object = new Array[char](p10_4)
          val x1048: Boolean = p10_3 eq null
          val x1050: Object = if (x1048) {          val x1049: Object = throw new NullPointerException()
x1049} else {p10_3}
          val x1051: Unit = unsafe.putObject(x1050,24, x1047)
          val x1052: Unit = block_287(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1052
}
// *** begin block 9:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_282(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1053: Unit = block_288(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p9_4,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1053
}
// *** begin block 5:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_283(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1054: Unit = block_289(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1054
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_284(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1055: Boolean = p10_3 eq null
          val x1057: Object = if (x1055) {          val x1056: Object = throw new NullPointerException()
x1056} else {p10_3}
          val x1058: Unit = block_290(null,null,null,null,p10_3,p10_0,p10_1,p10_2,p10_3,p10_4,null,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1058
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_285(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1059: Unit = block_291(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1059
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_286(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1060: Object = new Array[char](p10_4)
          val x1061: Boolean = p10_3 eq null
          val x1063: Object = if (x1061) {          val x1062: Object = throw new NullPointerException()
x1062} else {p10_3}
          val x1064: Unit = unsafe.putObject(x1063,24, x1060)
          val x1065: Unit = block_292(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1065
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_287(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1066: Unit = block_293(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1066
}
// *** begin block 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_288(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Int,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1067: Unit = java.lang.System.arraycopy(p8_8,p8_9,p8_10,p8_11,p8_12).asInstanceOf[Object]
          val x1068: Unit = block_294(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,null,null,null,null,null,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1068
}
// *** begin block 10:<Math.min>(II)I // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_289(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Int,p9_4:Int,p9_5:Int,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Object,p8_9:Int,p8_10:Object,p8_11:Int,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1069: Unit = block_288(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p9_5,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 57:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1069
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_290(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1070: Unit = block_295(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1070
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_291(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1071: Object = new Array[char](p10_4)
          val x1072: Boolean = p10_3 eq null
          val x1074: Object = if (x1072) {          val x1073: Object = throw new NullPointerException()
x1073} else {p10_3}
          val x1075: Unit = unsafe.putObject(x1074,24, x1071)
          val x1076: Unit = block_296(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1076
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_292(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1077: Unit = block_297(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1077
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_293(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1078: Boolean = p8_6 eq null
          val x1080: Object = if (x1078) {          val x1079: Object = throw new NullPointerException()
x1079} else {p8_6}
          val x1081: Unit = block_298(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1081
}
// *** begin block 60:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_294(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Object,p8_8:Any,p8_9:Any,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1082: Unit = block_299(r,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p8_7,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1082
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_295(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1083: Object = new Array[char](p10_4)
          val x1084: Boolean = p10_3 eq null
          val x1086: Object = if (x1084) {          val x1085: Object = throw new NullPointerException()
x1085} else {p10_3}
          val x1087: Unit = unsafe.putObject(x1086,24, x1083)
          val x1088: Unit = block_300(r,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1088
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_296(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1089: Unit = block_301(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1089
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_297(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1090: Boolean = p8_6 eq null
          val x1092: Object = if (x1090) {          val x1091: Object = throw new NullPointerException()
x1091} else {p8_6}
          val x1093: Unit = block_302(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1093
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_298(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1094: Boolean = p9_3 eq null
          val x1096: Object = if (x1094) {          val x1095: Object = throw new NullPointerException()
x1095} else {p9_3}
          val x1097: Unit = block_303(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1097
}
// *** begin block 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_299(r:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Object,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1098: Boolean = p7_7 eq null
          val x1100: Object = if (x1098) {          val x1099: Object = throw new NullPointerException()
x1099} else {p7_7}
          val x1101: Unit = unsafe.putObject(x1100,16, p7_8)
          val x1102: Unit = block_304(r,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1102
}
// *** begin block 6:<StringBuilder.<init>>()V // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_300(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Any,p9_5:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1103: Unit = block_305(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1103
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_301(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1104: Boolean = p8_6 eq null
          val x1106: Object = if (x1104) {          val x1105: Object = throw new NullPointerException()
x1105} else {p8_6}
          val x1107: Unit = block_306(null,null,null,null,p8_6,"String index out of range: ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1107
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_302(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1108: Boolean = p9_3 eq null
          val x1110: Object = if (x1108) {          val x1109: Object = throw new NullPointerException()
x1109} else {p9_3}
          val x1111: Unit = block_307(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1111
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_303(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1114: Unit = if (true) {          val x1112: Unit = block_308(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1112} else {          val x1113: Unit = block_309(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1113}
x1114
}
// *** begin block 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_304(r:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1115: Unit = block_310(r,p5_0,p5_1,p5_2,p5_3,p6_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1115
}
// *** begin block 19:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_305(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1116: Boolean = p8_10 eq null
          val x1118: Object = if (x1116) {          val x1117: Object = throw new NullPointerException()
x1117} else {p8_10}
          val x1119: Unit = block_311(null,null,null,null,p8_10,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1119
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_306(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1120: Boolean = p9_3 eq null
          val x1122: Object = if (x1120) {          val x1121: Object = throw new NullPointerException()
x1121} else {p9_3}
          val x1123: Unit = block_312(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1123
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_307(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1126: Unit = if (true) {          val x1124: Unit = block_313(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1124} else {          val x1125: Unit = block_314(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1125}
x1126
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_308(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1127: Boolean = p10_4 eq null
          val x1129: Object = if (x1127) {          val x1128: Object = throw new NullPointerException()
x1128} else {p10_4}
          val x1130: Unit = block_315(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1130
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_309(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1131: Boolean = "null" eq null
          val x1133: Object = if (x1131) {          val x1132: Object = throw new NullPointerException()
x1132} else {"null"}
          val x1134: Unit = block_315(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1134
}
// *** begin block 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_310(r:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Object,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1135: Unit = block_316(r,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p5_4,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1135
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_311(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1136: Boolean = p9_3 eq null
          val x1138: Object = if (x1136) {          val x1137: Object = throw new NullPointerException()
x1137} else {p9_3}
          val x1139: Unit = block_317(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1139
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_312(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1142: Unit = if (true) {          val x1140: Unit = block_318(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1140} else {          val x1141: Unit = block_319(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1141}
x1142
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_313(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1143: Boolean = p10_4 eq null
          val x1145: Object = if (x1143) {          val x1144: Object = throw new NullPointerException()
x1144} else {p10_4}
          val x1146: Unit = block_320(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1146
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_314(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1147: Boolean = "null" eq null
          val x1149: Object = if (x1147) {          val x1148: Object = throw new NullPointerException()
x1148} else {"null"}
          val x1150: Unit = block_320(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1150
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_315(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1151: Boolean = p11_3 eq null
          val x1153: Object = if (x1151) {          val x1152: Object = throw new NullPointerException()
x1152} else {p11_3}
          val x1154: Object = unsafe.getObject(x1153,16)
          val x1155: Boolean = x1154 eq null
          val x1157: Object = if (x1155) {          val x1156: Object = throw new NullPointerException()
x1156} else {x1154}
          val x1158: Int = java.lang.reflect.Array.getLength(x1157)
          val x1159: Unit = block_321(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1158,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1159
}
// *** begin block 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_316(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Object,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1160: Boolean = p4_5 eq null
          val x1162: Object = if (x1160) {          val x1161: Object = throw new NullPointerException()
x1161} else {p4_5}
          val x1163: Unit = CONST_7.invoke(p4_5.asInstanceOf[AnyRef],p4_6.asInstanceOf[AnyRef]) // java.io.PrintStream.println
          val x1164: Unit = block_322(r,p4_0,p4_1,p4_2,p4_3,p4_4,null,null,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1164
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_317(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1165: Boolean = -2147483648 != p10_4
          val x1168: Unit = if (x1165) {          val x1166: Unit = block_323(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1166} else {          val x1167: Unit = block_324(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1167}
x1168
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_318(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1169: Boolean = p10_4 eq null
          val x1171: Object = if (x1169) {          val x1170: Object = throw new NullPointerException()
x1170} else {p10_4}
          val x1172: Unit = block_325(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1172
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_319(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1173: Boolean = "null" eq null
          val x1175: Object = if (x1173) {          val x1174: Object = throw new NullPointerException()
x1174} else {"null"}
          val x1176: Unit = block_325(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1176
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_320(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1177: Boolean = p11_3 eq null
          val x1179: Object = if (x1177) {          val x1178: Object = throw new NullPointerException()
x1178} else {p11_3}
          val x1180: Object = unsafe.getObject(x1179,16)
          val x1181: Boolean = x1180 eq null
          val x1183: Object = if (x1181) {          val x1182: Object = throw new NullPointerException()
x1182} else {x1180}
          val x1184: Int = java.lang.reflect.Array.getLength(x1183)
          val x1185: Unit = block_326(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1184,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1185
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_321(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1186: Boolean = p10_3 eq null
          val x1188: Object = if (x1186) {          val x1187: Object = throw new NullPointerException()
x1187} else {p10_3}
          val x1189: Int = unsafe.getInt(x1188,16)
          val x1190: Int = p10_6 + x1189
          val x1191: Boolean = p10_3 eq null
          val x1193: Object = if (x1191) {          val x1192: Object = throw new NullPointerException()
x1192} else {p10_3}
          val x1194: Unit = block_327(null,null,null,null,p10_3,x1190,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1194
}
// *** begin block 28:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_322(r:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Any,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1195: Unit = block_328(r,p3_0,p3_1,p3_2,p3_3,p3_4,9,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1195
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_323(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1196: Boolean = p10_4 >= 0
          val x1199: Unit = if (x1196) {          val x1197: Unit = block_329(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1197} else {          val x1198: Unit = block_330(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1198}
x1199
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_324(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1200: Boolean = p10_3 eq null
          val x1202: Object = if (x1200) {          val x1201: Object = throw new NullPointerException()
x1201} else {p10_3}
          val x1203: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x1204: Unit = block_331(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1203,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1204
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_325(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1205: Boolean = p11_3 eq null
          val x1207: Object = if (x1205) {          val x1206: Object = throw new NullPointerException()
x1206} else {p11_3}
          val x1208: Object = unsafe.getObject(x1207,16)
          val x1209: Boolean = x1208 eq null
          val x1211: Object = if (x1209) {          val x1210: Object = throw new NullPointerException()
x1210} else {x1208}
          val x1212: Int = java.lang.reflect.Array.getLength(x1211)
          val x1213: Unit = block_332(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1212,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1213
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_326(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1214: Boolean = p10_3 eq null
          val x1216: Object = if (x1214) {          val x1215: Object = throw new NullPointerException()
x1215} else {p10_3}
          val x1217: Int = unsafe.getInt(x1216,16)
          val x1218: Int = p10_6 + x1217
          val x1219: Boolean = p10_3 eq null
          val x1221: Object = if (x1219) {          val x1220: Object = throw new NullPointerException()
x1220} else {p10_3}
          val x1222: Unit = block_333(null,null,null,null,p10_3,x1218,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1222
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_327(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1223: Boolean = p11_3 eq null
          val x1225: Object = if (x1223) {          val x1224: Object = throw new NullPointerException()
x1224} else {p11_3}
          val x1226: Object = unsafe.getObject(x1225,24)
          val x1227: Boolean = x1226 eq null
          val x1229: Object = if (x1227) {          val x1228: Object = throw new NullPointerException()
x1228} else {x1226}
          val x1230: Int = java.lang.reflect.Array.getLength(x1229)
          val x1231: Int = -x1230
          val x1232: Int = x1231 + p11_4
          val x1233: Boolean = x1232 <= 0
          val x1236: Unit = if (x1233) {          val x1234: Unit = block_334(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1234} else {          val x1235: Unit = block_335(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1235}
x1236
}
// *** begin block 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_328(r:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Int,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1237: Unit = block_336(r,p2_0,p2_1,p2_2,p2_3,p2_4,p3_5,p2_6) // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1237
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_329(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1238: Unit = block_337(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1238
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_330(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1239: Int = -p10_4
          val x1240: Unit = block_338(null,null,null,null,x1239,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1240
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_331(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1241: Unit = block_339(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1241
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_332(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1242: Boolean = p10_3 eq null
          val x1244: Object = if (x1242) {          val x1243: Object = throw new NullPointerException()
x1243} else {p10_3}
          val x1245: Int = unsafe.getInt(x1244,16)
          val x1246: Int = p10_6 + x1245
          val x1247: Boolean = p10_3 eq null
          val x1249: Object = if (x1247) {          val x1248: Object = throw new NullPointerException()
x1248} else {p10_3}
          val x1250: Unit = block_340(null,null,null,null,p10_3,x1246,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1250
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_333(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1251: Boolean = p11_3 eq null
          val x1253: Object = if (x1251) {          val x1252: Object = throw new NullPointerException()
x1252} else {p11_3}
          val x1254: Object = unsafe.getObject(x1253,24)
          val x1255: Boolean = x1254 eq null
          val x1257: Object = if (x1255) {          val x1256: Object = throw new NullPointerException()
x1256} else {x1254}
          val x1258: Int = java.lang.reflect.Array.getLength(x1257)
          val x1259: Int = -x1258
          val x1260: Int = x1259 + p11_4
          val x1261: Boolean = x1260 <= 0
          val x1264: Unit = if (x1261) {          val x1262: Unit = block_341(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1262} else {          val x1263: Unit = block_342(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1263}
x1264
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_334(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1265: Unit = block_343(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1265
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_335(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1266: Boolean = p11_3 eq null
          val x1268: Object = if (x1266) {          val x1267: Object = throw new NullPointerException()
x1267} else {p11_3}
          val x1269: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1270: Unit = block_334(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1270
}
// *** begin block 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_336(r:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Int,p2_6:Any): Any = {
          val x1271: Unit = (RES = p2_5) // return to root
x1271
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_337(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1272: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1273: Long = 0.toLong
          val x1274: Boolean = x1272 eq null
          val x1276: Object = if (x1274) {          val x1275: Object = throw new NullPointerException()
x1275} else {x1272}
          val x1277: java.lang.Class[Object] = x1272.getClass.asInstanceOf[Class[Object]]
          val x1278: Boolean = x1277.isArray
          val x1279: Boolean = if (x1278) {false} else {true}
          val x1282: Unit = if (x1279) {          val x1280: java.lang.String = x1277.getName
          val x1281: Unit = throw new ArrayStoreException(x1280)
x1281} else {()}
          val x1283: Boolean = x1273 < 0
          val x1287: Boolean = if (x1283) {x1283} else {          val x1284: Int = java.lang.reflect.Array.getLength(x1272)
          val x1285: Long = x1284.toLong
          val x1286: Boolean = x1273 >= x1285
x1286}
          val x1290: Unit = if (x1287) {          val x1288: Int = x1273.toInt
          val x1289: Unit = throw new ArrayIndexOutOfBoundsException(x1288)
x1289} else {()}
          val x1291: Long = 4 * x1273
          val x1292: Long = 24 + x1291
          val x1293: Int = unsafe.getInt(x1272,x1292)
          val x1294: Boolean = x1293 < p11_3
          val x1297: Unit = if (x1294) {          val x1295: Unit = block_344(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1295} else {          val x1296: Unit = block_345(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1296}
x1297
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_338(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1298: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1299: Long = 0.toLong
          val x1300: Boolean = x1298 eq null
          val x1302: Object = if (x1300) {          val x1301: Object = throw new NullPointerException()
x1301} else {x1298}
          val x1303: java.lang.Class[Object] = x1298.getClass.asInstanceOf[Class[Object]]
          val x1304: Boolean = x1303.isArray
          val x1305: Boolean = if (x1304) {false} else {true}
          val x1308: Unit = if (x1305) {          val x1306: java.lang.String = x1303.getName
          val x1307: Unit = throw new ArrayStoreException(x1306)
x1307} else {()}
          val x1309: Boolean = x1299 < 0
          val x1313: Boolean = if (x1309) {x1309} else {          val x1310: Int = java.lang.reflect.Array.getLength(x1298)
          val x1311: Long = x1310.toLong
          val x1312: Boolean = x1299 >= x1311
x1312}
          val x1316: Unit = if (x1313) {          val x1314: Int = x1299.toInt
          val x1315: Unit = throw new ArrayIndexOutOfBoundsException(x1314)
x1315} else {()}
          val x1317: Long = 4 * x1299
          val x1318: Long = 24 + x1317
          val x1319: Int = unsafe.getInt(x1298,x1318)
          val x1320: Boolean = x1319 < p11_3
          val x1323: Unit = if (x1320) {          val x1321: Unit = block_346(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1321} else {          val x1322: Unit = block_347(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1322}
x1323
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_339(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1324: Unit = block_348(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1324
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_340(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1325: Boolean = p11_3 eq null
          val x1327: Object = if (x1325) {          val x1326: Object = throw new NullPointerException()
x1326} else {p11_3}
          val x1328: Object = unsafe.getObject(x1327,24)
          val x1329: Boolean = x1328 eq null
          val x1331: Object = if (x1329) {          val x1330: Object = throw new NullPointerException()
x1330} else {x1328}
          val x1332: Int = java.lang.reflect.Array.getLength(x1331)
          val x1333: Int = -x1332
          val x1334: Int = x1333 + p11_4
          val x1335: Boolean = x1334 <= 0
          val x1338: Unit = if (x1335) {          val x1336: Unit = block_349(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1336} else {          val x1337: Unit = block_350(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1337}
x1338
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_341(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1339: Unit = block_351(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1339
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_342(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1340: Boolean = p11_3 eq null
          val x1342: Object = if (x1340) {          val x1341: Object = throw new NullPointerException()
x1341} else {p11_3}
          val x1343: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1344: Unit = block_341(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1344
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_343(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1345: Boolean = p10_3 eq null
          val x1347: Object = if (x1345) {          val x1346: Object = throw new NullPointerException()
x1346} else {p10_3}
          val x1348: Object = unsafe.getObject(x1347,24)
          val x1349: Boolean = p10_3 eq null
          val x1351: Object = if (x1349) {          val x1350: Object = throw new NullPointerException()
x1350} else {p10_3}
          val x1352: Int = unsafe.getInt(x1351,16)
          val x1353: Boolean = p10_4 eq null
          val x1355: Object = if (x1353) {          val x1354: Object = throw new NullPointerException()
x1354} else {p10_4}
          val x1356: Unit = block_352(null,null,null,null,p10_4,0,p10_5,x1348,x1352,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1356
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_344(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1357: Int = p11_4 + 1
          val x1358: Unit = block_353(r,p11_0,p11_1,p11_2,p11_3,x1357,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1358
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_345(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1359: Int = 1 + p11_4
          val x1360: Unit = block_354(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1359,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1360
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_346(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1361: Int = p11_4 + 1
          val x1362: Unit = block_355(r,p11_0,p11_1,p11_2,p11_3,x1361,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1362
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_347(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1363: Int = 1 + p11_4
          val x1364: Unit = block_356(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1363,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1364
}
// *** begin block 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_348(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1365: Boolean = p8_10 eq null
          val x1367: Object = if (x1365) {          val x1366: Object = throw new NullPointerException()
x1366} else {p8_10}
          val x1368: Unit = block_357(null,null,null,null,p8_10," > ",null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1368
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_349(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1369: Unit = block_358(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1369
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_350(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1370: Boolean = p11_3 eq null
          val x1372: Object = if (x1370) {          val x1371: Object = throw new NullPointerException()
x1371} else {p11_3}
          val x1373: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1374: Unit = block_349(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1374
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_351(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1375: Boolean = p10_3 eq null
          val x1377: Object = if (x1375) {          val x1376: Object = throw new NullPointerException()
x1376} else {p10_3}
          val x1378: Object = unsafe.getObject(x1377,24)
          val x1379: Boolean = p10_3 eq null
          val x1381: Object = if (x1379) {          val x1380: Object = throw new NullPointerException()
x1380} else {p10_3}
          val x1382: Int = unsafe.getInt(x1381,16)
          val x1383: Boolean = p10_4 eq null
          val x1385: Object = if (x1383) {          val x1384: Object = throw new NullPointerException()
x1384} else {p10_4}
          val x1386: Unit = block_359(null,null,null,null,p10_4,0,p10_5,x1378,x1382,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1386
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_352(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1387: Boolean = p11_4 >= 0
          val x1390: Unit = if (x1387) {          val x1388: Unit = block_360(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1388} else {          val x1389: Unit = block_361(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1389}
x1390
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_353(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1391: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1392: Long = p11_4.toLong
          val x1393: Boolean = x1391 eq null
          val x1395: Object = if (x1393) {          val x1394: Object = throw new NullPointerException()
x1394} else {x1391}
          val x1396: java.lang.Class[Object] = x1391.getClass.asInstanceOf[Class[Object]]
          val x1397: Boolean = x1396.isArray
          val x1398: Boolean = if (x1397) {false} else {true}
          val x1401: Unit = if (x1398) {          val x1399: java.lang.String = x1396.getName
          val x1400: Unit = throw new ArrayStoreException(x1399)
x1400} else {()}
          val x1402: Boolean = x1392 < 0
          val x1406: Boolean = if (x1402) {x1402} else {          val x1403: Int = java.lang.reflect.Array.getLength(x1391)
          val x1404: Long = x1403.toLong
          val x1405: Boolean = x1392 >= x1404
x1405}
          val x1409: Unit = if (x1406) {          val x1407: Int = x1392.toInt
          val x1408: Unit = throw new ArrayIndexOutOfBoundsException(x1407)
x1408} else {()}
          val x1410: Long = 4 * x1392
          val x1411: Long = 24 + x1410
          val x1412: Int = unsafe.getInt(x1391,x1411)
          val x1413: Boolean = x1412 < p11_3
          val x1416: Unit = if (x1413) {          val x1414: Unit = block_344(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1414} else {          val x1415: Unit = block_345(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1415}
x1416
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_354(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1417: Boolean = p10_3 eq null
          val x1419: Object = if (x1417) {          val x1418: Object = throw new NullPointerException()
x1418} else {p10_3}
          val x1420: Int = unsafe.getInt(x1419,16)
          val x1421: Int = p10_7 + x1420
          val x1422: Boolean = p10_3 eq null
          val x1424: Object = if (x1422) {          val x1423: Object = throw new NullPointerException()
x1423} else {p10_3}
          val x1425: Unit = block_362(null,null,null,null,p10_3,x1421,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x1421,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1425
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_355(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1426: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x1427: Long = p11_4.toLong
          val x1428: Boolean = x1426 eq null
          val x1430: Object = if (x1428) {          val x1429: Object = throw new NullPointerException()
x1429} else {x1426}
          val x1431: java.lang.Class[Object] = x1426.getClass.asInstanceOf[Class[Object]]
          val x1432: Boolean = x1431.isArray
          val x1433: Boolean = if (x1432) {false} else {true}
          val x1436: Unit = if (x1433) {          val x1434: java.lang.String = x1431.getName
          val x1435: Unit = throw new ArrayStoreException(x1434)
x1435} else {()}
          val x1437: Boolean = x1427 < 0
          val x1441: Boolean = if (x1437) {x1437} else {          val x1438: Int = java.lang.reflect.Array.getLength(x1426)
          val x1439: Long = x1438.toLong
          val x1440: Boolean = x1427 >= x1439
x1440}
          val x1444: Unit = if (x1441) {          val x1442: Int = x1427.toInt
          val x1443: Unit = throw new ArrayIndexOutOfBoundsException(x1442)
x1443} else {()}
          val x1445: Long = 4 * x1427
          val x1446: Long = 24 + x1445
          val x1447: Int = unsafe.getInt(x1426,x1446)
          val x1448: Boolean = x1447 < p11_3
          val x1451: Unit = if (x1448) {          val x1449: Unit = block_346(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1449} else {          val x1450: Unit = block_347(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1450}
x1451
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_356(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1452: Int = 1 + p10_7
          val x1453: Unit = block_354(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x1452,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1453
}
// *** begin block 0:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_357(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1454: Boolean = p9_3 eq null
          val x1456: Object = if (x1454) {          val x1455: Object = throw new NullPointerException()
x1455} else {p9_3}
          val x1457: Unit = block_363(null,null,null,null,p9_3,p9_4,null,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1457
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_358(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1458: Boolean = p10_3 eq null
          val x1460: Object = if (x1458) {          val x1459: Object = throw new NullPointerException()
x1459} else {p10_3}
          val x1461: Object = unsafe.getObject(x1460,24)
          val x1462: Boolean = p10_3 eq null
          val x1464: Object = if (x1462) {          val x1463: Object = throw new NullPointerException()
x1463} else {p10_3}
          val x1465: Int = unsafe.getInt(x1464,16)
          val x1466: Boolean = p10_4 eq null
          val x1468: Object = if (x1466) {          val x1467: Object = throw new NullPointerException()
x1467} else {p10_4}
          val x1469: Unit = block_364(null,null,null,null,p10_4,0,p10_5,x1461,x1465,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1469
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_359(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1470: Boolean = p11_4 >= 0
          val x1473: Unit = if (x1470) {          val x1471: Unit = block_365(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1471} else {          val x1472: Unit = block_366(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1472}
x1473
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_360(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1474: Boolean = p11_3 eq null
          val x1476: Object = if (x1474) {          val x1475: Object = throw new NullPointerException()
x1475} else {p11_3}
          val x1477: Object = unsafe.getObject(x1476,16)
          val x1478: Boolean = x1477 eq null
          val x1480: Object = if (x1478) {          val x1479: Object = throw new NullPointerException()
x1479} else {x1477}
          val x1481: Int = java.lang.reflect.Array.getLength(x1480)
          val x1482: Boolean = x1481 >= p11_5
          val x1485: Unit = if (x1482) {          val x1483: Unit = block_367(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1483} else {          val x1484: Unit = block_368(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1484}
x1485
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_361(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1486: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1487: Boolean = x1486 eq null
          val x1489: Object = if (x1487) {          val x1488: Object = throw new NullPointerException()
x1488} else {x1486}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1490: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1490
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_362(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1491: Boolean = p11_3 eq null
          val x1493: Object = if (x1491) {          val x1492: Object = throw new NullPointerException()
x1492} else {p11_3}
          val x1494: Object = unsafe.getObject(x1493,24)
          val x1495: Boolean = x1494 eq null
          val x1497: Object = if (x1495) {          val x1496: Object = throw new NullPointerException()
x1496} else {x1494}
          val x1498: Int = java.lang.reflect.Array.getLength(x1497)
          val x1499: Int = -x1498
          val x1500: Int = x1499 + p11_4
          val x1501: Boolean = x1500 <= 0
          val x1504: Unit = if (x1501) {          val x1502: Unit = block_369(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1502} else {          val x1503: Unit = block_370(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1503}
x1504
}
// *** begin block 0:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_363(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1507: Unit = if (true) {          val x1505: Unit = block_371(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1505} else {          val x1506: Unit = block_372(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1506}
x1507
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_364(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1508: Boolean = p11_4 >= 0
          val x1511: Unit = if (x1508) {          val x1509: Unit = block_373(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1509} else {          val x1510: Unit = block_374(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1510}
x1511
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_365(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1512: Boolean = p11_3 eq null
          val x1514: Object = if (x1512) {          val x1513: Object = throw new NullPointerException()
x1513} else {p11_3}
          val x1515: Object = unsafe.getObject(x1514,16)
          val x1516: Boolean = x1515 eq null
          val x1518: Object = if (x1516) {          val x1517: Object = throw new NullPointerException()
x1517} else {x1515}
          val x1519: Int = java.lang.reflect.Array.getLength(x1518)
          val x1520: Boolean = x1519 >= p11_5
          val x1523: Unit = if (x1520) {          val x1521: Unit = block_375(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1521} else {          val x1522: Unit = block_376(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1522}
x1523
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_366(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1524: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1525: Boolean = x1524 eq null
          val x1527: Object = if (x1525) {          val x1526: Object = throw new NullPointerException()
x1526} else {x1524}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1528: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1528
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_367(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1529: Boolean = p11_5 >= p11_4
          val x1532: Unit = if (x1529) {          val x1530: Unit = block_377(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1530} else {          val x1531: Unit = block_378(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1531}
x1532
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_368(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1533: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1534: Boolean = x1533 eq null
          val x1536: Object = if (x1534) {          val x1535: Object = throw new NullPointerException()
x1535} else {x1533}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1537: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1537
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_369(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1538: Unit = block_379(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1538
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_370(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1539: Boolean = p11_3 eq null
          val x1541: Object = if (x1539) {          val x1540: Object = throw new NullPointerException()
x1540} else {p11_3}
          val x1542: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1543: Unit = block_369(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1543
}
// *** begin block 7:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_371(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1544: Boolean = p10_4 eq null
          val x1546: Object = if (x1544) {          val x1545: Object = throw new NullPointerException()
x1545} else {p10_4}
          val x1547: Unit = block_380(null,null,null,null,p10_4,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1547
}
// *** begin block 4:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_372(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1548: Boolean = "null" eq null
          val x1550: Object = if (x1548) {          val x1549: Object = throw new NullPointerException()
x1549} else {"null"}
          val x1551: Unit = block_380(null,null,null,null,"null",null,p10_0,p10_1,p10_2,p10_3,"null",p10_5,null,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1551
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_373(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1552: Boolean = p11_3 eq null
          val x1554: Object = if (x1552) {          val x1553: Object = throw new NullPointerException()
x1553} else {p11_3}
          val x1555: Object = unsafe.getObject(x1554,16)
          val x1556: Boolean = x1555 eq null
          val x1558: Object = if (x1556) {          val x1557: Object = throw new NullPointerException()
x1557} else {x1555}
          val x1559: Int = java.lang.reflect.Array.getLength(x1558)
          val x1560: Boolean = x1559 >= p11_5
          val x1563: Unit = if (x1560) {          val x1561: Unit = block_381(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1561} else {          val x1562: Unit = block_382(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1562}
x1563
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_374(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1564: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1565: Boolean = x1564 eq null
          val x1567: Object = if (x1565) {          val x1566: Object = throw new NullPointerException()
x1566} else {x1564}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1568: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1568
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_375(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1569: Boolean = p11_5 >= p11_4
          val x1572: Unit = if (x1569) {          val x1570: Unit = block_383(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1570} else {          val x1571: Unit = block_384(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1571}
x1572
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_376(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1573: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1574: Boolean = x1573 eq null
          val x1576: Object = if (x1574) {          val x1575: Object = throw new NullPointerException()
x1575} else {x1573}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1577: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1577
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_377(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1578: Boolean = p11_3 eq null
          val x1580: Object = if (x1578) {          val x1579: Object = throw new NullPointerException()
x1579} else {p11_3}
          val x1581: Object = unsafe.getObject(x1580,16)
          val x1582: Int = -p11_4
          val x1583: Int = x1582 + p11_5
          val x1584: Unit = java.lang.System.arraycopy(x1581,p11_4,p11_6,p11_7,x1583).asInstanceOf[Object]
          val x1585: Unit = block_385(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1585
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_378(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1586: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1587: Int = -p11_4
          val x1588: Int = x1587 + p11_5
          val x1589: Boolean = x1586 eq null
          val x1591: Object = if (x1589) {          val x1590: Object = throw new NullPointerException()
x1590} else {x1586}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1592: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1592
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_379(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1593: Boolean = p10_3 eq null
          val x1595: Object = if (x1593) {          val x1594: Object = throw new NullPointerException()
x1594} else {p10_3}
          val x1596: Object = unsafe.getObject(x1595,24)
          val x1597: Unit = block_386(null,null,null,null,p10_4,p10_6,x1596,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1597
}
// *** begin block 0:<String.length>()I // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_380(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1598: Boolean = p11_3 eq null
          val x1600: Object = if (x1598) {          val x1599: Object = throw new NullPointerException()
x1599} else {p11_3}
          val x1601: Object = unsafe.getObject(x1600,16)
          val x1602: Boolean = x1601 eq null
          val x1604: Object = if (x1602) {          val x1603: Object = throw new NullPointerException()
x1603} else {x1601}
          val x1605: Int = java.lang.reflect.Array.getLength(x1604)
          val x1606: Unit = block_387(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,x1605,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1606
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_381(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1607: Boolean = p11_5 >= p11_4
          val x1610: Unit = if (x1607) {          val x1608: Unit = block_388(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1608} else {          val x1609: Unit = block_389(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1609}
x1610
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_382(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1611: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1612: Boolean = x1611 eq null
          val x1614: Object = if (x1612) {          val x1613: Object = throw new NullPointerException()
x1613} else {x1611}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1615: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1615
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_383(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1616: Boolean = p11_3 eq null
          val x1618: Object = if (x1616) {          val x1617: Object = throw new NullPointerException()
x1617} else {p11_3}
          val x1619: Object = unsafe.getObject(x1618,16)
          val x1620: Int = -p11_4
          val x1621: Int = x1620 + p11_5
          val x1622: Unit = java.lang.System.arraycopy(x1619,p11_4,p11_6,p11_7,x1621).asInstanceOf[Object]
          val x1623: Unit = block_390(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1623
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_384(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1624: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1625: Int = -p11_4
          val x1626: Int = x1625 + p11_5
          val x1627: Boolean = x1624 eq null
          val x1629: Object = if (x1627) {          val x1628: Object = throw new NullPointerException()
x1628} else {x1624}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1630: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1630
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_385(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1631: Unit = block_391(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1631
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_386(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1632: Boolean = p11_3 >= 0
          val x1635: Unit = if (x1632) {          val x1633: Unit = block_392(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1633} else {          val x1634: Unit = block_393(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1634}
x1635
}
// *** begin block 11:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_387(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Any,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1636: Boolean = p10_3 eq null
          val x1638: Object = if (x1636) {          val x1637: Object = throw new NullPointerException()
x1637} else {p10_3}
          val x1639: Int = unsafe.getInt(x1638,16)
          val x1640: Int = p10_6 + x1639
          val x1641: Boolean = p10_3 eq null
          val x1643: Object = if (x1641) {          val x1642: Object = throw new NullPointerException()
x1642} else {p10_3}
          val x1644: Unit = block_394(null,null,null,null,p10_3,x1640,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_6,null,null,null,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1644
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_388(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1645: Boolean = p11_3 eq null
          val x1647: Object = if (x1645) {          val x1646: Object = throw new NullPointerException()
x1646} else {p11_3}
          val x1648: Object = unsafe.getObject(x1647,16)
          val x1649: Int = -p11_4
          val x1650: Int = x1649 + p11_5
          val x1651: Unit = java.lang.System.arraycopy(x1648,p11_4,p11_6,p11_7,x1650).asInstanceOf[Object]
          val x1652: Unit = block_395(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1652
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_389(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1653: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1654: Int = -p11_4
          val x1655: Int = x1654 + p11_5
          val x1656: Boolean = x1653 eq null
          val x1658: Object = if (x1656) {          val x1657: Object = throw new NullPointerException()
x1657} else {x1653}
// *** RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>> ***
          val x1659: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringIndexOutOfBoundsException.<init>>")
x1659
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_390(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1660: Unit = block_396(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1660
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_391(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1661: Boolean = p10_3 eq null
          val x1663: Object = if (x1661) {          val x1662: Object = throw new NullPointerException()
x1662} else {p10_3}
          val x1664: Int = unsafe.getInt(x1663,16)
          val x1665: Int = p10_5 + x1664
          val x1666: Boolean = p10_3 eq null
          val x1668: Object = if (x1666) {          val x1667: Object = throw new NullPointerException()
x1667} else {p10_3}
          val x1669: Unit = unsafe.putInt(x1668,16, x1665)
          val x1670: Unit = block_397(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1670
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_392(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1671: Boolean = 65536 > p11_3
          val x1674: Unit = if (x1671) {          val x1672: Unit = block_398(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1672} else {          val x1673: Unit = block_399(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1673}
x1674
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_393(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1675: Int = -p11_3
          val x1676: Boolean = 65536 > x1675
          val x1679: Unit = if (x1676) {          val x1677: Unit = block_398(r,p11_0,p11_1,p11_2,x1675,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1677} else {          val x1678: Unit = block_399(r,p11_0,p11_1,p11_2,x1675,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1678}
x1679
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_394(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1680: Boolean = p11_3 eq null
          val x1682: Object = if (x1680) {          val x1681: Object = throw new NullPointerException()
x1681} else {p11_3}
          val x1683: Object = unsafe.getObject(x1682,24)
          val x1684: Boolean = x1683 eq null
          val x1686: Object = if (x1684) {          val x1685: Object = throw new NullPointerException()
x1685} else {x1683}
          val x1687: Int = java.lang.reflect.Array.getLength(x1686)
          val x1688: Int = -x1687
          val x1689: Int = x1688 + p11_4
          val x1690: Boolean = x1689 <= 0
          val x1693: Unit = if (x1690) {          val x1691: Unit = block_400(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1691} else {          val x1692: Unit = block_401(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1692}
x1693
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_395(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1694: Unit = block_402(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1694
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_396(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1695: Boolean = p10_3 eq null
          val x1697: Object = if (x1695) {          val x1696: Object = throw new NullPointerException()
x1696} else {p10_3}
          val x1698: Int = unsafe.getInt(x1697,16)
          val x1699: Int = p10_5 + x1698
          val x1700: Boolean = p10_3 eq null
          val x1702: Object = if (x1700) {          val x1701: Object = throw new NullPointerException()
x1701} else {p10_3}
          val x1703: Unit = unsafe.putInt(x1702,16, x1699)
          val x1704: Unit = block_403(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1704
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_397(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1705: Unit = block_404(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1705
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_398(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1706: Int = 52429 * p11_3
          val x1707: Int = x1706 >>> 19
          val x1708: Int = x1707 << 3
          val x1709: Int = x1707 << 1
          val x1710: Int = x1709 + x1708
          val x1711: Int = -x1710
          val x1712: Int = x1711 + p11_3
          val x1713: Int = p11_8 + -1
          val x1714: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x1715: Long = x1712.toLong
          val x1716: Boolean = x1714 eq null
          val x1718: Object = if (x1716) {          val x1717: Object = throw new NullPointerException()
x1717} else {x1714}
          val x1719: java.lang.Class[Object] = x1714.getClass.asInstanceOf[Class[Object]]
          val x1720: Boolean = x1719.isArray
          val x1721: Boolean = if (x1720) {false} else {true}
          val x1724: Unit = if (x1721) {          val x1722: java.lang.String = x1719.getName
          val x1723: Unit = throw new ArrayStoreException(x1722)
x1723} else {()}
          val x1725: Boolean = x1715 < 0
          val x1729: Boolean = if (x1725) {x1725} else {          val x1726: Int = java.lang.reflect.Array.getLength(x1714)
          val x1727: Long = x1726.toLong
          val x1728: Boolean = x1715 >= x1727
x1728}
          val x1732: Unit = if (x1729) {          val x1730: Int = x1715.toInt
          val x1731: Unit = throw new ArrayIndexOutOfBoundsException(x1730)
x1731} else {()}
          val x1733: Long = 2 * x1715
          val x1734: Long = 24 + x1733
          val x1735: Char = unsafe.getChar(x1714,x1734)
          val x1736: Int = x1735.toInt
          val x1737: Char = x1736.toChar
          val x1738: Long = x1713.toLong
          val x1739: Boolean = p11_5 eq null
          val x1741: Object = if (x1739) {          val x1740: Object = throw new NullPointerException()
x1740} else {p11_5}
          val x1742: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1743: Boolean = x1742.isArray
          val x1744: Boolean = if (x1743) {false} else {true}
          val x1747: Unit = if (x1744) {          val x1745: java.lang.String = x1742.getName
          val x1746: Unit = throw new ArrayStoreException(x1745)
x1746} else {()}
          val x1748: Boolean = x1738 < 0
          val x1752: Boolean = if (x1748) {x1748} else {          val x1749: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1750: Long = x1749.toLong
          val x1751: Boolean = x1738 >= x1750
x1751}
          val x1755: Unit = if (x1752) {          val x1753: Int = x1738.toInt
          val x1754: Unit = throw new ArrayIndexOutOfBoundsException(x1753)
x1754} else {()}
          val x1756: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1757: java.lang.Class[Object] = x1756.getComponentType.asInstanceOf[Class[Object]]
          val x1758: Boolean = x1757.isAssignableFrom(classOf[Char])
          val x1759: Boolean = if (x1758) {false} else {true}
          val x1761: Unit = if (x1759) {          val x1760: Unit = throw new ArrayStoreException("char")
x1760} else {()}
          val x1762: Long = 2 * x1738
          val x1763: Long = 24 + x1762
          val x1764: Unit = unsafe.putChar(p11_5,x1763, x1737)
          val x1765: Boolean = x1707 != 0
          val x1768: Unit = if (x1765) {          val x1766: Unit = block_398(r,p11_0,p11_1,p11_2,x1707,p11_4,p11_5,x1707,x1712,x1713,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1766} else {          val x1767: Unit = block_405(r,p11_0,p11_1,p11_2,x1707,p11_4,p11_5,x1707,x1712,x1713,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1767}
x1768
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_399(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1769: Int = p11_3 / 100
          val x1770: Int = x1769 << 6
          val x1771: Int = x1769 << 5
          val x1772: Int = x1771 + x1770
          val x1773: Int = x1769 << 2
          val x1774: Int = x1773 + x1772
          val x1775: Int = -x1774
          val x1776: Int = x1775 + p11_3
          val x1777: Int = p11_8 + -1
          val x1778: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x1779: Long = x1776.toLong
          val x1780: Boolean = x1778 eq null
          val x1782: Object = if (x1780) {          val x1781: Object = throw new NullPointerException()
x1781} else {x1778}
          val x1783: java.lang.Class[Object] = x1778.getClass.asInstanceOf[Class[Object]]
          val x1784: Boolean = x1783.isArray
          val x1785: Boolean = if (x1784) {false} else {true}
          val x1788: Unit = if (x1785) {          val x1786: java.lang.String = x1783.getName
          val x1787: Unit = throw new ArrayStoreException(x1786)
x1787} else {()}
          val x1789: Boolean = x1779 < 0
          val x1793: Boolean = if (x1789) {x1789} else {          val x1790: Int = java.lang.reflect.Array.getLength(x1778)
          val x1791: Long = x1790.toLong
          val x1792: Boolean = x1779 >= x1791
x1792}
          val x1796: Unit = if (x1793) {          val x1794: Int = x1779.toInt
          val x1795: Unit = throw new ArrayIndexOutOfBoundsException(x1794)
x1795} else {()}
          val x1797: Long = 2 * x1779
          val x1798: Long = 24 + x1797
          val x1799: Char = unsafe.getChar(x1778,x1798)
          val x1800: Int = x1799.toInt
          val x1801: Char = x1800.toChar
          val x1802: Long = x1777.toLong
          val x1803: Boolean = p11_5 eq null
          val x1805: Object = if (x1803) {          val x1804: Object = throw new NullPointerException()
x1804} else {p11_5}
          val x1806: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1807: Boolean = x1806.isArray
          val x1808: Boolean = if (x1807) {false} else {true}
          val x1811: Unit = if (x1808) {          val x1809: java.lang.String = x1806.getName
          val x1810: Unit = throw new ArrayStoreException(x1809)
x1810} else {()}
          val x1812: Boolean = x1802 < 0
          val x1816: Boolean = if (x1812) {x1812} else {          val x1813: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1814: Long = x1813.toLong
          val x1815: Boolean = x1802 >= x1814
x1815}
          val x1819: Unit = if (x1816) {          val x1817: Int = x1802.toInt
          val x1818: Unit = throw new ArrayIndexOutOfBoundsException(x1817)
x1818} else {()}
          val x1820: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1821: java.lang.Class[Object] = x1820.getComponentType.asInstanceOf[Class[Object]]
          val x1822: Boolean = x1821.isAssignableFrom(classOf[Char])
          val x1823: Boolean = if (x1822) {false} else {true}
          val x1825: Unit = if (x1823) {          val x1824: Unit = throw new ArrayStoreException("char")
x1824} else {()}
          val x1826: Long = 2 * x1802
          val x1827: Long = 24 + x1826
          val x1828: Unit = unsafe.putChar(p11_5,x1827, x1801)
          val x1829: Int = x1777 + -1
          val x1830: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x1831: Long = x1776.toLong
          val x1832: Boolean = x1830 eq null
          val x1834: Object = if (x1832) {          val x1833: Object = throw new NullPointerException()
x1833} else {x1830}
          val x1835: java.lang.Class[Object] = x1830.getClass.asInstanceOf[Class[Object]]
          val x1836: Boolean = x1835.isArray
          val x1837: Boolean = if (x1836) {false} else {true}
          val x1840: Unit = if (x1837) {          val x1838: java.lang.String = x1835.getName
          val x1839: Unit = throw new ArrayStoreException(x1838)
x1839} else {()}
          val x1841: Boolean = x1831 < 0
          val x1845: Boolean = if (x1841) {x1841} else {          val x1842: Int = java.lang.reflect.Array.getLength(x1830)
          val x1843: Long = x1842.toLong
          val x1844: Boolean = x1831 >= x1843
x1844}
          val x1848: Unit = if (x1845) {          val x1846: Int = x1831.toInt
          val x1847: Unit = throw new ArrayIndexOutOfBoundsException(x1846)
x1847} else {()}
          val x1849: Long = 2 * x1831
          val x1850: Long = 24 + x1849
          val x1851: Char = unsafe.getChar(x1830,x1850)
          val x1852: Int = x1851.toInt
          val x1853: Char = x1852.toChar
          val x1854: Long = x1829.toLong
          val x1855: Boolean = p11_5 eq null
          val x1857: Object = if (x1855) {          val x1856: Object = throw new NullPointerException()
x1856} else {p11_5}
          val x1858: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1859: Boolean = x1858.isArray
          val x1860: Boolean = if (x1859) {false} else {true}
          val x1863: Unit = if (x1860) {          val x1861: java.lang.String = x1858.getName
          val x1862: Unit = throw new ArrayStoreException(x1861)
x1862} else {()}
          val x1864: Boolean = x1854 < 0
          val x1868: Boolean = if (x1864) {x1864} else {          val x1865: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1866: Long = x1865.toLong
          val x1867: Boolean = x1854 >= x1866
x1867}
          val x1871: Unit = if (x1868) {          val x1869: Int = x1854.toInt
          val x1870: Unit = throw new ArrayIndexOutOfBoundsException(x1869)
x1870} else {()}
          val x1872: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1873: java.lang.Class[Object] = x1872.getComponentType.asInstanceOf[Class[Object]]
          val x1874: Boolean = x1873.isAssignableFrom(classOf[Char])
          val x1875: Boolean = if (x1874) {false} else {true}
          val x1877: Unit = if (x1875) {          val x1876: Unit = throw new ArrayStoreException("char")
x1876} else {()}
          val x1878: Long = 2 * x1854
          val x1879: Long = 24 + x1878
          val x1880: Unit = unsafe.putChar(p11_5,x1879, x1853)
          val x1881: Unit = block_392(r,p11_0,p11_1,p11_2,x1769,p11_4,p11_5,x1769,x1776,x1829,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1881
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_400(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1882: Unit = block_406(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1882
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_401(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1883: Boolean = p11_3 eq null
          val x1885: Object = if (x1883) {          val x1884: Object = throw new NullPointerException()
x1884} else {p11_3}
          val x1886: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x1887: Unit = block_400(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1887
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_402(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1888: Boolean = p10_3 eq null
          val x1890: Object = if (x1888) {          val x1889: Object = throw new NullPointerException()
x1889} else {p10_3}
          val x1891: Int = unsafe.getInt(x1890,16)
          val x1892: Int = p10_5 + x1891
          val x1893: Boolean = p10_3 eq null
          val x1895: Object = if (x1893) {          val x1894: Object = throw new NullPointerException()
x1894} else {p10_3}
          val x1896: Unit = unsafe.putInt(x1895,16, x1892)
          val x1897: Unit = block_407(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1897
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_403(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1898: Unit = block_408(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1898
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_404(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1899: Boolean = p8_6 eq null
          val x1901: Object = if (x1899) {          val x1900: Object = throw new NullPointerException()
x1900} else {p8_6}
          val x1902: Unit = block_409(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1902
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_405(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1903: Unit = block_410(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1903
}
// *** begin block 22:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_406(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1904: Boolean = p10_3 eq null
          val x1906: Object = if (x1904) {          val x1905: Object = throw new NullPointerException()
x1905} else {p10_3}
          val x1907: Object = unsafe.getObject(x1906,24)
          val x1908: Boolean = p10_3 eq null
          val x1910: Object = if (x1908) {          val x1909: Object = throw new NullPointerException()
x1909} else {p10_3}
          val x1911: Int = unsafe.getInt(x1910,16)
          val x1912: Boolean = p10_4 eq null
          val x1914: Object = if (x1912) {          val x1913: Object = throw new NullPointerException()
x1913} else {p10_4}
          val x1915: Unit = block_411(null,null,null,null,p10_4,0,p10_5,x1907,x1911,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1915
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_407(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1916: Unit = block_412(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1916
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_408(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1917: Boolean = p8_6 eq null
          val x1919: Object = if (x1917) {          val x1918: Object = throw new NullPointerException()
x1918} else {p8_6}
          val x1920: Unit = block_413(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1920
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_409(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1921: Boolean = p9_3 eq null
          val x1923: Object = if (x1921) {          val x1922: Object = throw new NullPointerException()
x1922} else {p9_3}
          val x1924: Unit = block_414(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1924
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_410(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1925: Boolean = p11_9 == 0
          val x1928: Unit = if (x1925) {          val x1926: Unit = block_415(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1926} else {          val x1927: Unit = block_416(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1927}
x1928
}
// *** begin block 0:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_411(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1929: Boolean = p11_4 >= 0
          val x1932: Unit = if (x1929) {          val x1930: Unit = block_417(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1930} else {          val x1931: Unit = block_418(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1931}
x1932
}
// *** begin block 13:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_412(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1933: Boolean = p8_6 eq null
          val x1935: Object = if (x1933) {          val x1934: Object = throw new NullPointerException()
x1934} else {p8_6}
          val x1936: Unit = block_419(null,null,null,null,p8_6,p8_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,null,null,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1936
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_413(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1937: Boolean = p9_3 eq null
          val x1939: Object = if (x1937) {          val x1938: Object = throw new NullPointerException()
x1938} else {p9_3}
          val x1940: Unit = block_420(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1940
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_414(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1941: Boolean = -2147483648 != p10_4
          val x1944: Unit = if (x1941) {          val x1942: Unit = block_421(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1942} else {          val x1943: Unit = block_422(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1943}
x1944
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_415(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1945: Unit = block_423(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1945
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_416(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1946: Int = p11_8 + -1
          val x1947: Char = p11_9.toChar
          val x1948: Long = x1946.toLong
          val x1949: Boolean = p11_5 eq null
          val x1951: Object = if (x1949) {          val x1950: Object = throw new NullPointerException()
x1950} else {p11_5}
          val x1952: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1953: Boolean = x1952.isArray
          val x1954: Boolean = if (x1953) {false} else {true}
          val x1957: Unit = if (x1954) {          val x1955: java.lang.String = x1952.getName
          val x1956: Unit = throw new ArrayStoreException(x1955)
x1956} else {()}
          val x1958: Boolean = x1948 < 0
          val x1962: Boolean = if (x1958) {x1958} else {          val x1959: Int = java.lang.reflect.Array.getLength(p11_5)
          val x1960: Long = x1959.toLong
          val x1961: Boolean = x1948 >= x1960
x1961}
          val x1965: Unit = if (x1962) {          val x1963: Int = x1948.toInt
          val x1964: Unit = throw new ArrayIndexOutOfBoundsException(x1963)
x1964} else {()}
          val x1966: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x1967: java.lang.Class[Object] = x1966.getComponentType.asInstanceOf[Class[Object]]
          val x1968: Boolean = x1967.isAssignableFrom(classOf[Char])
          val x1969: Boolean = if (x1968) {false} else {true}
          val x1971: Unit = if (x1969) {          val x1970: Unit = throw new ArrayStoreException("char")
x1970} else {()}
          val x1972: Long = 2 * x1948
          val x1973: Long = 24 + x1972
          val x1974: Unit = unsafe.putChar(p11_5,x1973, x1947)
          val x1975: Unit = block_423(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1975
}
// *** begin block 13:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_417(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1976: Boolean = p11_3 eq null
          val x1978: Object = if (x1976) {          val x1977: Object = throw new NullPointerException()
x1977} else {p11_3}
          val x1979: Object = unsafe.getObject(x1978,16)
          val x1980: Boolean = x1979 eq null
          val x1982: Object = if (x1980) {          val x1981: Object = throw new NullPointerException()
x1981} else {x1979}
          val x1983: Int = java.lang.reflect.Array.getLength(x1982)
          val x1984: Boolean = x1983 >= p11_5
          val x1987: Unit = if (x1984) {          val x1985: Unit = block_424(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1985} else {          val x1986: Unit = block_425(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1986}
x1987
}
// *** begin block 4:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_418(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1988: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x1989: Boolean = x1988 eq null
          val x1991: Object = if (x1989) {          val x1990: Object = throw new NullPointerException()
x1990} else {x1988}
          val x1992: Unit = block_426(null,null,null,null,x1988,p11_4,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x1988,null,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1992
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_419(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1993: Boolean = p9_3 eq null
          val x1995: Object = if (x1993) {          val x1994: Object = throw new NullPointerException()
x1994} else {p9_3}
          val x1996: Unit = block_427(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1996
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_420(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x1997: Boolean = -2147483648 != p10_4
          val x2000: Unit = if (x1997) {          val x1998: Unit = block_428(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1998} else {          val x1999: Unit = block_429(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x1999}
x2000
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_421(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2001: Boolean = p10_4 >= 0
          val x2004: Unit = if (x2001) {          val x2002: Unit = block_430(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2002} else {          val x2003: Unit = block_431(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2003}
x2004
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_422(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2005: Boolean = p10_3 eq null
          val x2007: Object = if (x2005) {          val x2006: Object = throw new NullPointerException()
x2006} else {p10_3}
          val x2008: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2009: Unit = block_432(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2008,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2009
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_423(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2010: Boolean = p10_3 eq null
          val x2012: Object = if (x2010) {          val x2011: Object = throw new NullPointerException()
x2011} else {p10_3}
          val x2013: Unit = unsafe.putInt(x2012,16, p10_6)
          val x2014: Unit = block_339(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 23:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2014
}
// *** begin block 31:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_424(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2015: Boolean = p11_5 >= p11_4
          val x2018: Unit = if (x2015) {          val x2016: Unit = block_433(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2016} else {          val x2017: Unit = block_434(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2017}
x2018
}
// *** begin block 22:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_425(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2019: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x2020: Boolean = x2019 eq null
          val x2022: Object = if (x2020) {          val x2021: Object = throw new NullPointerException()
x2021} else {x2019}
          val x2023: Unit = block_435(null,null,null,null,x2019,p11_5,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x2019,null,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2023
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_426(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2024: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x2025: Boolean = x2024 eq null
          val x2027: Object = if (x2025) {          val x2026: Object = throw new NullPointerException()
x2026} else {x2024}
          val x2028: Unit = block_436(null,null,null,null,x2024,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2024,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2028
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_427(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2029: Boolean = -2147483648 != p10_4
          val x2032: Unit = if (x2029) {          val x2030: Unit = block_437(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2030} else {          val x2031: Unit = block_438(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2031}
x2032
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_428(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2033: Boolean = p10_4 >= 0
          val x2036: Unit = if (x2033) {          val x2034: Unit = block_439(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2034} else {          val x2035: Unit = block_440(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2035}
x2036
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_429(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2037: Boolean = p10_3 eq null
          val x2039: Object = if (x2037) {          val x2038: Object = throw new NullPointerException()
x2038} else {p10_3}
          val x2040: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2041: Unit = block_441(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2040,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2041
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_430(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2042: Unit = block_442(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2042
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_431(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2043: Int = -p10_4
          val x2044: Unit = block_443(null,null,null,null,x2043,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2044
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_432(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2045: Unit = block_444(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2045
}
// *** begin block 47:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_433(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2046: Boolean = p11_3 eq null
          val x2048: Object = if (x2046) {          val x2047: Object = throw new NullPointerException()
x2047} else {p11_3}
          val x2049: Object = unsafe.getObject(x2048,16)
          val x2050: Int = -p11_4
          val x2051: Int = x2050 + p11_5
          val x2052: Unit = java.lang.System.arraycopy(x2049,p11_4,p11_6,p11_7,x2051).asInstanceOf[Object]
          val x2053: Unit = block_445(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2053
}
// *** begin block 36:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_434(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2054: Object = unsafe.allocateInstance(classOf[java.lang.StringIndexOutOfBoundsException])
          val x2055: Int = -p11_4
          val x2056: Int = x2055 + p11_5
          val x2057: Boolean = x2054 eq null
          val x2059: Object = if (x2057) {          val x2058: Object = throw new NullPointerException()
x2058} else {x2054}
          val x2060: Unit = block_446(null,null,null,null,x2054,x2056,null,null,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,x2054,null,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2060
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_435(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2061: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x2062: Boolean = x2061 eq null
          val x2064: Object = if (x2062) {          val x2063: Object = throw new NullPointerException()
x2063} else {x2061}
          val x2065: Unit = block_447(null,null,null,null,x2061,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2061,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2065
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_436(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2066: Boolean = p13_3 eq null
          val x2068: Object = if (x2066) {          val x2067: Object = throw new NullPointerException()
x2067} else {p13_3}
          val x2069: Unit = block_448(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2069
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_437(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2070: Boolean = p10_4 >= 0
          val x2073: Unit = if (x2070) {          val x2071: Unit = block_449(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2071} else {          val x2072: Unit = block_450(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2072}
x2073
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_438(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2074: Boolean = p10_3 eq null
          val x2076: Object = if (x2074) {          val x2075: Object = throw new NullPointerException()
x2075} else {p10_3}
          val x2077: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2078: Unit = block_451(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2077,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2078
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_439(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2079: Unit = block_452(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2079
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_440(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2080: Int = -p10_4
          val x2081: Unit = block_453(null,null,null,null,x2080,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2081
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_441(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2082: Unit = block_454(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2082
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_442(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2083: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2084: Long = 0.toLong
          val x2085: Boolean = x2083 eq null
          val x2087: Object = if (x2085) {          val x2086: Object = throw new NullPointerException()
x2086} else {x2083}
          val x2088: java.lang.Class[Object] = x2083.getClass.asInstanceOf[Class[Object]]
          val x2089: Boolean = x2088.isArray
          val x2090: Boolean = if (x2089) {false} else {true}
          val x2093: Unit = if (x2090) {          val x2091: java.lang.String = x2088.getName
          val x2092: Unit = throw new ArrayStoreException(x2091)
x2092} else {()}
          val x2094: Boolean = x2084 < 0
          val x2098: Boolean = if (x2094) {x2094} else {          val x2095: Int = java.lang.reflect.Array.getLength(x2083)
          val x2096: Long = x2095.toLong
          val x2097: Boolean = x2084 >= x2096
x2097}
          val x2101: Unit = if (x2098) {          val x2099: Int = x2084.toInt
          val x2100: Unit = throw new ArrayIndexOutOfBoundsException(x2099)
x2100} else {()}
          val x2102: Long = 4 * x2084
          val x2103: Long = 24 + x2102
          val x2104: Int = unsafe.getInt(x2083,x2103)
          val x2105: Boolean = x2104 < p11_3
          val x2108: Unit = if (x2105) {          val x2106: Unit = block_455(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2106} else {          val x2107: Unit = block_456(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2107}
x2108
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_443(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2109: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2110: Long = 0.toLong
          val x2111: Boolean = x2109 eq null
          val x2113: Object = if (x2111) {          val x2112: Object = throw new NullPointerException()
x2112} else {x2109}
          val x2114: java.lang.Class[Object] = x2109.getClass.asInstanceOf[Class[Object]]
          val x2115: Boolean = x2114.isArray
          val x2116: Boolean = if (x2115) {false} else {true}
          val x2119: Unit = if (x2116) {          val x2117: java.lang.String = x2114.getName
          val x2118: Unit = throw new ArrayStoreException(x2117)
x2118} else {()}
          val x2120: Boolean = x2110 < 0
          val x2124: Boolean = if (x2120) {x2120} else {          val x2121: Int = java.lang.reflect.Array.getLength(x2109)
          val x2122: Long = x2121.toLong
          val x2123: Boolean = x2110 >= x2122
x2123}
          val x2127: Unit = if (x2124) {          val x2125: Int = x2110.toInt
          val x2126: Unit = throw new ArrayIndexOutOfBoundsException(x2125)
x2126} else {()}
          val x2128: Long = 4 * x2110
          val x2129: Long = 24 + x2128
          val x2130: Int = unsafe.getInt(x2109,x2129)
          val x2131: Boolean = x2130 < p11_3
          val x2134: Unit = if (x2131) {          val x2132: Unit = block_457(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2132} else {          val x2133: Unit = block_458(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2133}
x2134
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_444(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2135: Unit = block_459(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2135
}
// *** begin block 61:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_445(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2136: Unit = block_460(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2136
}
// *** begin block 0:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_446(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Any,p12_6:Any,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2137: Object = unsafe.allocateInstance(classOf[java.lang.StringBuilder])
          val x2138: Boolean = x2137 eq null
          val x2140: Object = if (x2138) {          val x2139: Object = throw new NullPointerException()
x2139} else {x2137}
          val x2141: Unit = block_461(null,null,null,null,x2137,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_3,x2137,null,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2141
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_447(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2142: Boolean = p13_3 eq null
          val x2144: Object = if (x2142) {          val x2143: Object = throw new NullPointerException()
x2143} else {p13_3}
          val x2145: Unit = block_462(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2145
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_448(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2146: Boolean = p14_3 eq null
          val x2148: Object = if (x2146) {          val x2147: Object = throw new NullPointerException()
x2147} else {p14_3}
          val x2149: Unit = block_463(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2149
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_449(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2150: Unit = block_464(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2150
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_450(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2151: Int = -p10_4
          val x2152: Unit = block_465(null,null,null,null,x2151,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2152
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_451(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2153: Unit = block_466(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2153
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_452(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2154: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2155: Long = 0.toLong
          val x2156: Boolean = x2154 eq null
          val x2158: Object = if (x2156) {          val x2157: Object = throw new NullPointerException()
x2157} else {x2154}
          val x2159: java.lang.Class[Object] = x2154.getClass.asInstanceOf[Class[Object]]
          val x2160: Boolean = x2159.isArray
          val x2161: Boolean = if (x2160) {false} else {true}
          val x2164: Unit = if (x2161) {          val x2162: java.lang.String = x2159.getName
          val x2163: Unit = throw new ArrayStoreException(x2162)
x2163} else {()}
          val x2165: Boolean = x2155 < 0
          val x2169: Boolean = if (x2165) {x2165} else {          val x2166: Int = java.lang.reflect.Array.getLength(x2154)
          val x2167: Long = x2166.toLong
          val x2168: Boolean = x2155 >= x2167
x2168}
          val x2172: Unit = if (x2169) {          val x2170: Int = x2155.toInt
          val x2171: Unit = throw new ArrayIndexOutOfBoundsException(x2170)
x2171} else {()}
          val x2173: Long = 4 * x2155
          val x2174: Long = 24 + x2173
          val x2175: Int = unsafe.getInt(x2154,x2174)
          val x2176: Boolean = x2175 < p11_3
          val x2179: Unit = if (x2176) {          val x2177: Unit = block_467(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2177} else {          val x2178: Unit = block_468(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2178}
x2179
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_453(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2180: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2181: Long = 0.toLong
          val x2182: Boolean = x2180 eq null
          val x2184: Object = if (x2182) {          val x2183: Object = throw new NullPointerException()
x2183} else {x2180}
          val x2185: java.lang.Class[Object] = x2180.getClass.asInstanceOf[Class[Object]]
          val x2186: Boolean = x2185.isArray
          val x2187: Boolean = if (x2186) {false} else {true}
          val x2190: Unit = if (x2187) {          val x2188: java.lang.String = x2185.getName
          val x2189: Unit = throw new ArrayStoreException(x2188)
x2189} else {()}
          val x2191: Boolean = x2181 < 0
          val x2195: Boolean = if (x2191) {x2191} else {          val x2192: Int = java.lang.reflect.Array.getLength(x2180)
          val x2193: Long = x2192.toLong
          val x2194: Boolean = x2181 >= x2193
x2194}
          val x2198: Unit = if (x2195) {          val x2196: Int = x2181.toInt
          val x2197: Unit = throw new ArrayIndexOutOfBoundsException(x2196)
x2197} else {()}
          val x2199: Long = 4 * x2181
          val x2200: Long = 24 + x2199
          val x2201: Int = unsafe.getInt(x2180,x2200)
          val x2202: Boolean = x2201 < p11_3
          val x2205: Unit = if (x2202) {          val x2203: Unit = block_469(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2203} else {          val x2204: Unit = block_470(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2204}
x2205
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_454(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2206: Unit = block_471(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2206
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_455(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2207: Int = p11_4 + 1
          val x2208: Unit = block_472(r,p11_0,p11_1,p11_2,p11_3,x2207,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2208
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_456(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2209: Int = 1 + p11_4
          val x2210: Unit = block_473(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2209,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2210
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_457(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2211: Int = p11_4 + 1
          val x2212: Unit = block_474(r,p11_0,p11_1,p11_2,p11_3,x2211,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2212
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_458(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2213: Int = 1 + p11_4
          val x2214: Unit = block_475(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2213,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2214
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_459(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2215: Boolean = p8_6 eq null
          val x2217: Object = if (x2215) {          val x2216: Object = throw new NullPointerException()
x2216} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2218: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2218
}
// *** begin block 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_460(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2219: Boolean = p10_3 eq null
          val x2221: Object = if (x2219) {          val x2220: Object = throw new NullPointerException()
x2220} else {p10_3}
          val x2222: Int = unsafe.getInt(x2221,16)
          val x2223: Int = p10_5 + x2222
          val x2224: Boolean = p10_3 eq null
          val x2226: Object = if (x2224) {          val x2225: Object = throw new NullPointerException()
x2225} else {p10_3}
          val x2227: Unit = unsafe.putInt(x2226,16, x2223)
          val x2228: Unit = block_476(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2228
}
// *** begin block 0:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_461(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2229: Boolean = p13_3 eq null
          val x2231: Object = if (x2229) {          val x2230: Object = throw new NullPointerException()
x2230} else {p13_3}
          val x2232: Unit = block_477(null,null,null,null,p13_3,16,null,null,p13_0,p13_1,p13_2,p13_3,null,null,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2232
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_462(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2233: Boolean = p14_3 eq null
          val x2235: Object = if (x2233) {          val x2234: Object = throw new NullPointerException()
x2234} else {p14_3}
          val x2236: Unit = block_478(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2236
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_463(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2237: Unit = block_479(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2237
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_464(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2238: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2239: Long = 0.toLong
          val x2240: Boolean = x2238 eq null
          val x2242: Object = if (x2240) {          val x2241: Object = throw new NullPointerException()
x2241} else {x2238}
          val x2243: java.lang.Class[Object] = x2238.getClass.asInstanceOf[Class[Object]]
          val x2244: Boolean = x2243.isArray
          val x2245: Boolean = if (x2244) {false} else {true}
          val x2248: Unit = if (x2245) {          val x2246: java.lang.String = x2243.getName
          val x2247: Unit = throw new ArrayStoreException(x2246)
x2247} else {()}
          val x2249: Boolean = x2239 < 0
          val x2253: Boolean = if (x2249) {x2249} else {          val x2250: Int = java.lang.reflect.Array.getLength(x2238)
          val x2251: Long = x2250.toLong
          val x2252: Boolean = x2239 >= x2251
x2252}
          val x2256: Unit = if (x2253) {          val x2254: Int = x2239.toInt
          val x2255: Unit = throw new ArrayIndexOutOfBoundsException(x2254)
x2255} else {()}
          val x2257: Long = 4 * x2239
          val x2258: Long = 24 + x2257
          val x2259: Int = unsafe.getInt(x2238,x2258)
          val x2260: Boolean = x2259 < p11_3
          val x2263: Unit = if (x2260) {          val x2261: Unit = block_480(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2261} else {          val x2262: Unit = block_481(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2262}
x2263
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_465(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2264: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2265: Long = 0.toLong
          val x2266: Boolean = x2264 eq null
          val x2268: Object = if (x2266) {          val x2267: Object = throw new NullPointerException()
x2267} else {x2264}
          val x2269: java.lang.Class[Object] = x2264.getClass.asInstanceOf[Class[Object]]
          val x2270: Boolean = x2269.isArray
          val x2271: Boolean = if (x2270) {false} else {true}
          val x2274: Unit = if (x2271) {          val x2272: java.lang.String = x2269.getName
          val x2273: Unit = throw new ArrayStoreException(x2272)
x2273} else {()}
          val x2275: Boolean = x2265 < 0
          val x2279: Boolean = if (x2275) {x2275} else {          val x2276: Int = java.lang.reflect.Array.getLength(x2264)
          val x2277: Long = x2276.toLong
          val x2278: Boolean = x2265 >= x2277
x2278}
          val x2282: Unit = if (x2279) {          val x2280: Int = x2265.toInt
          val x2281: Unit = throw new ArrayIndexOutOfBoundsException(x2280)
x2281} else {()}
          val x2283: Long = 4 * x2265
          val x2284: Long = 24 + x2283
          val x2285: Int = unsafe.getInt(x2264,x2284)
          val x2286: Boolean = x2285 < p11_3
          val x2289: Unit = if (x2286) {          val x2287: Unit = block_482(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2287} else {          val x2288: Unit = block_483(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2288}
x2289
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_466(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2290: Unit = block_484(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p9_3,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2290
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_467(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2291: Int = p11_4 + 1
          val x2292: Unit = block_485(r,p11_0,p11_1,p11_2,p11_3,x2291,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2292
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_468(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2293: Int = 1 + p11_4
          val x2294: Unit = block_486(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2293,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2294
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_469(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2295: Int = p11_4 + 1
          val x2296: Unit = block_487(r,p11_0,p11_1,p11_2,p11_3,x2295,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2296
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_470(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2297: Int = 1 + p11_4
          val x2298: Unit = block_488(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2297,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2298
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_471(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2299: Boolean = p8_6 eq null
          val x2301: Object = if (x2299) {          val x2300: Object = throw new NullPointerException()
x2300} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2302: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2302
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_472(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2303: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2304: Long = p11_4.toLong
          val x2305: Boolean = x2303 eq null
          val x2307: Object = if (x2305) {          val x2306: Object = throw new NullPointerException()
x2306} else {x2303}
          val x2308: java.lang.Class[Object] = x2303.getClass.asInstanceOf[Class[Object]]
          val x2309: Boolean = x2308.isArray
          val x2310: Boolean = if (x2309) {false} else {true}
          val x2313: Unit = if (x2310) {          val x2311: java.lang.String = x2308.getName
          val x2312: Unit = throw new ArrayStoreException(x2311)
x2312} else {()}
          val x2314: Boolean = x2304 < 0
          val x2318: Boolean = if (x2314) {x2314} else {          val x2315: Int = java.lang.reflect.Array.getLength(x2303)
          val x2316: Long = x2315.toLong
          val x2317: Boolean = x2304 >= x2316
x2317}
          val x2321: Unit = if (x2318) {          val x2319: Int = x2304.toInt
          val x2320: Unit = throw new ArrayIndexOutOfBoundsException(x2319)
x2320} else {()}
          val x2322: Long = 4 * x2304
          val x2323: Long = 24 + x2322
          val x2324: Int = unsafe.getInt(x2303,x2323)
          val x2325: Boolean = x2324 < p11_3
          val x2328: Unit = if (x2325) {          val x2326: Unit = block_455(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2326} else {          val x2327: Unit = block_456(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2327}
x2328
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_473(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2329: Boolean = p10_3 eq null
          val x2331: Object = if (x2329) {          val x2330: Object = throw new NullPointerException()
x2330} else {p10_3}
          val x2332: Int = unsafe.getInt(x2331,16)
          val x2333: Int = p10_7 + x2332
          val x2334: Boolean = p10_3 eq null
          val x2336: Object = if (x2334) {          val x2335: Object = throw new NullPointerException()
x2335} else {p10_3}
          val x2337: Unit = block_489(null,null,null,null,p10_3,x2333,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2333,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2337
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_474(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2338: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2339: Long = p11_4.toLong
          val x2340: Boolean = x2338 eq null
          val x2342: Object = if (x2340) {          val x2341: Object = throw new NullPointerException()
x2341} else {x2338}
          val x2343: java.lang.Class[Object] = x2338.getClass.asInstanceOf[Class[Object]]
          val x2344: Boolean = x2343.isArray
          val x2345: Boolean = if (x2344) {false} else {true}
          val x2348: Unit = if (x2345) {          val x2346: java.lang.String = x2343.getName
          val x2347: Unit = throw new ArrayStoreException(x2346)
x2347} else {()}
          val x2349: Boolean = x2339 < 0
          val x2353: Boolean = if (x2349) {x2349} else {          val x2350: Int = java.lang.reflect.Array.getLength(x2338)
          val x2351: Long = x2350.toLong
          val x2352: Boolean = x2339 >= x2351
x2352}
          val x2356: Unit = if (x2353) {          val x2354: Int = x2339.toInt
          val x2355: Unit = throw new ArrayIndexOutOfBoundsException(x2354)
x2355} else {()}
          val x2357: Long = 4 * x2339
          val x2358: Long = 24 + x2357
          val x2359: Int = unsafe.getInt(x2338,x2358)
          val x2360: Boolean = x2359 < p11_3
          val x2363: Unit = if (x2360) {          val x2361: Unit = block_457(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2361} else {          val x2362: Unit = block_458(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2362}
x2363
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_475(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2364: Int = 1 + p10_7
          val x2365: Unit = block_473(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2364,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2365
}
// *** begin block 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_476(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2366: Unit = block_490(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2366
}
// *** begin block 0:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_477(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2367: Boolean = p14_3 eq null
          val x2369: Object = if (x2367) {          val x2368: Object = throw new NullPointerException()
x2368} else {p14_3}
          val x2370: Unit = block_491(null,null,null,null,p14_3,p14_0,p14_1,p14_2,p14_3,p14_4,null,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2370
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_478(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2371: Unit = block_492(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2371
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_479(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2372: Object = new Array[char](p14_4)
          val x2373: Boolean = p14_3 eq null
          val x2375: Object = if (x2373) {          val x2374: Object = throw new NullPointerException()
x2374} else {p14_3}
          val x2376: Unit = unsafe.putObject(x2375,24, x2372)
          val x2377: Unit = block_493(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2377
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_480(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2378: Int = p11_4 + 1
          val x2379: Unit = block_494(r,p11_0,p11_1,p11_2,p11_3,x2378,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2379
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_481(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2380: Int = 1 + p11_4
          val x2381: Unit = block_495(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2380,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2381
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_482(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2382: Int = p11_4 + 1
          val x2383: Unit = block_496(r,p11_0,p11_1,p11_2,p11_3,x2382,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2383
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_483(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2384: Int = 1 + p11_4
          val x2385: Unit = block_497(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2384,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2385
}
// *** begin block 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_484(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Object,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2386: Boolean = p8_6 eq null
          val x2388: Object = if (x2386) {          val x2387: Object = throw new NullPointerException()
x2387} else {p8_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x2389: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x2389
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_485(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2390: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2391: Long = p11_4.toLong
          val x2392: Boolean = x2390 eq null
          val x2394: Object = if (x2392) {          val x2393: Object = throw new NullPointerException()
x2393} else {x2390}
          val x2395: java.lang.Class[Object] = x2390.getClass.asInstanceOf[Class[Object]]
          val x2396: Boolean = x2395.isArray
          val x2397: Boolean = if (x2396) {false} else {true}
          val x2400: Unit = if (x2397) {          val x2398: java.lang.String = x2395.getName
          val x2399: Unit = throw new ArrayStoreException(x2398)
x2399} else {()}
          val x2401: Boolean = x2391 < 0
          val x2405: Boolean = if (x2401) {x2401} else {          val x2402: Int = java.lang.reflect.Array.getLength(x2390)
          val x2403: Long = x2402.toLong
          val x2404: Boolean = x2391 >= x2403
x2404}
          val x2408: Unit = if (x2405) {          val x2406: Int = x2391.toInt
          val x2407: Unit = throw new ArrayIndexOutOfBoundsException(x2406)
x2407} else {()}
          val x2409: Long = 4 * x2391
          val x2410: Long = 24 + x2409
          val x2411: Int = unsafe.getInt(x2390,x2410)
          val x2412: Boolean = x2411 < p11_3
          val x2415: Unit = if (x2412) {          val x2413: Unit = block_467(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2413} else {          val x2414: Unit = block_468(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2414}
x2415
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_486(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2416: Boolean = p10_3 eq null
          val x2418: Object = if (x2416) {          val x2417: Object = throw new NullPointerException()
x2417} else {p10_3}
          val x2419: Int = unsafe.getInt(x2418,16)
          val x2420: Int = p10_7 + x2419
          val x2421: Boolean = p10_3 eq null
          val x2423: Object = if (x2421) {          val x2422: Object = throw new NullPointerException()
x2422} else {p10_3}
          val x2424: Unit = block_498(null,null,null,null,p10_3,x2420,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2420,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2424
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_487(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2425: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2426: Long = p11_4.toLong
          val x2427: Boolean = x2425 eq null
          val x2429: Object = if (x2427) {          val x2428: Object = throw new NullPointerException()
x2428} else {x2425}
          val x2430: java.lang.Class[Object] = x2425.getClass.asInstanceOf[Class[Object]]
          val x2431: Boolean = x2430.isArray
          val x2432: Boolean = if (x2431) {false} else {true}
          val x2435: Unit = if (x2432) {          val x2433: java.lang.String = x2430.getName
          val x2434: Unit = throw new ArrayStoreException(x2433)
x2434} else {()}
          val x2436: Boolean = x2426 < 0
          val x2440: Boolean = if (x2436) {x2436} else {          val x2437: Int = java.lang.reflect.Array.getLength(x2425)
          val x2438: Long = x2437.toLong
          val x2439: Boolean = x2426 >= x2438
x2439}
          val x2443: Unit = if (x2440) {          val x2441: Int = x2426.toInt
          val x2442: Unit = throw new ArrayIndexOutOfBoundsException(x2441)
x2442} else {()}
          val x2444: Long = 4 * x2426
          val x2445: Long = 24 + x2444
          val x2446: Int = unsafe.getInt(x2425,x2445)
          val x2447: Boolean = x2446 < p11_3
          val x2450: Unit = if (x2447) {          val x2448: Unit = block_469(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2448} else {          val x2449: Unit = block_470(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2449}
x2450
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_488(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2451: Int = 1 + p10_7
          val x2452: Unit = block_486(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2451,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2452
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_489(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2453: Boolean = p11_3 eq null
          val x2455: Object = if (x2453) {          val x2454: Object = throw new NullPointerException()
x2454} else {p11_3}
          val x2456: Object = unsafe.getObject(x2455,24)
          val x2457: Boolean = x2456 eq null
          val x2459: Object = if (x2457) {          val x2458: Object = throw new NullPointerException()
x2458} else {x2456}
          val x2460: Int = java.lang.reflect.Array.getLength(x2459)
          val x2461: Int = -x2460
          val x2462: Int = x2461 + p11_4
          val x2463: Boolean = x2462 <= 0
          val x2466: Unit = if (x2463) {          val x2464: Unit = block_499(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2464} else {          val x2465: Unit = block_500(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2465}
x2466
}
// *** begin block 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_490(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2467: Boolean = p8_10 eq null
          val x2469: Object = if (x2467) {          val x2468: Object = throw new NullPointerException()
x2468} else {p8_10}
          val x2470: Unit = block_501(null,null,null,null,p8_10,p8_5,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,null,null,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2470
}
// *** begin block 0:<Object.<init>>()V // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_491(r:Any,p15_0:Any,p15_1:Any,p15_2:Any,p15_3:Object,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2471: Unit = block_502(r,p14_0,p14_1,p14_2,p14_3,p14_4,p14_5,p14_6,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2471
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_492(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2472: Object = new Array[char](p14_4)
          val x2473: Boolean = p14_3 eq null
          val x2475: Object = if (x2473) {          val x2474: Object = throw new NullPointerException()
x2474} else {p14_3}
          val x2476: Unit = unsafe.putObject(x2475,24, x2472)
          val x2477: Unit = block_503(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2477
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_493(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2478: Unit = block_504(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2478
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_494(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2479: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2480: Long = p11_4.toLong
          val x2481: Boolean = x2479 eq null
          val x2483: Object = if (x2481) {          val x2482: Object = throw new NullPointerException()
x2482} else {x2479}
          val x2484: java.lang.Class[Object] = x2479.getClass.asInstanceOf[Class[Object]]
          val x2485: Boolean = x2484.isArray
          val x2486: Boolean = if (x2485) {false} else {true}
          val x2489: Unit = if (x2486) {          val x2487: java.lang.String = x2484.getName
          val x2488: Unit = throw new ArrayStoreException(x2487)
x2488} else {()}
          val x2490: Boolean = x2480 < 0
          val x2494: Boolean = if (x2490) {x2490} else {          val x2491: Int = java.lang.reflect.Array.getLength(x2479)
          val x2492: Long = x2491.toLong
          val x2493: Boolean = x2480 >= x2492
x2493}
          val x2497: Unit = if (x2494) {          val x2495: Int = x2480.toInt
          val x2496: Unit = throw new ArrayIndexOutOfBoundsException(x2495)
x2496} else {()}
          val x2498: Long = 4 * x2480
          val x2499: Long = 24 + x2498
          val x2500: Int = unsafe.getInt(x2479,x2499)
          val x2501: Boolean = x2500 < p11_3
          val x2504: Unit = if (x2501) {          val x2502: Unit = block_480(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2502} else {          val x2503: Unit = block_481(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2503}
x2504
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_495(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2505: Boolean = p10_3 eq null
          val x2507: Object = if (x2505) {          val x2506: Object = throw new NullPointerException()
x2506} else {p10_3}
          val x2508: Int = unsafe.getInt(x2507,16)
          val x2509: Int = p10_7 + x2508
          val x2510: Boolean = p10_3 eq null
          val x2512: Object = if (x2510) {          val x2511: Object = throw new NullPointerException()
x2511} else {p10_3}
          val x2513: Unit = block_505(null,null,null,null,p10_3,x2509,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x2509,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2513
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_496(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2514: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2515: Long = p11_4.toLong
          val x2516: Boolean = x2514 eq null
          val x2518: Object = if (x2516) {          val x2517: Object = throw new NullPointerException()
x2517} else {x2514}
          val x2519: java.lang.Class[Object] = x2514.getClass.asInstanceOf[Class[Object]]
          val x2520: Boolean = x2519.isArray
          val x2521: Boolean = if (x2520) {false} else {true}
          val x2524: Unit = if (x2521) {          val x2522: java.lang.String = x2519.getName
          val x2523: Unit = throw new ArrayStoreException(x2522)
x2523} else {()}
          val x2525: Boolean = x2515 < 0
          val x2529: Boolean = if (x2525) {x2525} else {          val x2526: Int = java.lang.reflect.Array.getLength(x2514)
          val x2527: Long = x2526.toLong
          val x2528: Boolean = x2515 >= x2527
x2528}
          val x2532: Unit = if (x2529) {          val x2530: Int = x2515.toInt
          val x2531: Unit = throw new ArrayIndexOutOfBoundsException(x2530)
x2531} else {()}
          val x2533: Long = 4 * x2515
          val x2534: Long = 24 + x2533
          val x2535: Int = unsafe.getInt(x2514,x2534)
          val x2536: Boolean = x2535 < p11_3
          val x2539: Unit = if (x2536) {          val x2537: Unit = block_482(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2537} else {          val x2538: Unit = block_483(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2538}
x2539
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_497(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2540: Int = 1 + p10_7
          val x2541: Unit = block_495(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2540,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2541
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_498(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2542: Boolean = p11_3 eq null
          val x2544: Object = if (x2542) {          val x2543: Object = throw new NullPointerException()
x2543} else {p11_3}
          val x2545: Object = unsafe.getObject(x2544,24)
          val x2546: Boolean = x2545 eq null
          val x2548: Object = if (x2546) {          val x2547: Object = throw new NullPointerException()
x2547} else {x2545}
          val x2549: Int = java.lang.reflect.Array.getLength(x2548)
          val x2550: Int = -x2549
          val x2551: Int = x2550 + p11_4
          val x2552: Boolean = x2551 <= 0
          val x2555: Unit = if (x2552) {          val x2553: Unit = block_506(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2553} else {          val x2554: Unit = block_507(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2554}
x2555
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_499(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2556: Unit = block_508(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2556
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_500(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2557: Boolean = p11_3 eq null
          val x2559: Object = if (x2557) {          val x2558: Object = throw new NullPointerException()
x2558} else {p11_3}
          val x2560: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2561: Unit = block_499(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2561
}
// *** begin block 0:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_501(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2562: Boolean = p9_3 eq null
          val x2564: Object = if (x2562) {          val x2563: Object = throw new NullPointerException()
x2563} else {p9_3}
          val x2565: Unit = block_509(null,null,null,null,p9_3,p9_4,null,null,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,null,null,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2565
}
// *** begin block 4:<AbstractStringBuilder.<init>>(I)V // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_502(r:Any,p14_0:Any,p14_1:Any,p14_2:Any,p14_3:Object,p14_4:Int,p14_5:Any,p14_6:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2566: Object = new Array[char](p14_4)
          val x2567: Boolean = p14_3 eq null
          val x2569: Object = if (x2567) {          val x2568: Object = throw new NullPointerException()
x2568} else {p14_3}
          val x2570: Unit = unsafe.putObject(x2569,24, x2566)
          val x2571: Unit = block_510(r,p13_0,p13_1,p13_2,p13_3,p13_4,p13_5,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2571
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_503(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2572: Unit = block_511(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2572
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 12:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_504(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2573: Boolean = p12_6 eq null
          val x2575: Object = if (x2573) {          val x2574: Object = throw new NullPointerException()
x2574} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2576: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2576
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_505(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2577: Boolean = p11_3 eq null
          val x2579: Object = if (x2577) {          val x2578: Object = throw new NullPointerException()
x2578} else {p11_3}
          val x2580: Object = unsafe.getObject(x2579,24)
          val x2581: Boolean = x2580 eq null
          val x2583: Object = if (x2581) {          val x2582: Object = throw new NullPointerException()
x2582} else {x2580}
          val x2584: Int = java.lang.reflect.Array.getLength(x2583)
          val x2585: Int = -x2584
          val x2586: Int = x2585 + p11_4
          val x2587: Boolean = x2586 <= 0
          val x2590: Unit = if (x2587) {          val x2588: Unit = block_512(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2588} else {          val x2589: Unit = block_513(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2589}
x2590
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_506(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2591: Unit = block_514(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2591
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_507(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2592: Boolean = p11_3 eq null
          val x2594: Object = if (x2592) {          val x2593: Object = throw new NullPointerException()
x2593} else {p11_3}
          val x2595: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2596: Unit = block_506(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2596
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_508(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2597: Boolean = p10_3 eq null
          val x2599: Object = if (x2597) {          val x2598: Object = throw new NullPointerException()
x2598} else {p10_3}
          val x2600: Object = unsafe.getObject(x2599,24)
          val x2601: Unit = block_515(null,null,null,null,p10_4,p10_6,x2600,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2601
}
// *** begin block 0:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_509(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2602: Boolean = -2147483648 != p10_4
          val x2605: Unit = if (x2602) {          val x2603: Unit = block_516(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2603} else {          val x2604: Unit = block_517(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2604}
x2605
}
// *** begin block 6:<StringBuilder.<init>>()V // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_510(r:Any,p13_0:Any,p13_1:Any,p13_2:Any,p13_3:Object,p13_4:Any,p13_5:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2606: Unit = block_518(r,p12_0,p12_1,p12_2,p12_3,p12_4,p12_5,p12_6,p12_7,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p10_10,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2606
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 30:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_511(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2607: Boolean = p12_6 eq null
          val x2609: Object = if (x2607) {          val x2608: Object = throw new NullPointerException()
x2608} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2610: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2610
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_512(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2611: Unit = block_519(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2611
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_513(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2612: Boolean = p11_3 eq null
          val x2614: Object = if (x2612) {          val x2613: Object = throw new NullPointerException()
x2613} else {p11_3}
          val x2615: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x2616: Unit = block_512(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2616
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_514(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2617: Boolean = p10_3 eq null
          val x2619: Object = if (x2617) {          val x2618: Object = throw new NullPointerException()
x2618} else {p10_3}
          val x2620: Object = unsafe.getObject(x2619,24)
          val x2621: Unit = block_520(null,null,null,null,p10_4,p10_6,x2620,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2621
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_515(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2622: Boolean = p11_3 >= 0
          val x2625: Unit = if (x2622) {          val x2623: Unit = block_521(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2623} else {          val x2624: Unit = block_522(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2624}
x2625
}
// *** begin block 15:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_516(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2626: Boolean = p10_4 >= 0
          val x2629: Unit = if (x2626) {          val x2627: Unit = block_523(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2627} else {          val x2628: Unit = block_524(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2628}
x2629
}
// *** begin block 6:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_517(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2630: Boolean = p10_3 eq null
          val x2632: Object = if (x2630) {          val x2631: Object = throw new NullPointerException()
x2631} else {p10_3}
          val x2633: Object = CONST_8.invoke(p10_3.asInstanceOf[AnyRef],"-2147483648".asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.append
          val x2634: Unit = block_525(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x2633,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2634
}
// *** begin block 8:<StringIndexOutOfBoundsException.<init>>(I)V // 46:<String.getChars>(II[CI)V // 36:<AbstractStringBuilder.append>(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(Ljava/lang/String;)Ljava/lang/StringBuilder; // 28:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_518(r:Any,p12_0:Any,p12_1:Any,p12_2:Any,p12_3:Object,p12_4:Int,p12_5:Object,p12_6:Object,p12_7:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Int,p11_6:Object,p11_7:Int,p11_8:Object,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Object,p10_5:Int,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p10_10:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Object,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2635: Boolean = p12_6 eq null
          val x2637: Object = if (x2635) {          val x2636: Object = throw new NullPointerException()
x2636} else {p12_6}
// *** RECURSIVE: HotSpotMethod<StringBuilder.append> ***
          val x2638: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.append>")
x2638
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_519(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2639: Boolean = p10_3 eq null
          val x2641: Object = if (x2639) {          val x2640: Object = throw new NullPointerException()
x2640} else {p10_3}
          val x2642: Object = unsafe.getObject(x2641,24)
          val x2643: Unit = block_526(null,null,null,null,p10_4,p10_6,x2642,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2643
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_520(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2644: Boolean = p11_3 >= 0
          val x2647: Unit = if (x2644) {          val x2645: Unit = block_527(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2645} else {          val x2646: Unit = block_528(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2646}
x2647
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_521(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2648: Boolean = 65536 > p11_3
          val x2651: Unit = if (x2648) {          val x2649: Unit = block_529(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2649} else {          val x2650: Unit = block_530(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2650}
x2651
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_522(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2652: Int = -p11_3
          val x2653: Boolean = 65536 > x2652
          val x2656: Unit = if (x2653) {          val x2654: Unit = block_529(r,p11_0,p11_1,p11_2,x2652,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2654} else {          val x2655: Unit = block_530(r,p11_0,p11_1,p11_2,x2652,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2655}
x2656
}
// *** begin block 29:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_523(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2657: Unit = block_531(null,null,null,null,p10_4,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2657
}
// *** begin block 19:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_524(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2658: Int = -p10_4
          val x2659: Unit = block_532(null,null,null,null,x2658,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2659
}
// *** begin block 12:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_525(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Object,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2660: Unit = block_533(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2660
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_526(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2661: Boolean = p11_3 >= 0
          val x2664: Unit = if (x2661) {          val x2662: Unit = block_534(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2662} else {          val x2663: Unit = block_535(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2663}
x2664
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_527(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2665: Boolean = 65536 > p11_3
          val x2668: Unit = if (x2665) {          val x2666: Unit = block_536(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2666} else {          val x2667: Unit = block_537(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2667}
x2668
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_528(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2669: Int = -p11_3
          val x2670: Boolean = 65536 > x2669
          val x2673: Unit = if (x2670) {          val x2671: Unit = block_536(r,p11_0,p11_1,p11_2,x2669,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2671} else {          val x2672: Unit = block_537(r,p11_0,p11_1,p11_2,x2669,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2672}
x2673
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_529(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2674: Int = 52429 * p11_3
          val x2675: Int = x2674 >>> 19
          val x2676: Int = x2675 << 3
          val x2677: Int = x2675 << 1
          val x2678: Int = x2677 + x2676
          val x2679: Int = -x2678
          val x2680: Int = x2679 + p11_3
          val x2681: Int = p11_8 + -1
          val x2682: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x2683: Long = x2680.toLong
          val x2684: Boolean = x2682 eq null
          val x2686: Object = if (x2684) {          val x2685: Object = throw new NullPointerException()
x2685} else {x2682}
          val x2687: java.lang.Class[Object] = x2682.getClass.asInstanceOf[Class[Object]]
          val x2688: Boolean = x2687.isArray
          val x2689: Boolean = if (x2688) {false} else {true}
          val x2692: Unit = if (x2689) {          val x2690: java.lang.String = x2687.getName
          val x2691: Unit = throw new ArrayStoreException(x2690)
x2691} else {()}
          val x2693: Boolean = x2683 < 0
          val x2697: Boolean = if (x2693) {x2693} else {          val x2694: Int = java.lang.reflect.Array.getLength(x2682)
          val x2695: Long = x2694.toLong
          val x2696: Boolean = x2683 >= x2695
x2696}
          val x2700: Unit = if (x2697) {          val x2698: Int = x2683.toInt
          val x2699: Unit = throw new ArrayIndexOutOfBoundsException(x2698)
x2699} else {()}
          val x2701: Long = 2 * x2683
          val x2702: Long = 24 + x2701
          val x2703: Char = unsafe.getChar(x2682,x2702)
          val x2704: Int = x2703.toInt
          val x2705: Char = x2704.toChar
          val x2706: Long = x2681.toLong
          val x2707: Boolean = p11_5 eq null
          val x2709: Object = if (x2707) {          val x2708: Object = throw new NullPointerException()
x2708} else {p11_5}
          val x2710: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2711: Boolean = x2710.isArray
          val x2712: Boolean = if (x2711) {false} else {true}
          val x2715: Unit = if (x2712) {          val x2713: java.lang.String = x2710.getName
          val x2714: Unit = throw new ArrayStoreException(x2713)
x2714} else {()}
          val x2716: Boolean = x2706 < 0
          val x2720: Boolean = if (x2716) {x2716} else {          val x2717: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2718: Long = x2717.toLong
          val x2719: Boolean = x2706 >= x2718
x2719}
          val x2723: Unit = if (x2720) {          val x2721: Int = x2706.toInt
          val x2722: Unit = throw new ArrayIndexOutOfBoundsException(x2721)
x2722} else {()}
          val x2724: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2725: java.lang.Class[Object] = x2724.getComponentType.asInstanceOf[Class[Object]]
          val x2726: Boolean = x2725.isAssignableFrom(classOf[Char])
          val x2727: Boolean = if (x2726) {false} else {true}
          val x2729: Unit = if (x2727) {          val x2728: Unit = throw new ArrayStoreException("char")
x2728} else {()}
          val x2730: Long = 2 * x2706
          val x2731: Long = 24 + x2730
          val x2732: Unit = unsafe.putChar(p11_5,x2731, x2705)
          val x2733: Boolean = x2675 != 0
          val x2736: Unit = if (x2733) {          val x2734: Unit = block_529(r,p11_0,p11_1,p11_2,x2675,p11_4,p11_5,x2675,x2680,x2681,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2734} else {          val x2735: Unit = block_538(r,p11_0,p11_1,p11_2,x2675,p11_4,p11_5,x2675,x2680,x2681,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2735}
x2736
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_530(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2737: Int = p11_3 / 100
          val x2738: Int = x2737 << 6
          val x2739: Int = x2737 << 5
          val x2740: Int = x2739 + x2738
          val x2741: Int = x2737 << 2
          val x2742: Int = x2741 + x2740
          val x2743: Int = -x2742
          val x2744: Int = x2743 + p11_3
          val x2745: Int = p11_8 + -1
          val x2746: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x2747: Long = x2744.toLong
          val x2748: Boolean = x2746 eq null
          val x2750: Object = if (x2748) {          val x2749: Object = throw new NullPointerException()
x2749} else {x2746}
          val x2751: java.lang.Class[Object] = x2746.getClass.asInstanceOf[Class[Object]]
          val x2752: Boolean = x2751.isArray
          val x2753: Boolean = if (x2752) {false} else {true}
          val x2756: Unit = if (x2753) {          val x2754: java.lang.String = x2751.getName
          val x2755: Unit = throw new ArrayStoreException(x2754)
x2755} else {()}
          val x2757: Boolean = x2747 < 0
          val x2761: Boolean = if (x2757) {x2757} else {          val x2758: Int = java.lang.reflect.Array.getLength(x2746)
          val x2759: Long = x2758.toLong
          val x2760: Boolean = x2747 >= x2759
x2760}
          val x2764: Unit = if (x2761) {          val x2762: Int = x2747.toInt
          val x2763: Unit = throw new ArrayIndexOutOfBoundsException(x2762)
x2763} else {()}
          val x2765: Long = 2 * x2747
          val x2766: Long = 24 + x2765
          val x2767: Char = unsafe.getChar(x2746,x2766)
          val x2768: Int = x2767.toInt
          val x2769: Char = x2768.toChar
          val x2770: Long = x2745.toLong
          val x2771: Boolean = p11_5 eq null
          val x2773: Object = if (x2771) {          val x2772: Object = throw new NullPointerException()
x2772} else {p11_5}
          val x2774: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2775: Boolean = x2774.isArray
          val x2776: Boolean = if (x2775) {false} else {true}
          val x2779: Unit = if (x2776) {          val x2777: java.lang.String = x2774.getName
          val x2778: Unit = throw new ArrayStoreException(x2777)
x2778} else {()}
          val x2780: Boolean = x2770 < 0
          val x2784: Boolean = if (x2780) {x2780} else {          val x2781: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2782: Long = x2781.toLong
          val x2783: Boolean = x2770 >= x2782
x2783}
          val x2787: Unit = if (x2784) {          val x2785: Int = x2770.toInt
          val x2786: Unit = throw new ArrayIndexOutOfBoundsException(x2785)
x2786} else {()}
          val x2788: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2789: java.lang.Class[Object] = x2788.getComponentType.asInstanceOf[Class[Object]]
          val x2790: Boolean = x2789.isAssignableFrom(classOf[Char])
          val x2791: Boolean = if (x2790) {false} else {true}
          val x2793: Unit = if (x2791) {          val x2792: Unit = throw new ArrayStoreException("char")
x2792} else {()}
          val x2794: Long = 2 * x2770
          val x2795: Long = 24 + x2794
          val x2796: Unit = unsafe.putChar(p11_5,x2795, x2769)
          val x2797: Int = x2745 + -1
          val x2798: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x2799: Long = x2744.toLong
          val x2800: Boolean = x2798 eq null
          val x2802: Object = if (x2800) {          val x2801: Object = throw new NullPointerException()
x2801} else {x2798}
          val x2803: java.lang.Class[Object] = x2798.getClass.asInstanceOf[Class[Object]]
          val x2804: Boolean = x2803.isArray
          val x2805: Boolean = if (x2804) {false} else {true}
          val x2808: Unit = if (x2805) {          val x2806: java.lang.String = x2803.getName
          val x2807: Unit = throw new ArrayStoreException(x2806)
x2807} else {()}
          val x2809: Boolean = x2799 < 0
          val x2813: Boolean = if (x2809) {x2809} else {          val x2810: Int = java.lang.reflect.Array.getLength(x2798)
          val x2811: Long = x2810.toLong
          val x2812: Boolean = x2799 >= x2811
x2812}
          val x2816: Unit = if (x2813) {          val x2814: Int = x2799.toInt
          val x2815: Unit = throw new ArrayIndexOutOfBoundsException(x2814)
x2815} else {()}
          val x2817: Long = 2 * x2799
          val x2818: Long = 24 + x2817
          val x2819: Char = unsafe.getChar(x2798,x2818)
          val x2820: Int = x2819.toInt
          val x2821: Char = x2820.toChar
          val x2822: Long = x2797.toLong
          val x2823: Boolean = p11_5 eq null
          val x2825: Object = if (x2823) {          val x2824: Object = throw new NullPointerException()
x2824} else {p11_5}
          val x2826: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2827: Boolean = x2826.isArray
          val x2828: Boolean = if (x2827) {false} else {true}
          val x2831: Unit = if (x2828) {          val x2829: java.lang.String = x2826.getName
          val x2830: Unit = throw new ArrayStoreException(x2829)
x2830} else {()}
          val x2832: Boolean = x2822 < 0
          val x2836: Boolean = if (x2832) {x2832} else {          val x2833: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2834: Long = x2833.toLong
          val x2835: Boolean = x2822 >= x2834
x2835}
          val x2839: Unit = if (x2836) {          val x2837: Int = x2822.toInt
          val x2838: Unit = throw new ArrayIndexOutOfBoundsException(x2837)
x2838} else {()}
          val x2840: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2841: java.lang.Class[Object] = x2840.getComponentType.asInstanceOf[Class[Object]]
          val x2842: Boolean = x2841.isAssignableFrom(classOf[Char])
          val x2843: Boolean = if (x2842) {false} else {true}
          val x2845: Unit = if (x2843) {          val x2844: Unit = throw new ArrayStoreException("char")
x2844} else {()}
          val x2846: Long = 2 * x2822
          val x2847: Long = 24 + x2846
          val x2848: Unit = unsafe.putChar(p11_5,x2847, x2821)
          val x2849: Unit = block_521(r,p11_0,p11_1,p11_2,x2737,p11_4,p11_5,x2737,x2744,x2797,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2849
}
// *** begin block 0:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_531(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2850: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2851: Long = 0.toLong
          val x2852: Boolean = x2850 eq null
          val x2854: Object = if (x2852) {          val x2853: Object = throw new NullPointerException()
x2853} else {x2850}
          val x2855: java.lang.Class[Object] = x2850.getClass.asInstanceOf[Class[Object]]
          val x2856: Boolean = x2855.isArray
          val x2857: Boolean = if (x2856) {false} else {true}
          val x2860: Unit = if (x2857) {          val x2858: java.lang.String = x2855.getName
          val x2859: Unit = throw new ArrayStoreException(x2858)
x2859} else {()}
          val x2861: Boolean = x2851 < 0
          val x2865: Boolean = if (x2861) {x2861} else {          val x2862: Int = java.lang.reflect.Array.getLength(x2850)
          val x2863: Long = x2862.toLong
          val x2864: Boolean = x2851 >= x2863
x2864}
          val x2868: Unit = if (x2865) {          val x2866: Int = x2851.toInt
          val x2867: Unit = throw new ArrayIndexOutOfBoundsException(x2866)
x2867} else {()}
          val x2869: Long = 4 * x2851
          val x2870: Long = 24 + x2869
          val x2871: Int = unsafe.getInt(x2850,x2870)
          val x2872: Boolean = x2871 < p11_3
          val x2875: Unit = if (x2872) {          val x2873: Unit = block_539(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2873} else {          val x2874: Unit = block_540(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2874}
x2875
}
// *** begin block 0:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_532(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Any,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2876: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x2877: Long = 0.toLong
          val x2878: Boolean = x2876 eq null
          val x2880: Object = if (x2878) {          val x2879: Object = throw new NullPointerException()
x2879} else {x2876}
          val x2881: java.lang.Class[Object] = x2876.getClass.asInstanceOf[Class[Object]]
          val x2882: Boolean = x2881.isArray
          val x2883: Boolean = if (x2882) {false} else {true}
          val x2886: Unit = if (x2883) {          val x2884: java.lang.String = x2881.getName
          val x2885: Unit = throw new ArrayStoreException(x2884)
x2885} else {()}
          val x2887: Boolean = x2877 < 0
          val x2891: Boolean = if (x2887) {x2887} else {          val x2888: Int = java.lang.reflect.Array.getLength(x2876)
          val x2889: Long = x2888.toLong
          val x2890: Boolean = x2877 >= x2889
x2890}
          val x2894: Unit = if (x2891) {          val x2892: Int = x2877.toInt
          val x2893: Unit = throw new ArrayIndexOutOfBoundsException(x2892)
x2893} else {()}
          val x2895: Long = 4 * x2877
          val x2896: Long = 24 + x2895
          val x2897: Int = unsafe.getInt(x2876,x2896)
          val x2898: Boolean = x2897 < p11_3
          val x2901: Unit = if (x2898) {          val x2899: Unit = block_541(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2899} else {          val x2900: Unit = block_542(r,p11_0,p11_1,p11_2,p11_3,0,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2900}
x2901
}
// *** begin block 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_533(r:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Object,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2902: Unit = block_543(r,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p9_3,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2902
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_534(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2903: Boolean = 65536 > p11_3
          val x2906: Unit = if (x2903) {          val x2904: Unit = block_544(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2904} else {          val x2905: Unit = block_545(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2905}
x2906
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_535(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2907: Int = -p11_3
          val x2908: Boolean = 65536 > x2907
          val x2911: Unit = if (x2908) {          val x2909: Unit = block_544(r,p11_0,p11_1,p11_2,x2907,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2909} else {          val x2910: Unit = block_545(r,p11_0,p11_1,p11_2,x2907,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2910}
x2911
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_536(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2912: Int = 52429 * p11_3
          val x2913: Int = x2912 >>> 19
          val x2914: Int = x2913 << 3
          val x2915: Int = x2913 << 1
          val x2916: Int = x2915 + x2914
          val x2917: Int = -x2916
          val x2918: Int = x2917 + p11_3
          val x2919: Int = p11_8 + -1
          val x2920: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x2921: Long = x2918.toLong
          val x2922: Boolean = x2920 eq null
          val x2924: Object = if (x2922) {          val x2923: Object = throw new NullPointerException()
x2923} else {x2920}
          val x2925: java.lang.Class[Object] = x2920.getClass.asInstanceOf[Class[Object]]
          val x2926: Boolean = x2925.isArray
          val x2927: Boolean = if (x2926) {false} else {true}
          val x2930: Unit = if (x2927) {          val x2928: java.lang.String = x2925.getName
          val x2929: Unit = throw new ArrayStoreException(x2928)
x2929} else {()}
          val x2931: Boolean = x2921 < 0
          val x2935: Boolean = if (x2931) {x2931} else {          val x2932: Int = java.lang.reflect.Array.getLength(x2920)
          val x2933: Long = x2932.toLong
          val x2934: Boolean = x2921 >= x2933
x2934}
          val x2938: Unit = if (x2935) {          val x2936: Int = x2921.toInt
          val x2937: Unit = throw new ArrayIndexOutOfBoundsException(x2936)
x2937} else {()}
          val x2939: Long = 2 * x2921
          val x2940: Long = 24 + x2939
          val x2941: Char = unsafe.getChar(x2920,x2940)
          val x2942: Int = x2941.toInt
          val x2943: Char = x2942.toChar
          val x2944: Long = x2919.toLong
          val x2945: Boolean = p11_5 eq null
          val x2947: Object = if (x2945) {          val x2946: Object = throw new NullPointerException()
x2946} else {p11_5}
          val x2948: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2949: Boolean = x2948.isArray
          val x2950: Boolean = if (x2949) {false} else {true}
          val x2953: Unit = if (x2950) {          val x2951: java.lang.String = x2948.getName
          val x2952: Unit = throw new ArrayStoreException(x2951)
x2952} else {()}
          val x2954: Boolean = x2944 < 0
          val x2958: Boolean = if (x2954) {x2954} else {          val x2955: Int = java.lang.reflect.Array.getLength(p11_5)
          val x2956: Long = x2955.toLong
          val x2957: Boolean = x2944 >= x2956
x2957}
          val x2961: Unit = if (x2958) {          val x2959: Int = x2944.toInt
          val x2960: Unit = throw new ArrayIndexOutOfBoundsException(x2959)
x2960} else {()}
          val x2962: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x2963: java.lang.Class[Object] = x2962.getComponentType.asInstanceOf[Class[Object]]
          val x2964: Boolean = x2963.isAssignableFrom(classOf[Char])
          val x2965: Boolean = if (x2964) {false} else {true}
          val x2967: Unit = if (x2965) {          val x2966: Unit = throw new ArrayStoreException("char")
x2966} else {()}
          val x2968: Long = 2 * x2944
          val x2969: Long = 24 + x2968
          val x2970: Unit = unsafe.putChar(p11_5,x2969, x2943)
          val x2971: Boolean = x2913 != 0
          val x2974: Unit = if (x2971) {          val x2972: Unit = block_536(r,p11_0,p11_1,p11_2,x2913,p11_4,p11_5,x2913,x2918,x2919,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2972} else {          val x2973: Unit = block_546(r,p11_0,p11_1,p11_2,x2913,p11_4,p11_5,x2913,x2918,x2919,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x2973}
x2974
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_537(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x2975: Int = p11_3 / 100
          val x2976: Int = x2975 << 6
          val x2977: Int = x2975 << 5
          val x2978: Int = x2977 + x2976
          val x2979: Int = x2975 << 2
          val x2980: Int = x2979 + x2978
          val x2981: Int = -x2980
          val x2982: Int = x2981 + p11_3
          val x2983: Int = p11_8 + -1
          val x2984: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x2985: Long = x2982.toLong
          val x2986: Boolean = x2984 eq null
          val x2988: Object = if (x2986) {          val x2987: Object = throw new NullPointerException()
x2987} else {x2984}
          val x2989: java.lang.Class[Object] = x2984.getClass.asInstanceOf[Class[Object]]
          val x2990: Boolean = x2989.isArray
          val x2991: Boolean = if (x2990) {false} else {true}
          val x2994: Unit = if (x2991) {          val x2992: java.lang.String = x2989.getName
          val x2993: Unit = throw new ArrayStoreException(x2992)
x2993} else {()}
          val x2995: Boolean = x2985 < 0
          val x2999: Boolean = if (x2995) {x2995} else {          val x2996: Int = java.lang.reflect.Array.getLength(x2984)
          val x2997: Long = x2996.toLong
          val x2998: Boolean = x2985 >= x2997
x2998}
          val x3002: Unit = if (x2999) {          val x3000: Int = x2985.toInt
          val x3001: Unit = throw new ArrayIndexOutOfBoundsException(x3000)
x3001} else {()}
          val x3003: Long = 2 * x2985
          val x3004: Long = 24 + x3003
          val x3005: Char = unsafe.getChar(x2984,x3004)
          val x3006: Int = x3005.toInt
          val x3007: Char = x3006.toChar
          val x3008: Long = x2983.toLong
          val x3009: Boolean = p11_5 eq null
          val x3011: Object = if (x3009) {          val x3010: Object = throw new NullPointerException()
x3010} else {p11_5}
          val x3012: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3013: Boolean = x3012.isArray
          val x3014: Boolean = if (x3013) {false} else {true}
          val x3017: Unit = if (x3014) {          val x3015: java.lang.String = x3012.getName
          val x3016: Unit = throw new ArrayStoreException(x3015)
x3016} else {()}
          val x3018: Boolean = x3008 < 0
          val x3022: Boolean = if (x3018) {x3018} else {          val x3019: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3020: Long = x3019.toLong
          val x3021: Boolean = x3008 >= x3020
x3021}
          val x3025: Unit = if (x3022) {          val x3023: Int = x3008.toInt
          val x3024: Unit = throw new ArrayIndexOutOfBoundsException(x3023)
x3024} else {()}
          val x3026: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3027: java.lang.Class[Object] = x3026.getComponentType.asInstanceOf[Class[Object]]
          val x3028: Boolean = x3027.isAssignableFrom(classOf[Char])
          val x3029: Boolean = if (x3028) {false} else {true}
          val x3031: Unit = if (x3029) {          val x3030: Unit = throw new ArrayStoreException("char")
x3030} else {()}
          val x3032: Long = 2 * x3008
          val x3033: Long = 24 + x3032
          val x3034: Unit = unsafe.putChar(p11_5,x3033, x3007)
          val x3035: Int = x2983 + -1
          val x3036: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x3037: Long = x2982.toLong
          val x3038: Boolean = x3036 eq null
          val x3040: Object = if (x3038) {          val x3039: Object = throw new NullPointerException()
x3039} else {x3036}
          val x3041: java.lang.Class[Object] = x3036.getClass.asInstanceOf[Class[Object]]
          val x3042: Boolean = x3041.isArray
          val x3043: Boolean = if (x3042) {false} else {true}
          val x3046: Unit = if (x3043) {          val x3044: java.lang.String = x3041.getName
          val x3045: Unit = throw new ArrayStoreException(x3044)
x3045} else {()}
          val x3047: Boolean = x3037 < 0
          val x3051: Boolean = if (x3047) {x3047} else {          val x3048: Int = java.lang.reflect.Array.getLength(x3036)
          val x3049: Long = x3048.toLong
          val x3050: Boolean = x3037 >= x3049
x3050}
          val x3054: Unit = if (x3051) {          val x3052: Int = x3037.toInt
          val x3053: Unit = throw new ArrayIndexOutOfBoundsException(x3052)
x3053} else {()}
          val x3055: Long = 2 * x3037
          val x3056: Long = 24 + x3055
          val x3057: Char = unsafe.getChar(x3036,x3056)
          val x3058: Int = x3057.toInt
          val x3059: Char = x3058.toChar
          val x3060: Long = x3035.toLong
          val x3061: Boolean = p11_5 eq null
          val x3063: Object = if (x3061) {          val x3062: Object = throw new NullPointerException()
x3062} else {p11_5}
          val x3064: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3065: Boolean = x3064.isArray
          val x3066: Boolean = if (x3065) {false} else {true}
          val x3069: Unit = if (x3066) {          val x3067: java.lang.String = x3064.getName
          val x3068: Unit = throw new ArrayStoreException(x3067)
x3068} else {()}
          val x3070: Boolean = x3060 < 0
          val x3074: Boolean = if (x3070) {x3070} else {          val x3071: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3072: Long = x3071.toLong
          val x3073: Boolean = x3060 >= x3072
x3073}
          val x3077: Unit = if (x3074) {          val x3075: Int = x3060.toInt
          val x3076: Unit = throw new ArrayIndexOutOfBoundsException(x3075)
x3076} else {()}
          val x3078: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3079: java.lang.Class[Object] = x3078.getComponentType.asInstanceOf[Class[Object]]
          val x3080: Boolean = x3079.isAssignableFrom(classOf[Char])
          val x3081: Boolean = if (x3080) {false} else {true}
          val x3083: Unit = if (x3081) {          val x3082: Unit = throw new ArrayStoreException("char")
x3082} else {()}
          val x3084: Long = 2 * x3060
          val x3085: Long = 24 + x3084
          val x3086: Unit = unsafe.putChar(p11_5,x3085, x3059)
          val x3087: Unit = block_527(r,p11_0,p11_1,p11_2,x2975,p11_4,p11_5,x2975,x2982,x3035,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3087
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_538(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3088: Unit = block_547(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3088
}
// *** begin block 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_539(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3089: Int = p11_4 + 1
          val x3090: Unit = block_548(r,p11_0,p11_1,p11_2,p11_3,x3089,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3090
}
// *** begin block 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_540(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3091: Int = 1 + p11_4
          val x3092: Unit = block_549(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3091,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3092
}
// *** begin block 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_541(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3093: Int = p11_4 + 1
          val x3094: Unit = block_550(r,p11_0,p11_1,p11_2,p11_3,x3093,p11_5,p11_6,p11_7,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3094
}
// *** begin block 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_542(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3095: Int = 1 + p11_4
          val x3096: Unit = block_551(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3095,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3096
}
// *** begin block 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_543(r:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Object,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3097: Boolean = p8_10 eq null
          val x3099: Object = if (x3097) {          val x3098: Object = throw new NullPointerException()
x3098} else {p8_10}
// *** RECURSIVE: HotSpotMethod<StringBuilder.toString> ***
          val x3100: Unit = throw new Exception("RECURSIVE: HotSpotMethod<StringBuilder.toString>")
x3100
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_544(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3101: Int = 52429 * p11_3
          val x3102: Int = x3101 >>> 19
          val x3103: Int = x3102 << 3
          val x3104: Int = x3102 << 1
          val x3105: Int = x3104 + x3103
          val x3106: Int = -x3105
          val x3107: Int = x3106 + p11_3
          val x3108: Int = p11_8 + -1
          val x3109: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x3110: Long = x3107.toLong
          val x3111: Boolean = x3109 eq null
          val x3113: Object = if (x3111) {          val x3112: Object = throw new NullPointerException()
x3112} else {x3109}
          val x3114: java.lang.Class[Object] = x3109.getClass.asInstanceOf[Class[Object]]
          val x3115: Boolean = x3114.isArray
          val x3116: Boolean = if (x3115) {false} else {true}
          val x3119: Unit = if (x3116) {          val x3117: java.lang.String = x3114.getName
          val x3118: Unit = throw new ArrayStoreException(x3117)
x3118} else {()}
          val x3120: Boolean = x3110 < 0
          val x3124: Boolean = if (x3120) {x3120} else {          val x3121: Int = java.lang.reflect.Array.getLength(x3109)
          val x3122: Long = x3121.toLong
          val x3123: Boolean = x3110 >= x3122
x3123}
          val x3127: Unit = if (x3124) {          val x3125: Int = x3110.toInt
          val x3126: Unit = throw new ArrayIndexOutOfBoundsException(x3125)
x3126} else {()}
          val x3128: Long = 2 * x3110
          val x3129: Long = 24 + x3128
          val x3130: Char = unsafe.getChar(x3109,x3129)
          val x3131: Int = x3130.toInt
          val x3132: Char = x3131.toChar
          val x3133: Long = x3108.toLong
          val x3134: Boolean = p11_5 eq null
          val x3136: Object = if (x3134) {          val x3135: Object = throw new NullPointerException()
x3135} else {p11_5}
          val x3137: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3138: Boolean = x3137.isArray
          val x3139: Boolean = if (x3138) {false} else {true}
          val x3142: Unit = if (x3139) {          val x3140: java.lang.String = x3137.getName
          val x3141: Unit = throw new ArrayStoreException(x3140)
x3141} else {()}
          val x3143: Boolean = x3133 < 0
          val x3147: Boolean = if (x3143) {x3143} else {          val x3144: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3145: Long = x3144.toLong
          val x3146: Boolean = x3133 >= x3145
x3146}
          val x3150: Unit = if (x3147) {          val x3148: Int = x3133.toInt
          val x3149: Unit = throw new ArrayIndexOutOfBoundsException(x3148)
x3149} else {()}
          val x3151: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3152: java.lang.Class[Object] = x3151.getComponentType.asInstanceOf[Class[Object]]
          val x3153: Boolean = x3152.isAssignableFrom(classOf[Char])
          val x3154: Boolean = if (x3153) {false} else {true}
          val x3156: Unit = if (x3154) {          val x3155: Unit = throw new ArrayStoreException("char")
x3155} else {()}
          val x3157: Long = 2 * x3133
          val x3158: Long = 24 + x3157
          val x3159: Unit = unsafe.putChar(p11_5,x3158, x3132)
          val x3160: Boolean = x3102 != 0
          val x3163: Unit = if (x3160) {          val x3161: Unit = block_544(r,p11_0,p11_1,p11_2,x3102,p11_4,p11_5,x3102,x3107,x3108,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3161} else {          val x3162: Unit = block_552(r,p11_0,p11_1,p11_2,x3102,p11_4,p11_5,x3102,x3107,x3108,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3162}
x3163
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_545(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3164: Int = p11_3 / 100
          val x3165: Int = x3164 << 6
          val x3166: Int = x3164 << 5
          val x3167: Int = x3166 + x3165
          val x3168: Int = x3164 << 2
          val x3169: Int = x3168 + x3167
          val x3170: Int = -x3169
          val x3171: Int = x3170 + p11_3
          val x3172: Int = p11_8 + -1
          val x3173: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x3174: Long = x3171.toLong
          val x3175: Boolean = x3173 eq null
          val x3177: Object = if (x3175) {          val x3176: Object = throw new NullPointerException()
x3176} else {x3173}
          val x3178: java.lang.Class[Object] = x3173.getClass.asInstanceOf[Class[Object]]
          val x3179: Boolean = x3178.isArray
          val x3180: Boolean = if (x3179) {false} else {true}
          val x3183: Unit = if (x3180) {          val x3181: java.lang.String = x3178.getName
          val x3182: Unit = throw new ArrayStoreException(x3181)
x3182} else {()}
          val x3184: Boolean = x3174 < 0
          val x3188: Boolean = if (x3184) {x3184} else {          val x3185: Int = java.lang.reflect.Array.getLength(x3173)
          val x3186: Long = x3185.toLong
          val x3187: Boolean = x3174 >= x3186
x3187}
          val x3191: Unit = if (x3188) {          val x3189: Int = x3174.toInt
          val x3190: Unit = throw new ArrayIndexOutOfBoundsException(x3189)
x3190} else {()}
          val x3192: Long = 2 * x3174
          val x3193: Long = 24 + x3192
          val x3194: Char = unsafe.getChar(x3173,x3193)
          val x3195: Int = x3194.toInt
          val x3196: Char = x3195.toChar
          val x3197: Long = x3172.toLong
          val x3198: Boolean = p11_5 eq null
          val x3200: Object = if (x3198) {          val x3199: Object = throw new NullPointerException()
x3199} else {p11_5}
          val x3201: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3202: Boolean = x3201.isArray
          val x3203: Boolean = if (x3202) {false} else {true}
          val x3206: Unit = if (x3203) {          val x3204: java.lang.String = x3201.getName
          val x3205: Unit = throw new ArrayStoreException(x3204)
x3205} else {()}
          val x3207: Boolean = x3197 < 0
          val x3211: Boolean = if (x3207) {x3207} else {          val x3208: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3209: Long = x3208.toLong
          val x3210: Boolean = x3197 >= x3209
x3210}
          val x3214: Unit = if (x3211) {          val x3212: Int = x3197.toInt
          val x3213: Unit = throw new ArrayIndexOutOfBoundsException(x3212)
x3213} else {()}
          val x3215: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3216: java.lang.Class[Object] = x3215.getComponentType.asInstanceOf[Class[Object]]
          val x3217: Boolean = x3216.isAssignableFrom(classOf[Char])
          val x3218: Boolean = if (x3217) {false} else {true}
          val x3220: Unit = if (x3218) {          val x3219: Unit = throw new ArrayStoreException("char")
x3219} else {()}
          val x3221: Long = 2 * x3197
          val x3222: Long = 24 + x3221
          val x3223: Unit = unsafe.putChar(p11_5,x3222, x3196)
          val x3224: Int = x3172 + -1
          val x3225: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x3226: Long = x3171.toLong
          val x3227: Boolean = x3225 eq null
          val x3229: Object = if (x3227) {          val x3228: Object = throw new NullPointerException()
x3228} else {x3225}
          val x3230: java.lang.Class[Object] = x3225.getClass.asInstanceOf[Class[Object]]
          val x3231: Boolean = x3230.isArray
          val x3232: Boolean = if (x3231) {false} else {true}
          val x3235: Unit = if (x3232) {          val x3233: java.lang.String = x3230.getName
          val x3234: Unit = throw new ArrayStoreException(x3233)
x3234} else {()}
          val x3236: Boolean = x3226 < 0
          val x3240: Boolean = if (x3236) {x3236} else {          val x3237: Int = java.lang.reflect.Array.getLength(x3225)
          val x3238: Long = x3237.toLong
          val x3239: Boolean = x3226 >= x3238
x3239}
          val x3243: Unit = if (x3240) {          val x3241: Int = x3226.toInt
          val x3242: Unit = throw new ArrayIndexOutOfBoundsException(x3241)
x3242} else {()}
          val x3244: Long = 2 * x3226
          val x3245: Long = 24 + x3244
          val x3246: Char = unsafe.getChar(x3225,x3245)
          val x3247: Int = x3246.toInt
          val x3248: Char = x3247.toChar
          val x3249: Long = x3224.toLong
          val x3250: Boolean = p11_5 eq null
          val x3252: Object = if (x3250) {          val x3251: Object = throw new NullPointerException()
x3251} else {p11_5}
          val x3253: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3254: Boolean = x3253.isArray
          val x3255: Boolean = if (x3254) {false} else {true}
          val x3258: Unit = if (x3255) {          val x3256: java.lang.String = x3253.getName
          val x3257: Unit = throw new ArrayStoreException(x3256)
x3257} else {()}
          val x3259: Boolean = x3249 < 0
          val x3263: Boolean = if (x3259) {x3259} else {          val x3260: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3261: Long = x3260.toLong
          val x3262: Boolean = x3249 >= x3261
x3262}
          val x3266: Unit = if (x3263) {          val x3264: Int = x3249.toInt
          val x3265: Unit = throw new ArrayIndexOutOfBoundsException(x3264)
x3265} else {()}
          val x3267: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3268: java.lang.Class[Object] = x3267.getComponentType.asInstanceOf[Class[Object]]
          val x3269: Boolean = x3268.isAssignableFrom(classOf[Char])
          val x3270: Boolean = if (x3269) {false} else {true}
          val x3272: Unit = if (x3270) {          val x3271: Unit = throw new ArrayStoreException("char")
x3271} else {()}
          val x3273: Long = 2 * x3249
          val x3274: Long = 24 + x3273
          val x3275: Unit = unsafe.putChar(p11_5,x3274, x3248)
          val x3276: Unit = block_534(r,p11_0,p11_1,p11_2,x3164,p11_4,p11_5,x3164,x3171,x3224,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3276
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_546(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3277: Unit = block_553(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3277
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_547(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3278: Boolean = p11_9 == 0
          val x3281: Unit = if (x3278) {          val x3279: Unit = block_554(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3279} else {          val x3280: Unit = block_555(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3280}
x3281
}
// *** begin block 2:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_548(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3282: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x3283: Long = p11_4.toLong
          val x3284: Boolean = x3282 eq null
          val x3286: Object = if (x3284) {          val x3285: Object = throw new NullPointerException()
x3285} else {x3282}
          val x3287: java.lang.Class[Object] = x3282.getClass.asInstanceOf[Class[Object]]
          val x3288: Boolean = x3287.isArray
          val x3289: Boolean = if (x3288) {false} else {true}
          val x3292: Unit = if (x3289) {          val x3290: java.lang.String = x3287.getName
          val x3291: Unit = throw new ArrayStoreException(x3290)
x3291} else {()}
          val x3293: Boolean = x3283 < 0
          val x3297: Boolean = if (x3293) {x3293} else {          val x3294: Int = java.lang.reflect.Array.getLength(x3282)
          val x3295: Long = x3294.toLong
          val x3296: Boolean = x3283 >= x3295
x3296}
          val x3300: Unit = if (x3297) {          val x3298: Int = x3283.toInt
          val x3299: Unit = throw new ArrayIndexOutOfBoundsException(x3298)
x3299} else {()}
          val x3301: Long = 4 * x3283
          val x3302: Long = 24 + x3301
          val x3303: Int = unsafe.getInt(x3282,x3302)
          val x3304: Boolean = x3303 < p11_3
          val x3307: Unit = if (x3304) {          val x3305: Unit = block_539(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3305} else {          val x3306: Unit = block_540(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3306}
x3307
}
// *** begin block 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_549(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3308: Boolean = p10_3 eq null
          val x3310: Object = if (x3308) {          val x3309: Object = throw new NullPointerException()
x3309} else {p10_3}
          val x3311: Int = unsafe.getInt(x3310,16)
          val x3312: Int = p10_7 + x3311
          val x3313: Boolean = p10_3 eq null
          val x3315: Object = if (x3313) {          val x3314: Object = throw new NullPointerException()
x3314} else {p10_3}
          val x3316: Unit = block_556(null,null,null,null,p10_3,x3312,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_7,x3312,null,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3316
}
// *** begin block 2:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_550(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Any,p11_6:Any,p11_7:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3317: Object = unsafe.getObject(Class.forName("java.lang.Integer"),232)
          val x3318: Long = p11_4.toLong
          val x3319: Boolean = x3317 eq null
          val x3321: Object = if (x3319) {          val x3320: Object = throw new NullPointerException()
x3320} else {x3317}
          val x3322: java.lang.Class[Object] = x3317.getClass.asInstanceOf[Class[Object]]
          val x3323: Boolean = x3322.isArray
          val x3324: Boolean = if (x3323) {false} else {true}
          val x3327: Unit = if (x3324) {          val x3325: java.lang.String = x3322.getName
          val x3326: Unit = throw new ArrayStoreException(x3325)
x3326} else {()}
          val x3328: Boolean = x3318 < 0
          val x3332: Boolean = if (x3328) {x3328} else {          val x3329: Int = java.lang.reflect.Array.getLength(x3317)
          val x3330: Long = x3329.toLong
          val x3331: Boolean = x3318 >= x3330
x3331}
          val x3335: Unit = if (x3332) {          val x3333: Int = x3318.toInt
          val x3334: Unit = throw new ArrayIndexOutOfBoundsException(x3333)
x3334} else {()}
          val x3336: Long = 4 * x3318
          val x3337: Long = 24 + x3336
          val x3338: Int = unsafe.getInt(x3317,x3337)
          val x3339: Boolean = x3338 < p11_3
          val x3342: Unit = if (x3339) {          val x3340: Unit = block_541(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3340} else {          val x3341: Unit = block_542(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 11:<Integer.stringSize>(I)I // 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3341}
x3342
}
// *** begin block 24:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_551(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Any,p10_6:Any,p10_7:Int,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3343: Int = 1 + p10_7
          val x3344: Unit = block_549(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,x3343,null,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 33:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3344
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_552(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3345: Unit = block_557(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3345
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_553(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3346: Boolean = p11_9 == 0
          val x3349: Unit = if (x3346) {          val x3347: Unit = block_558(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3347} else {          val x3348: Unit = block_559(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3348}
x3349
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_554(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3350: Unit = block_560(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3350
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_555(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3351: Int = p11_8 + -1
          val x3352: Char = p11_9.toChar
          val x3353: Long = x3351.toLong
          val x3354: Boolean = p11_5 eq null
          val x3356: Object = if (x3354) {          val x3355: Object = throw new NullPointerException()
x3355} else {p11_5}
          val x3357: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3358: Boolean = x3357.isArray
          val x3359: Boolean = if (x3358) {false} else {true}
          val x3362: Unit = if (x3359) {          val x3360: java.lang.String = x3357.getName
          val x3361: Unit = throw new ArrayStoreException(x3360)
x3361} else {()}
          val x3363: Boolean = x3353 < 0
          val x3367: Boolean = if (x3363) {x3363} else {          val x3364: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3365: Long = x3364.toLong
          val x3366: Boolean = x3353 >= x3365
x3366}
          val x3370: Unit = if (x3367) {          val x3368: Int = x3353.toInt
          val x3369: Unit = throw new ArrayIndexOutOfBoundsException(x3368)
x3369} else {()}
          val x3371: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3372: java.lang.Class[Object] = x3371.getComponentType.asInstanceOf[Class[Object]]
          val x3373: Boolean = x3372.isAssignableFrom(classOf[Char])
          val x3374: Boolean = if (x3373) {false} else {true}
          val x3376: Unit = if (x3374) {          val x3375: Unit = throw new ArrayStoreException("char")
x3375} else {()}
          val x3377: Long = 2 * x3353
          val x3378: Long = 24 + x3377
          val x3379: Unit = unsafe.putChar(p11_5,x3378, x3352)
          val x3380: Unit = block_560(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3380
}
// *** begin block 0:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_556(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3381: Boolean = p11_3 eq null
          val x3383: Object = if (x3381) {          val x3382: Object = throw new NullPointerException()
x3382} else {p11_3}
          val x3384: Object = unsafe.getObject(x3383,24)
          val x3385: Boolean = x3384 eq null
          val x3387: Object = if (x3385) {          val x3386: Object = throw new NullPointerException()
x3386} else {x3384}
          val x3388: Int = java.lang.reflect.Array.getLength(x3387)
          val x3389: Int = -x3388
          val x3390: Int = x3389 + p11_4
          val x3391: Boolean = x3390 <= 0
          val x3394: Unit = if (x3391) {          val x3392: Unit = block_561(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3392} else {          val x3393: Unit = block_562(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3393}
x3394
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_557(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3395: Boolean = p11_9 == 0
          val x3398: Unit = if (x3395) {          val x3396: Unit = block_563(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3396} else {          val x3397: Unit = block_564(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3397}
x3398
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_558(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3399: Unit = block_565(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3399
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_559(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3400: Int = p11_8 + -1
          val x3401: Char = p11_9.toChar
          val x3402: Long = x3400.toLong
          val x3403: Boolean = p11_5 eq null
          val x3405: Object = if (x3403) {          val x3404: Object = throw new NullPointerException()
x3404} else {p11_5}
          val x3406: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3407: Boolean = x3406.isArray
          val x3408: Boolean = if (x3407) {false} else {true}
          val x3411: Unit = if (x3408) {          val x3409: java.lang.String = x3406.getName
          val x3410: Unit = throw new ArrayStoreException(x3409)
x3410} else {()}
          val x3412: Boolean = x3402 < 0
          val x3416: Boolean = if (x3412) {x3412} else {          val x3413: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3414: Long = x3413.toLong
          val x3415: Boolean = x3402 >= x3414
x3415}
          val x3419: Unit = if (x3416) {          val x3417: Int = x3402.toInt
          val x3418: Unit = throw new ArrayIndexOutOfBoundsException(x3417)
x3418} else {()}
          val x3420: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3421: java.lang.Class[Object] = x3420.getComponentType.asInstanceOf[Class[Object]]
          val x3422: Boolean = x3421.isAssignableFrom(classOf[Char])
          val x3423: Boolean = if (x3422) {false} else {true}
          val x3425: Unit = if (x3423) {          val x3424: Unit = throw new ArrayStoreException("char")
x3424} else {()}
          val x3426: Long = 2 * x3402
          val x3427: Long = 24 + x3426
          val x3428: Unit = unsafe.putChar(p11_5,x3427, x3401)
          val x3429: Unit = block_565(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3429
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_560(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3430: Boolean = p10_3 eq null
          val x3432: Object = if (x3430) {          val x3431: Object = throw new NullPointerException()
x3431} else {p10_3}
          val x3433: Unit = unsafe.putInt(x3432,16, p10_6)
          val x3434: Unit = block_444(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 21:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3434
}
// *** begin block 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_561(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3435: Unit = block_566(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3435
}
// *** begin block 10:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_562(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Object,p11_4:Int,p11_5:Any,p11_6:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3436: Boolean = p11_3 eq null
          val x3438: Object = if (x3436) {          val x3437: Object = throw new NullPointerException()
x3437} else {p11_3}
          val x3439: Unit = CONST_4.invoke(p11_3.asInstanceOf[AnyRef],p11_4.asInstanceOf[AnyRef]) // java.lang.AbstractStringBuilder.expandCapacity
          val x3440: Unit = block_561(r,p11_0,p11_1,p11_2,p11_3,p11_4,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 15:<AbstractStringBuilder.ensureCapacityInternal>(I)V // 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3440
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_563(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3441: Unit = block_567(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3441
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_564(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3442: Int = p11_8 + -1
          val x3443: Char = p11_9.toChar
          val x3444: Long = x3442.toLong
          val x3445: Boolean = p11_5 eq null
          val x3447: Object = if (x3445) {          val x3446: Object = throw new NullPointerException()
x3446} else {p11_5}
          val x3448: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3449: Boolean = x3448.isArray
          val x3450: Boolean = if (x3449) {false} else {true}
          val x3453: Unit = if (x3450) {          val x3451: java.lang.String = x3448.getName
          val x3452: Unit = throw new ArrayStoreException(x3451)
x3452} else {()}
          val x3454: Boolean = x3444 < 0
          val x3458: Boolean = if (x3454) {x3454} else {          val x3455: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3456: Long = x3455.toLong
          val x3457: Boolean = x3444 >= x3456
x3457}
          val x3461: Unit = if (x3458) {          val x3459: Int = x3444.toInt
          val x3460: Unit = throw new ArrayIndexOutOfBoundsException(x3459)
x3460} else {()}
          val x3462: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3463: java.lang.Class[Object] = x3462.getComponentType.asInstanceOf[Class[Object]]
          val x3464: Boolean = x3463.isAssignableFrom(classOf[Char])
          val x3465: Boolean = if (x3464) {false} else {true}
          val x3467: Unit = if (x3465) {          val x3466: Unit = throw new ArrayStoreException("char")
x3466} else {()}
          val x3468: Long = 2 * x3444
          val x3469: Long = 24 + x3468
          val x3470: Unit = unsafe.putChar(p11_5,x3469, x3443)
          val x3471: Unit = block_567(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3471
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_565(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3472: Boolean = p10_3 eq null
          val x3474: Object = if (x3472) {          val x3473: Object = throw new NullPointerException()
x3473} else {p10_3}
          val x3475: Unit = unsafe.putInt(x3474,16, p10_6)
          val x3476: Unit = block_454(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 34:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3476
}
// *** begin block 46:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_566(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3477: Boolean = p10_3 eq null
          val x3479: Object = if (x3477) {          val x3478: Object = throw new NullPointerException()
x3478} else {p10_3}
          val x3480: Object = unsafe.getObject(x3479,24)
          val x3481: Unit = block_568(null,null,null,null,p10_4,p10_6,x3480,null,null,null,null,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,null,null,null,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3481
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_567(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Object,p8_6:Any,p8_7:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3482: Boolean = p10_3 eq null
          val x3484: Object = if (x3482) {          val x3483: Object = throw new NullPointerException()
x3483} else {p10_3}
          val x3485: Unit = unsafe.putInt(x3484,16, p10_6)
          val x3486: Unit = block_466(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 17:<StringIndexOutOfBoundsException.<init>>(I)V // 53:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3486
}
// *** begin block 0:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_568(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Any,p11_9:Any,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3487: Boolean = p11_3 >= 0
          val x3490: Unit = if (x3487) {          val x3488: Unit = block_569(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3488} else {          val x3489: Unit = block_570(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_4,0,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3489}
x3490
}
// *** begin block 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_569(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3491: Boolean = 65536 > p11_3
          val x3494: Unit = if (x3491) {          val x3492: Unit = block_571(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3492} else {          val x3493: Unit = block_572(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3493}
x3494
}
// *** begin block 10:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_570(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3495: Int = -p11_3
          val x3496: Boolean = 65536 > x3495
          val x3499: Unit = if (x3496) {          val x3497: Unit = block_571(r,p11_0,p11_1,p11_2,x3495,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3497} else {          val x3498: Unit = block_572(r,p11_0,p11_1,p11_2,x3495,p11_4,p11_5,p11_6,p11_7,p11_8,45,null,null,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3498}
x3499
}
// *** begin block 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_571(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3500: Int = 52429 * p11_3
          val x3501: Int = x3500 >>> 19
          val x3502: Int = x3501 << 3
          val x3503: Int = x3501 << 1
          val x3504: Int = x3503 + x3502
          val x3505: Int = -x3504
          val x3506: Int = x3505 + p11_3
          val x3507: Int = p11_8 + -1
          val x3508: Object = unsafe.getObject(Class.forName("java.lang.Integer"),208)
          val x3509: Long = x3506.toLong
          val x3510: Boolean = x3508 eq null
          val x3512: Object = if (x3510) {          val x3511: Object = throw new NullPointerException()
x3511} else {x3508}
          val x3513: java.lang.Class[Object] = x3508.getClass.asInstanceOf[Class[Object]]
          val x3514: Boolean = x3513.isArray
          val x3515: Boolean = if (x3514) {false} else {true}
          val x3518: Unit = if (x3515) {          val x3516: java.lang.String = x3513.getName
          val x3517: Unit = throw new ArrayStoreException(x3516)
x3517} else {()}
          val x3519: Boolean = x3509 < 0
          val x3523: Boolean = if (x3519) {x3519} else {          val x3520: Int = java.lang.reflect.Array.getLength(x3508)
          val x3521: Long = x3520.toLong
          val x3522: Boolean = x3509 >= x3521
x3522}
          val x3526: Unit = if (x3523) {          val x3524: Int = x3509.toInt
          val x3525: Unit = throw new ArrayIndexOutOfBoundsException(x3524)
x3525} else {()}
          val x3527: Long = 2 * x3509
          val x3528: Long = 24 + x3527
          val x3529: Char = unsafe.getChar(x3508,x3528)
          val x3530: Int = x3529.toInt
          val x3531: Char = x3530.toChar
          val x3532: Long = x3507.toLong
          val x3533: Boolean = p11_5 eq null
          val x3535: Object = if (x3533) {          val x3534: Object = throw new NullPointerException()
x3534} else {p11_5}
          val x3536: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3537: Boolean = x3536.isArray
          val x3538: Boolean = if (x3537) {false} else {true}
          val x3541: Unit = if (x3538) {          val x3539: java.lang.String = x3536.getName
          val x3540: Unit = throw new ArrayStoreException(x3539)
x3540} else {()}
          val x3542: Boolean = x3532 < 0
          val x3546: Boolean = if (x3542) {x3542} else {          val x3543: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3544: Long = x3543.toLong
          val x3545: Boolean = x3532 >= x3544
x3545}
          val x3549: Unit = if (x3546) {          val x3547: Int = x3532.toInt
          val x3548: Unit = throw new ArrayIndexOutOfBoundsException(x3547)
x3548} else {()}
          val x3550: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3551: java.lang.Class[Object] = x3550.getComponentType.asInstanceOf[Class[Object]]
          val x3552: Boolean = x3551.isAssignableFrom(classOf[Char])
          val x3553: Boolean = if (x3552) {false} else {true}
          val x3555: Unit = if (x3553) {          val x3554: Unit = throw new ArrayStoreException("char")
x3554} else {()}
          val x3556: Long = 2 * x3532
          val x3557: Long = 24 + x3556
          val x3558: Unit = unsafe.putChar(p11_5,x3557, x3531)
          val x3559: Boolean = x3501 != 0
          val x3562: Unit = if (x3559) {          val x3560: Unit = block_571(r,p11_0,p11_1,p11_2,x3501,p11_4,p11_5,x3501,x3506,x3507,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 75:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3560} else {          val x3561: Unit = block_573(r,p11_0,p11_1,p11_2,x3501,p11_4,p11_5,x3501,x3506,x3507,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3561}
x3562
}
// *** begin block 23:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_572(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Any,p11_7:Any,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3563: Int = p11_3 / 100
          val x3564: Int = x3563 << 6
          val x3565: Int = x3563 << 5
          val x3566: Int = x3565 + x3564
          val x3567: Int = x3563 << 2
          val x3568: Int = x3567 + x3566
          val x3569: Int = -x3568
          val x3570: Int = x3569 + p11_3
          val x3571: Int = p11_8 + -1
          val x3572: Object = unsafe.getObject(Class.forName("java.lang.Integer"),224)
          val x3573: Long = x3570.toLong
          val x3574: Boolean = x3572 eq null
          val x3576: Object = if (x3574) {          val x3575: Object = throw new NullPointerException()
x3575} else {x3572}
          val x3577: java.lang.Class[Object] = x3572.getClass.asInstanceOf[Class[Object]]
          val x3578: Boolean = x3577.isArray
          val x3579: Boolean = if (x3578) {false} else {true}
          val x3582: Unit = if (x3579) {          val x3580: java.lang.String = x3577.getName
          val x3581: Unit = throw new ArrayStoreException(x3580)
x3581} else {()}
          val x3583: Boolean = x3573 < 0
          val x3587: Boolean = if (x3583) {x3583} else {          val x3584: Int = java.lang.reflect.Array.getLength(x3572)
          val x3585: Long = x3584.toLong
          val x3586: Boolean = x3573 >= x3585
x3586}
          val x3590: Unit = if (x3587) {          val x3588: Int = x3573.toInt
          val x3589: Unit = throw new ArrayIndexOutOfBoundsException(x3588)
x3589} else {()}
          val x3591: Long = 2 * x3573
          val x3592: Long = 24 + x3591
          val x3593: Char = unsafe.getChar(x3572,x3592)
          val x3594: Int = x3593.toInt
          val x3595: Char = x3594.toChar
          val x3596: Long = x3571.toLong
          val x3597: Boolean = p11_5 eq null
          val x3599: Object = if (x3597) {          val x3598: Object = throw new NullPointerException()
x3598} else {p11_5}
          val x3600: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3601: Boolean = x3600.isArray
          val x3602: Boolean = if (x3601) {false} else {true}
          val x3605: Unit = if (x3602) {          val x3603: java.lang.String = x3600.getName
          val x3604: Unit = throw new ArrayStoreException(x3603)
x3604} else {()}
          val x3606: Boolean = x3596 < 0
          val x3610: Boolean = if (x3606) {x3606} else {          val x3607: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3608: Long = x3607.toLong
          val x3609: Boolean = x3596 >= x3608
x3609}
          val x3613: Unit = if (x3610) {          val x3611: Int = x3596.toInt
          val x3612: Unit = throw new ArrayIndexOutOfBoundsException(x3611)
x3612} else {()}
          val x3614: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3615: java.lang.Class[Object] = x3614.getComponentType.asInstanceOf[Class[Object]]
          val x3616: Boolean = x3615.isAssignableFrom(classOf[Char])
          val x3617: Boolean = if (x3616) {false} else {true}
          val x3619: Unit = if (x3617) {          val x3618: Unit = throw new ArrayStoreException("char")
x3618} else {()}
          val x3620: Long = 2 * x3596
          val x3621: Long = 24 + x3620
          val x3622: Unit = unsafe.putChar(p11_5,x3621, x3595)
          val x3623: Int = x3571 + -1
          val x3624: Object = unsafe.getObject(Class.forName("java.lang.Integer"),216)
          val x3625: Long = x3570.toLong
          val x3626: Boolean = x3624 eq null
          val x3628: Object = if (x3626) {          val x3627: Object = throw new NullPointerException()
x3627} else {x3624}
          val x3629: java.lang.Class[Object] = x3624.getClass.asInstanceOf[Class[Object]]
          val x3630: Boolean = x3629.isArray
          val x3631: Boolean = if (x3630) {false} else {true}
          val x3634: Unit = if (x3631) {          val x3632: java.lang.String = x3629.getName
          val x3633: Unit = throw new ArrayStoreException(x3632)
x3633} else {()}
          val x3635: Boolean = x3625 < 0
          val x3639: Boolean = if (x3635) {x3635} else {          val x3636: Int = java.lang.reflect.Array.getLength(x3624)
          val x3637: Long = x3636.toLong
          val x3638: Boolean = x3625 >= x3637
x3638}
          val x3642: Unit = if (x3639) {          val x3640: Int = x3625.toInt
          val x3641: Unit = throw new ArrayIndexOutOfBoundsException(x3640)
x3641} else {()}
          val x3643: Long = 2 * x3625
          val x3644: Long = 24 + x3643
          val x3645: Char = unsafe.getChar(x3624,x3644)
          val x3646: Int = x3645.toInt
          val x3647: Char = x3646.toChar
          val x3648: Long = x3623.toLong
          val x3649: Boolean = p11_5 eq null
          val x3651: Object = if (x3649) {          val x3650: Object = throw new NullPointerException()
x3650} else {p11_5}
          val x3652: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3653: Boolean = x3652.isArray
          val x3654: Boolean = if (x3653) {false} else {true}
          val x3657: Unit = if (x3654) {          val x3655: java.lang.String = x3652.getName
          val x3656: Unit = throw new ArrayStoreException(x3655)
x3656} else {()}
          val x3658: Boolean = x3648 < 0
          val x3662: Boolean = if (x3658) {x3658} else {          val x3659: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3660: Long = x3659.toLong
          val x3661: Boolean = x3648 >= x3660
x3661}
          val x3665: Unit = if (x3662) {          val x3663: Int = x3648.toInt
          val x3664: Unit = throw new ArrayIndexOutOfBoundsException(x3663)
x3664} else {()}
          val x3666: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3667: java.lang.Class[Object] = x3666.getComponentType.asInstanceOf[Class[Object]]
          val x3668: Boolean = x3667.isAssignableFrom(classOf[Char])
          val x3669: Boolean = if (x3668) {false} else {true}
          val x3671: Unit = if (x3669) {          val x3670: Unit = throw new ArrayStoreException("char")
x3670} else {()}
          val x3672: Long = 2 * x3648
          val x3673: Long = 24 + x3672
          val x3674: Unit = unsafe.putChar(p11_5,x3673, x3647)
          val x3675: Unit = block_569(r,p11_0,p11_1,p11_2,x3563,p11_4,p11_5,x3563,x3570,x3623,p11_9,null,null,null,null,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 17:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3675
}
// *** begin block 113:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_573(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3676: Unit = block_574(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,p11_10,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3676
}
// *** begin block 116:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_574(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3677: Boolean = p11_9 == 0
          val x3680: Unit = if (x3677) {          val x3678: Unit = block_575(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3678} else {          val x3679: Unit = block_576(r,p11_0,p11_1,p11_2,p11_3,p11_4,p11_5,p11_6,p11_7,p11_8,p11_9,null,p11_11,p11_12,p11_13,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3679}
x3680
}
// *** begin block 130:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_575(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3681: Unit = block_577(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3681
}
// *** begin block 121:<Integer.getChars>(II[C)V // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_576(r:Any,p11_0:Any,p11_1:Any,p11_2:Any,p11_3:Int,p11_4:Int,p11_5:Object,p11_6:Int,p11_7:Int,p11_8:Int,p11_9:Int,p11_10:Any,p11_11:Any,p11_12:Any,p11_13:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3682: Int = p11_8 + -1
          val x3683: Char = p11_9.toChar
          val x3684: Long = x3682.toLong
          val x3685: Boolean = p11_5 eq null
          val x3687: Object = if (x3685) {          val x3686: Object = throw new NullPointerException()
x3686} else {p11_5}
          val x3688: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3689: Boolean = x3688.isArray
          val x3690: Boolean = if (x3689) {false} else {true}
          val x3693: Unit = if (x3690) {          val x3691: java.lang.String = x3688.getName
          val x3692: Unit = throw new ArrayStoreException(x3691)
x3692} else {()}
          val x3694: Boolean = x3684 < 0
          val x3698: Boolean = if (x3694) {x3694} else {          val x3695: Int = java.lang.reflect.Array.getLength(p11_5)
          val x3696: Long = x3695.toLong
          val x3697: Boolean = x3684 >= x3696
x3697}
          val x3701: Unit = if (x3698) {          val x3699: Int = x3684.toInt
          val x3700: Unit = throw new ArrayIndexOutOfBoundsException(x3699)
x3700} else {()}
          val x3702: java.lang.Class[Object] = p11_5.getClass.asInstanceOf[Class[Object]]
          val x3703: java.lang.Class[Object] = x3702.getComponentType.asInstanceOf[Class[Object]]
          val x3704: Boolean = x3703.isAssignableFrom(classOf[Char])
          val x3705: Boolean = if (x3704) {false} else {true}
          val x3707: Unit = if (x3705) {          val x3706: Unit = throw new ArrayStoreException("char")
x3706} else {()}
          val x3708: Long = 2 * x3684
          val x3709: Long = 24 + x3708
          val x3710: Unit = unsafe.putChar(p11_5,x3709, x3683)
          val x3711: Unit = block_577(r,p10_0,p10_1,p10_2,p10_3,p10_4,p10_5,p10_6,p10_7,p10_8,p10_9,p9_0,p9_1,p9_2,p9_3,p9_4,p9_5,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3711
}
// *** begin block 55:<AbstractStringBuilder.append>(I)Ljava/lang/AbstractStringBuilder; // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
def block_577(r:Any,p10_0:Any,p10_1:Any,p10_2:Any,p10_3:Object,p10_4:Int,p10_5:Int,p10_6:Int,p10_7:Any,p10_8:Any,p10_9:Any,p9_0:Any,p9_1:Any,p9_2:Any,p9_3:Object,p9_4:Int,p9_5:Any,p9_6:Any,p8_0:Any,p8_1:Any,p8_2:Any,p8_3:Object,p8_4:Int,p8_5:Int,p8_6:Int,p8_7:Any,p8_8:Object,p8_9:Object,p8_10:Any,p8_11:Any,p8_12:Any,p8_13:Any,p7_0:Any,p7_1:Any,p7_2:Any,p7_3:Object,p7_4:Object,p7_5:Int,p7_6:Int,p7_7:Object,p7_8:Any,p7_9:Any,p7_10:Any,p7_11:Any,p6_0:Any,p6_1:Any,p6_2:Any,p6_3:Object,p6_4:Object,p6_5:Any,p6_6:Any,p6_7:Any,p6_8:Any,p5_0:Any,p5_1:Any,p5_2:Any,p5_3:Object,p5_4:Any,p4_0:Any,p4_1:Any,p4_2:Any,p4_3:Object,p4_4:Int,p4_5:Object,p4_6:Any,p4_7:Any,p3_0:Any,p3_1:Any,p3_2:Any,p3_3:Object,p3_4:Int,p3_5:Any,p3_6:Any,p2_0:Any,p2_1:Any,p2_2:Any,p2_3:Object,p2_4:Int,p2_5:Any,p2_6:Any): Any = {
          val x3712: Boolean = p10_3 eq null
          val x3714: Object = if (x3712) {          val x3713: Object = throw new NullPointerException()
x3713} else {p10_3}
          val x3715: Unit = unsafe.putInt(x3714,16, p10_6)
          val x3716: Unit = block_533(r,p9_0,p9_1,p9_2,p9_3,p9_4,p10_3,p9_6,p8_0,p8_1,p8_2,p8_3,p8_4,p8_5,p8_6,p8_7,p8_8,p8_9,p8_10,p8_11,p8_12,p8_13,p7_0,p7_1,p7_2,p7_3,p7_4,p7_5,p7_6,p7_7,p7_8,p7_9,p7_10,p7_11,p6_0,p6_1,p6_2,p6_3,p6_4,p6_5,p6_6,p6_7,p6_8,p5_0,p5_1,p5_2,p5_3,p5_4,p4_0,p4_1,p4_2,p4_3,p4_4,p4_5,p4_6,p4_7,p3_0,p3_1,p3_2,p3_3,p3_4,p3_5,p3_6,p2_0,p2_1,p2_2,p2_3,p2_4,p2_5,p2_6) // 5:<StringBuilder.append>(I)Ljava/lang/StringBuilder; // 32:<Arrays.copyOfRange>([CII)[C // 63:<String.<init>>([CII)V // 16:<StringBuilder.toString>()Ljava/lang/String; // 7:<StringBuilder.toString>()Ljava/lang/String; // 25:<TestInterpreter1$$anonfun$testB$1$Foo$2.bar>(I)I // 9:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply$mcII$sp>(I)I // 5:<TestInterpreter1$$anonfun$testB$1$$anonfun$1.apply>(I)I // 0:<BytecodeInterpreter_Impl.execute>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
x3716
}

}; BODY.RES }
}

warning: there were 156 deprecation warnings; re-run with -deprecation for details
one warning found
compilation: ok
hello: 8
9
